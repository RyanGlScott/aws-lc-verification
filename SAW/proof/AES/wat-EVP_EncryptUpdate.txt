2024/02/21 15:32:56 Started AES-GCM check.
2024/02/21 15:32:56 Running saw script verify-AES-GCM-quickcheck.saw.
[20:32:57.674] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/verify-AES-GCM-quickcheck.saw"
[20:32:57.675] Running AES-GCM quick check with evp_cipher_update_len=380
[20:32:57.675] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw"
[20:33:06.444] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/common/helpers.saw"
[20:33:06.453] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/common/memory.saw"
[20:33:06.789] Assume override OPENSSL_malloc
[20:33:06.999] Assume override OPENSSL_malloc
[20:33:07.147] Assume override OPENSSL_malloc
[20:33:08.430] Assume override OPENSSL_realloc
[20:33:08.577] Assume override OPENSSL_free
[20:33:08.722] Assume override OPENSSL_cleanse
[20:33:08.981] evp_cipher_update_len=380
[20:33:08.981] aesni_gcm_cipher_gcm_len=16
[20:33:08.981] aesni_gcm_cipher_len=374
[20:33:08.981] evp_cipher_update_bulk_encrypt=288
[20:33:08.981] bulk_encrypt_used=1
[20:33:08.981] length_after_bulk_encrypt=86
[20:33:08.982] whole_blocks_after_bulk_encrypt=5
[20:33:08.982] GHASH_length_blocks_encrypt=80
[20:33:08.982] evp_cipher_update_bulk_decrypt=288
[20:33:08.982] bulk_decrypt_used=1
[20:33:08.982] length_after_bulk_decrypt=86
[20:33:08.982] whole_blocks_after_bulk_decrypt=5
[20:33:08.982] GHASH_length_blocks_decrypt=80
[20:33:08.982] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/goal-rewrites.saw"
[20:33:08.986] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/goal-rewrites-AES.saw"
[20:33:09.137] WARNING: assuming goal prove_print is unsat
[20:33:09.268] WARNING: assuming goal prove_print is unsat
[20:33:09.394] WARNING: assuming goal prove_print is unsat
[20:33:09.520] WARNING: assuming goal prove_print is unsat
[20:33:09.647] WARNING: assuming goal prove_print is unsat
[20:33:09.772] WARNING: assuming goal prove_print is unsat
[20:33:09.899] WARNING: assuming goal prove_print is unsat
[20:33:10.025] WARNING: assuming goal prove_print is unsat
[20:33:10.153] WARNING: assuming goal prove_print is unsat
[20:33:10.279] WARNING: assuming goal prove_print is unsat
[20:33:10.402] WARNING: assuming goal prove_print is unsat
[20:33:10.527] WARNING: assuming goal prove_print is unsat
[20:33:10.651] WARNING: assuming goal prove_print is unsat
[20:33:10.779] WARNING: assuming goal prove_print is unsat
[20:33:10.905] WARNING: assuming goal prove_print is unsat
[20:33:11.033] WARNING: assuming goal prove_print is unsat
[20:33:11.159] WARNING: assuming goal prove_print is unsat
[20:33:11.283] WARNING: assuming goal prove_print is unsat
[20:33:11.410] WARNING: assuming goal prove_print is unsat
[20:33:11.532] WARNING: assuming goal prove_print is unsat
[20:33:11.659] WARNING: assuming goal prove_print is unsat
[20:33:11.784] WARNING: assuming goal prove_print is unsat
[20:33:11.910] WARNING: assuming goal prove_print is unsat
[20:33:12.040] WARNING: assuming goal prove_print is unsat
[20:33:12.168] WARNING: assuming goal prove_print is unsat
[20:33:12.292] WARNING: assuming goal prove_print is unsat
[20:33:12.418] WARNING: assuming goal prove_print is unsat
[20:33:12.542] WARNING: assuming goal prove_print is unsat
[20:33:12.668] WARNING: assuming goal prove_print is unsat
[20:33:12.794] WARNING: assuming goal prove_print is unsat
[20:33:12.920] WARNING: assuming goal prove_print is unsat
[20:33:13.050] WARNING: assuming goal prove_print is unsat
[20:33:13.180] WARNING: assuming goal prove_print is unsat
[20:33:13.311] WARNING: assuming goal prove_print is unsat
[20:33:13.439] WARNING: assuming goal prove_print is unsat
[20:33:13.564] WARNING: assuming goal prove_print is unsat
[20:33:13.686] WARNING: assuming goal prove_print is unsat
[20:33:13.813] WARNING: assuming goal prove_print is unsat
[20:33:13.940] WARNING: assuming goal prove_print is unsat
[20:33:14.067] WARNING: assuming goal prove_print is unsat
[20:33:14.196] WARNING: assuming goal prove_print is unsat
[20:33:14.324] WARNING: assuming goal prove_print is unsat
[20:33:14.451] WARNING: assuming goal prove_print is unsat
[20:33:14.580] WARNING: assuming goal prove_print is unsat
[20:33:14.709] WARNING: assuming goal prove_print is unsat
[20:33:14.837] WARNING: assuming goal prove_print is unsat
[20:33:14.964] WARNING: assuming goal prove_print is unsat
[20:33:15.094] WARNING: assuming goal prove_print is unsat
[20:33:15.221] WARNING: assuming goal prove_print is unsat
[20:33:15.348] WARNING: assuming goal prove_print is unsat
[20:33:15.482] WARNING: assuming goal prove_print is unsat
[20:33:15.612] WARNING: assuming goal prove_print is unsat
[20:33:15.740] WARNING: assuming goal prove_print is unsat
[20:33:15.875] WARNING: assuming goal prove_print is unsat
[20:33:16.004] WARNING: assuming goal prove_print is unsat
[20:33:16.140] WARNING: assuming goal prove_print is unsat
[20:33:16.285] WARNING: assuming goal prove_print is unsat
[20:33:16.419] WARNING: assuming goal prove_print is unsat
[20:33:16.551] WARNING: assuming goal prove_print is unsat
[20:33:16.686] WARNING: assuming goal prove_print is unsat
[20:33:16.816] WARNING: assuming goal prove_print is unsat
[20:33:16.942] WARNING: assuming goal prove_print is unsat
[20:33:17.069] WARNING: assuming goal prove_print is unsat
[20:33:17.200] WARNING: assuming goal prove_print is unsat
[20:33:17.327] WARNING: assuming goal prove_print is unsat
[20:33:17.453] WARNING: assuming goal prove_print is unsat
[20:33:17.581] WARNING: assuming goal prove_print is unsat
[20:33:17.709] WARNING: assuming goal prove_print is unsat
[20:33:17.836] WARNING: assuming goal prove_print is unsat
[20:33:17.963] WARNING: assuming goal prove_print is unsat
[20:33:18.091] WARNING: assuming goal prove_print is unsat
[20:33:18.217] WARNING: assuming goal prove_print is unsat
[20:33:18.345] WARNING: assuming goal prove_print is unsat
[20:33:18.478] WARNING: assuming goal prove_print is unsat
[20:33:18.606] WARNING: assuming goal prove_print is unsat
[20:33:18.736] WARNING: assuming goal prove_print is unsat
[20:33:18.866] WARNING: assuming goal prove_print is unsat
[20:33:18.993] WARNING: assuming goal prove_print is unsat
[20:33:19.142] WARNING: assuming goal prove_print is unsat
[20:33:19.286] WARNING: assuming goal prove_print is unsat
[20:33:19.426] WARNING: assuming goal prove_print is unsat
[20:33:19.557] WARNING: assuming goal prove_print is unsat
[20:33:19.692] WARNING: assuming goal prove_print is unsat
[20:33:19.825] WARNING: assuming goal prove_print is unsat
[20:33:19.961] WARNING: assuming goal prove_print is unsat
[20:33:20.093] WARNING: assuming goal prove_print is unsat
[20:33:20.229] WARNING: assuming goal prove_print is unsat
[20:33:20.362] WARNING: assuming goal prove_print is unsat
[20:33:20.496] WARNING: assuming goal prove_print is unsat
[20:33:20.631] WARNING: assuming goal prove_print is unsat
[20:33:20.764] WARNING: assuming goal prove_print is unsat
[20:33:20.897] WARNING: assuming goal prove_print is unsat
[20:33:21.035] WARNING: assuming goal prove_print is unsat
[20:33:21.168] WARNING: assuming goal prove_print is unsat
[20:33:21.300] WARNING: assuming goal prove_print is unsat
[20:33:21.433] WARNING: assuming goal prove_print is unsat
[20:33:21.567] WARNING: assuming goal prove_print is unsat
[20:33:21.699] WARNING: assuming goal prove_print is unsat
[20:33:21.834] WARNING: assuming goal prove_print is unsat
[20:33:21.966] WARNING: assuming goal prove_print is unsat
[20:33:22.098] WARNING: assuming goal prove_print is unsat
[20:33:22.233] WARNING: assuming goal prove_print is unsat
[20:33:22.364] WARNING: assuming goal prove_print is unsat
[20:33:22.490] WARNING: assuming goal prove_print is unsat
[20:33:22.621] WARNING: assuming goal prove_print is unsat
[20:33:22.746] WARNING: assuming goal prove_print is unsat
[20:33:22.874] WARNING: assuming goal prove_print is unsat
[20:33:23.001] WARNING: assuming goal prove_print is unsat
[20:33:23.129] WARNING: assuming goal prove_print is unsat
[20:33:23.256] WARNING: assuming goal prove_print is unsat
[20:33:23.387] WARNING: assuming goal prove_print is unsat
[20:33:23.514] WARNING: assuming goal prove_print is unsat
[20:33:23.640] WARNING: assuming goal prove_print is unsat
[20:33:23.795] WARNING: assuming goal prove_print is unsat
[20:33:23.936] WARNING: assuming goal prove_print is unsat
[20:33:24.068] WARNING: assuming goal prove_print is unsat
[20:33:24.198] WARNING: assuming goal prove_print is unsat
[20:33:24.332] WARNING: assuming goal prove_print is unsat
[20:33:24.468] WARNING: assuming goal prove_print is unsat
[20:33:24.635] WARNING: assuming goal prove_print is unsat
[20:33:24.802] WARNING: assuming goal prove_print is unsat
[20:33:24.934] WARNING: assuming goal prove_print is unsat
[20:33:25.066] WARNING: assuming goal prove_print is unsat
[20:33:25.195] WARNING: assuming goal prove_print is unsat
[20:33:25.325] WARNING: assuming goal prove_print is unsat
[20:33:25.586] WARNING: assuming goal prove_print is unsat
[20:33:25.717] WARNING: assuming goal prove_print is unsat
[20:33:25.847] WARNING: assuming goal prove_print is unsat
[20:33:25.978] WARNING: assuming goal prove_print is unsat
[20:33:26.113] WARNING: assuming goal prove_print is unsat
[20:33:26.247] WARNING: assuming goal prove_print is unsat
[20:33:26.378] WARNING: assuming goal prove_print is unsat
[20:33:26.511] WARNING: assuming goal prove_print is unsat
[20:33:26.661] WARNING: assuming goal prove_print is unsat
[20:33:26.807] WARNING: assuming goal prove_print is unsat
[20:33:26.944] WARNING: assuming goal prove_print is unsat
[20:33:27.077] WARNING: assuming goal prove_print is unsat
[20:33:27.212] WARNING: assuming goal prove_print is unsat
[20:33:27.346] WARNING: assuming goal prove_print is unsat
[20:33:27.478] WARNING: assuming goal prove_print is unsat
[20:33:27.615] WARNING: assuming goal prove_print is unsat
[20:33:27.749] WARNING: assuming goal prove_print is unsat
[20:33:27.884] WARNING: assuming goal prove_print is unsat
[20:33:28.019] WARNING: assuming goal prove_print is unsat
[20:33:28.157] WARNING: assuming goal prove_print is unsat
[20:33:28.294] WARNING: assuming goal prove_print is unsat
[20:33:28.430] WARNING: assuming goal prove_print is unsat
[20:33:28.567] WARNING: assuming goal prove_print is unsat
[20:33:28.702] WARNING: assuming goal prove_print is unsat
[20:33:28.839] WARNING: assuming goal prove_print is unsat
[20:33:28.982] WARNING: assuming goal prove_print is unsat
[20:33:29.110] WARNING: assuming goal prove_print is unsat
[20:33:29.210] WARNING: assuming goal prove_print is unsat
[20:33:29.269] WARNING: assuming goal prove_print is unsat
[20:33:29.326] WARNING: assuming goal prove_print is unsat
[20:33:29.387] WARNING: assuming goal prove_print is unsat
[20:33:29.446] WARNING: assuming goal prove_print is unsat
[20:33:29.505] WARNING: assuming goal prove_print is unsat
[20:33:29.564] WARNING: assuming goal prove_print is unsat
[20:33:29.622] WARNING: assuming goal prove_print is unsat
[20:33:29.681] WARNING: assuming goal prove_print is unsat
[20:33:29.741] WARNING: assuming goal prove_print is unsat
[20:33:29.800] WARNING: assuming goal prove_print is unsat
[20:33:29.858] WARNING: assuming goal prove_print is unsat
[20:33:30.053] WARNING: assuming goal prove_print is unsat
[20:33:30.208] WARNING: assuming goal prove_print is unsat
[20:33:30.336] WARNING: assuming goal prove_print is unsat
[20:33:30.464] WARNING: assuming goal prove_print is unsat
[20:33:30.593] WARNING: assuming goal prove_print is unsat
[20:33:30.762] WARNING: assuming goal prove_print is unsat
[20:33:30.992] WARNING: assuming goal prove_print is unsat
[20:33:31.167] WARNING: assuming goal prove_print is unsat
[20:33:31.335] WARNING: assuming goal prove_print is unsat
[20:33:31.502] WARNING: assuming goal prove_print is unsat
[20:33:31.503] WARNING: assuming goal prove_print is unsat
[20:33:31.640] WARNING: assuming goal prove_print is unsat
[20:33:31.640] WARNING: assuming goal prove_print is unsat
[20:33:31.778] WARNING: assuming goal prove_print is unsat
[20:33:31.779] WARNING: assuming goal prove_print is unsat
[20:33:31.945] WARNING: assuming goal prove_print is unsat
[20:33:32.075] WARNING: assuming goal prove_print is unsat
[20:33:32.206] WARNING: assuming goal prove_print is unsat
[20:33:32.335] WARNING: assuming goal prove_print is unsat
[20:33:32.460] WARNING: assuming goal prove_print is unsat
[20:33:32.586] WARNING: assuming goal prove_print is unsat
[20:33:32.715] WARNING: assuming goal prove_print is unsat
[20:33:32.838] WARNING: assuming goal prove_print is unsat
[20:33:32.965] WARNING: assuming goal prove_print is unsat
[20:33:33.092] WARNING: assuming goal prove_print is unsat
[20:33:33.219] WARNING: assuming goal prove_print is unsat
[20:33:33.346] WARNING: assuming goal prove_print is unsat
[20:33:33.473] WARNING: assuming goal prove_print is unsat
[20:33:33.601] WARNING: assuming goal prove_print is unsat
[20:33:33.732] WARNING: assuming goal prove_print is unsat
[20:33:33.788] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES.saw"
[20:33:34.316] Assume override aes_hw_set_encrypt_key
[20:33:34.695] Assume override aes_hw_encrypt
[20:33:35.075] Assume override aes_hw_encrypt
[20:33:35.473] Assume override aes_hw_decrypt
[20:33:35.873] Assume override aes_hw_decrypt
[20:33:35.873] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/GHASH.saw"
[20:33:36.100] Assume override gcm_init_avx
[20:33:36.359] Assume override gcm_gmult_avx
[20:33:36.752] Assume override gcm_ghash_avx
[20:33:37.060] Assume override gcm_ghash_avx
[20:33:37.729] gcm_ghash_avx len=16
[20:33:37.855] WARNING: assuming goal prove_print is unsat
[20:33:38.247] Assume override gcm_ghash_avx
[20:33:38.248] gcm_ghash_avx len=32
[20:33:38.372] WARNING: assuming goal prove_print is unsat
[20:33:38.762] Assume override gcm_ghash_avx
[20:33:38.762] gcm_ghash_avx len=48
[20:33:38.888] WARNING: assuming goal prove_print is unsat
[20:33:39.278] Assume override gcm_ghash_avx
[20:33:39.278] gcm_ghash_avx len=64
[20:33:39.407] WARNING: assuming goal prove_print is unsat
[20:33:39.800] Assume override gcm_ghash_avx
[20:33:39.800] gcm_ghash_avx len=80
[20:33:39.929] WARNING: assuming goal prove_print is unsat
[20:33:40.323] Assume override gcm_ghash_avx
[20:33:40.323] gcm_ghash_avx len=96
[20:33:40.450] WARNING: assuming goal prove_print is unsat
[20:33:42.625] Assume override gcm_ghash_avx
[20:33:42.625] gcm_ghash_avx len=112
[20:33:42.749] WARNING: assuming goal prove_print is unsat
[20:33:43.141] Assume override gcm_ghash_avx
[20:33:43.141] gcm_ghash_avx len=128
[20:33:43.265] WARNING: assuming goal prove_print is unsat
[20:33:43.662] Assume override gcm_ghash_avx
[20:33:43.662] gcm_ghash_avx len=144
[20:33:43.788] WARNING: assuming goal prove_print is unsat
[20:33:44.179] Assume override gcm_ghash_avx
[20:33:44.179] gcm_ghash_avx len=160
[20:33:44.307] WARNING: assuming goal prove_print is unsat
[20:33:44.698] Assume override gcm_ghash_avx
[20:33:44.698] gcm_ghash_avx len=176
[20:33:44.825] WARNING: assuming goal prove_print is unsat
[20:33:45.212] Assume override gcm_ghash_avx
[20:33:45.212] gcm_ghash_avx len=192
[20:33:45.337] WARNING: assuming goal prove_print is unsat
[20:33:45.731] Assume override gcm_ghash_avx
[20:33:45.731] gcm_ghash_avx len=208
[20:33:45.859] WARNING: assuming goal prove_print is unsat
[20:33:46.249] Assume override gcm_ghash_avx
[20:33:46.249] gcm_ghash_avx len=224
[20:33:46.374] WARNING: assuming goal prove_print is unsat
[20:33:46.767] Assume override gcm_ghash_avx
[20:33:46.767] gcm_ghash_avx len=240
[20:33:46.894] WARNING: assuming goal prove_print is unsat
[20:33:47.288] Assume override gcm_ghash_avx
[20:33:47.288] gcm_ghash_avx len=256
[20:33:47.416] WARNING: assuming goal prove_print is unsat
[20:33:47.812] Assume override gcm_ghash_avx
[20:33:47.812] gcm_ghash_avx len=272
[20:33:47.936] WARNING: assuming goal prove_print is unsat
[20:33:48.333] Assume override gcm_ghash_avx
[20:33:48.738] Assume override gcm_ghash_avx
[20:33:48.738] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw"
[20:33:49.291] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:49.720] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:49.761] aes_hw_ctr32 copy lemma: 1
[20:33:49.890] WARNING: assuming goal prove_print is unsat
[20:33:49.890] aes_hw_ctr32 copy lemma: 2
[20:33:50.018] WARNING: assuming goal prove_print is unsat
[20:33:50.018] aes_hw_ctr32 copy lemma: 3
[20:33:50.144] WARNING: assuming goal prove_print is unsat
[20:33:50.144] aes_hw_ctr32 copy lemma: 4
[20:33:50.273] WARNING: assuming goal prove_print is unsat
[20:33:50.273] aes_hw_ctr32 copy lemma: 5
[20:33:50.401] WARNING: assuming goal prove_print is unsat
[20:33:50.401] aes_hw_ctr32 copy lemma: 6
[20:33:50.531] WARNING: assuming goal prove_print is unsat
[20:33:50.531] aes_hw_ctr32 copy lemma: 7
[20:33:50.657] WARNING: assuming goal prove_print is unsat
[20:33:50.657] aes_hw_ctr32 copy lemma: 8
[20:33:50.783] WARNING: assuming goal prove_print is unsat
[20:33:50.783] aes_hw_ctr32 copy lemma: 9
[20:33:50.910] WARNING: assuming goal prove_print is unsat
[20:33:50.910] aes_hw_ctr32 copy lemma: 10
[20:33:51.037] WARNING: assuming goal prove_print is unsat
[20:33:51.037] aes_hw_ctr32 copy lemma: 11
[20:33:51.164] WARNING: assuming goal prove_print is unsat
[20:33:51.165] aes_hw_ctr32 copy lemma: 12
[20:33:51.293] WARNING: assuming goal prove_print is unsat
[20:33:51.293] aes_hw_ctr32 copy lemma: 13
[20:33:51.420] WARNING: assuming goal prove_print is unsat
[20:33:51.420] aes_hw_ctr32 copy lemma: 14
[20:33:51.548] WARNING: assuming goal prove_print is unsat
[20:33:51.548] aes_hw_ctr32 copy lemma: 15
[20:33:51.674] WARNING: assuming goal prove_print is unsat
[20:33:51.674] aes_hw_ctr32 copy lemma: 16
[20:33:51.801] WARNING: assuming goal prove_print is unsat
[20:33:51.801] aes_hw_ctr32 copy lemma: 17
[20:33:51.929] WARNING: assuming goal prove_print is unsat
[20:33:51.971] aes_hw_ctr32_encrypt blocks=1
[20:33:52.404] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:53.013] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:53.013] aes_hw_ctr32_encrypt blocks=2
[20:33:53.438] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:54.011] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:54.011] aes_hw_ctr32_encrypt blocks=3
[20:33:54.439] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:55.021] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:55.021] aes_hw_ctr32_encrypt blocks=4
[20:33:55.444] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:56.041] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:56.041] aes_hw_ctr32_encrypt blocks=5
[20:33:56.479] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:57.071] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:57.071] aes_hw_ctr32_encrypt blocks=6
[20:33:57.511] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:58.098] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:58.098] aes_hw_ctr32_encrypt blocks=7
[20:33:58.534] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:59.118] Assume override aes_hw_ctr32_encrypt_blocks
[20:33:59.118] aes_hw_ctr32_encrypt blocks=8
[20:33:59.564] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:00.154] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:00.154] aes_hw_ctr32_encrypt blocks=9
[20:34:00.597] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:04.045] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:04.045] aes_hw_ctr32_encrypt blocks=10
[20:34:04.474] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:05.052] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:05.052] aes_hw_ctr32_encrypt blocks=11
[20:34:05.486] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:06.062] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:06.062] aes_hw_ctr32_encrypt blocks=12
[20:34:06.493] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:07.065] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:07.065] aes_hw_ctr32_encrypt blocks=13
[20:34:07.497] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:08.076] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:08.076] aes_hw_ctr32_encrypt blocks=14
[20:34:08.503] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:09.076] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:09.076] aes_hw_ctr32_encrypt blocks=15
[20:34:09.505] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:10.071] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:10.071] aes_hw_ctr32_encrypt blocks=16
[20:34:10.500] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:11.068] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:11.068] aes_hw_ctr32_encrypt blocks=17
[20:34:11.498] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:12.072] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:12.643] Assume override aes_hw_ctr32_encrypt_blocks
[20:34:12.643] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw"
[20:34:13.423] Assume override aesni_gcm_encrypt
[20:34:14.206] Assume override aesni_gcm_decrypt
[20:34:14.811] Assume override aesni_gcm_encrypt
[20:34:15.423] Assume override aesni_gcm_decrypt
[20:34:15.468] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw"
[20:34:15.626] Assume override aes_gcm_from_cipher_ctx
[20:34:16.019] Assume override EVP_aes_256_gcm_init
[20:34:17.521] Assume override EVP_CipherInit_ex
[20:34:18.976] Assume override EVP_CipherInit_ex
[20:34:21.597] Assume override EVP_EncryptUpdate
[20:34:24.312] Assume override EVP_DecryptUpdate
[20:34:27.386] Verifying EVP_EncryptUpdate ...
[20:34:41.740] Simulating EVP_EncryptUpdate ...
[20:34:41.745] Registering overrides for `aes_gcm_from_cipher_ctx`
[20:34:41.745]   variant `Symbol "aes_gcm_from_cipher_ctx"`
[20:34:41.745] Registering overrides for `aes_hw_ctr32_encrypt_blocks`
[20:34:41.745]   variant `Symbol "aes_hw_ctr32_encrypt_blocks"`
[20:34:41.745] Registering overrides for `aes_hw_encrypt`
[20:34:41.745]   variant `Symbol "aes_hw_encrypt"`
[20:34:41.745] Registering overrides for `aesni_gcm_decrypt`
[20:34:41.745]   variant `Symbol "aesni_gcm_decrypt"`
[20:34:41.746] Registering overrides for `aesni_gcm_encrypt`
[20:34:41.746]   variant `Symbol "aesni_gcm_encrypt"`
[20:34:41.746] Registering overrides for `gcm_ghash_avx`
[20:34:41.746]   variant `Symbol "gcm_ghash_avx"`
[20:34:41.746] Registering overrides for `gcm_gmult_avx`
[20:34:41.746]   variant `Symbol "gcm_gmult_avx"`
[20:34:42.043] Matching 1 overrides of  aes_gcm_from_cipher_ctx ...
[20:34:42.043] Branching on 1 override variants of aes_gcm_from_cipher_ctx ...
[20:34:42.043] Applied override! aes_gcm_from_cipher_ctx
[20:34:42.085] Matching 1 overrides of  gcm_gmult_avx ...
[20:34:42.179] Branching on 1 override variants of gcm_gmult_avx ...
[20:34:43.673] Applied override! gcm_gmult_avx
[20:34:43.675] Matching 1 overrides of  aesni_gcm_encrypt ...
[20:34:44.890] Branching on 1 override variants of aesni_gcm_encrypt ...
[20:34:48.330] Applied override! aesni_gcm_encrypt
[20:34:51.996] Matching 1 overrides of  aes_hw_ctr32_encrypt_blocks ...
[20:34:52.900] Branching on 1 override variants of aes_hw_ctr32_encrypt_blocks ...
[20:35:04.039] Applied override! aes_hw_ctr32_encrypt_blocks
[20:35:04.040] Matching 1 overrides of  gcm_ghash_avx ...
[20:35:04.670] Branching on 1 override variants of gcm_ghash_avx ...
[20:35:06.865] Applied override! gcm_ghash_avx
[20:35:06.882] Matching 1 overrides of  aes_hw_encrypt ...
[20:35:06.885] Branching on 1 override variants of aes_hw_encrypt ...
[20:35:08.532] Applied override! aes_hw_encrypt
[20:35:11.705] Symbolic simulation completed with side conditions.
[20:35:12.913] Checking proof obligations EVP_EncryptUpdate ...
[20:35:13.566] Goal EVP_EncryptUpdate (goal number 0): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:14.457] Goal EVP_EncryptUpdate (goal number 1): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:15.374] Goal EVP_EncryptUpdate (goal number 2): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:16.267] Goal EVP_EncryptUpdate (goal number 3): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:17.160] Goal EVP_EncryptUpdate (goal number 4): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:18.054] Goal EVP_EncryptUpdate (goal number 5): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:19.001] Goal EVP_EncryptUpdate (goal number 6): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:19.904] Goal EVP_EncryptUpdate (goal number 7): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:20.830] Goal EVP_EncryptUpdate (goal number 8): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:21.767] Goal EVP_EncryptUpdate (goal number 9): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:22.648] Goal EVP_EncryptUpdate (goal number 10): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:23.564] Goal EVP_EncryptUpdate (goal number 11): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:24.474] Goal EVP_EncryptUpdate (goal number 12): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:25.393] Goal EVP_EncryptUpdate (goal number 13): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:26.317] Goal EVP_EncryptUpdate (goal number 14): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:27.213] Goal EVP_EncryptUpdate (goal number 15): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:28.121] Goal EVP_EncryptUpdate (goal number 16): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:29.060] Goal EVP_EncryptUpdate (goal number 17): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:29.963] Goal EVP_EncryptUpdate (goal number 18): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:30.896] Goal EVP_EncryptUpdate (goal number 19): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:31.828] Goal EVP_EncryptUpdate (goal number 20): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:32.734] Goal EVP_EncryptUpdate (goal number 21): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:33.631] Goal EVP_EncryptUpdate (goal number 22): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:34.524] Goal EVP_EncryptUpdate (goal number 23): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:35.414] Goal EVP_EncryptUpdate (goal number 24): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:36.303] Goal EVP_EncryptUpdate (goal number 25): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:37.186] Goal EVP_EncryptUpdate (goal number 26): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:38.083] Goal EVP_EncryptUpdate (goal number 27): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:38.953] Goal EVP_EncryptUpdate (goal number 28): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:39.876] Goal EVP_EncryptUpdate (goal number 29): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:40.837] Goal EVP_EncryptUpdate (goal number 30): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:41.727] Goal EVP_EncryptUpdate (goal number 31): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:42.622] Goal EVP_EncryptUpdate (goal number 32): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:43.527] Goal EVP_EncryptUpdate (goal number 33): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:44.466] Goal EVP_EncryptUpdate (goal number 34): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:45.366] Goal EVP_EncryptUpdate (goal number 35): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:46.249] Goal EVP_EncryptUpdate (goal number 36): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:47.170] Goal EVP_EncryptUpdate (goal number 37): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:48.082] Goal EVP_EncryptUpdate (goal number 38): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:48.986] Goal EVP_EncryptUpdate (goal number 39): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:49.920] Goal EVP_EncryptUpdate (goal number 40): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:50.809] Goal EVP_EncryptUpdate (goal number 41): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:51.752] Goal EVP_EncryptUpdate (goal number 42): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:52.690] Goal EVP_EncryptUpdate (goal number 43): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:53.591] Goal EVP_EncryptUpdate (goal number 44): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:54.530] Goal EVP_EncryptUpdate (goal number 45): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:55.466] Goal EVP_EncryptUpdate (goal number 46): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:56.346] Goal EVP_EncryptUpdate (goal number 47): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:35:57.243] Goal EVP_EncryptUpdate (goal number 48): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:58.132] Goal EVP_EncryptUpdate (goal number 49): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:35:59.038] Goal EVP_EncryptUpdate (goal number 50): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:35:59.945] Goal EVP_EncryptUpdate (goal number 51): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:36:00.885] Goal EVP_EncryptUpdate (goal number 52): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:36:01.805] Goal EVP_EncryptUpdate (goal number 53): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

EqTrue True

[20:36:02.773] Goal EVP_EncryptUpdate (goal number 54): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:36:03.698] Goal EVP_EncryptUpdate (goal number 55): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:36:04.628] Goal EVP_EncryptUpdate (goal number 56): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:36 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:36: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not (bvult 64 x@6 (bvNat 64 15))))

[20:36:05.545] Goal EVP_EncryptUpdate (goal number 57): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:32 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:32: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not
            (bvult 64 (bvAdd 64 (bvNat 64 18446744073709551615) x@6)
               (bvNat 64 14))))

[20:36:06.451] Goal EVP_EncryptUpdate (goal number 58): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:26 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:26: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not (bvult 64 x@6 (bvNat 64 15))))

[20:36:07.370] Goal EVP_EncryptUpdate (goal number 59): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:634:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:634:30: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not
            (bvult 64 (bvAdd 64 (bvNat 64 18446744073709551615) x@6)
               (bvNat 64 14))))

[20:36:08.317] Goal EVP_EncryptUpdate (goal number 60): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:639:7 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:639:7: error: in overrideBranches
No override specification applies for gcm_gmult_avx.
Arguments:
- concrete pointer: allocation = 7491, offset = 64
- concrete pointer: allocation = 7491, offset = 80
Run SAW with --sim-verbose=3 to see a description of each override.

EqTrue True

[20:36:09.273] Goal EVP_EncryptUpdate (goal number 61): safety assertion
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:114:31 in overrideBranches
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:114:31: error: in overrideBranches
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 68719476704
      x@7 = bvNat 64 18446744073709551602
      x@8 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@9 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@8 0) (bvNat 32 4294967295) x@4)
              x@8
      x@10 = bvEq 64 x@3 (bvAdd 64 x@7 x@9)
      x@11 = ite x@1 x@10 x@7 (bvNat 64 18446744073709551601)
      x@12 = bvAdd 64 x@9 x@11
      x@13 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@14 = bvNat 1 1
      x@15 = bvAdd 64 x@13 x@9
      x@16 = bvult 64 x@9 x@12
      x@17 = ite x@1 x@10 (bvNat 64 14) (bvNat 64 15)
      x@18 = bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@11)
               x@17
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@8 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@13 x@6)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@13 (append 32 32 Bool x@4 x@8)) x@6)))
                                 (bvult 64 (bvNat 64 2147483647) x@9))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@6 x@15) x@14 x@5)
                                       (ite x@2 (bvult 64 x@15 x@9) x@14 x@5)))))
                           x@10)
                        (bvEq 64 x@3 x@12))
                     (not (bvult 64 x@12 (bvNat 64 68719476736))))
                  x@16)
               x@18)
            (bvult 64 x@9 (bvAdd 64 x@12 x@17)))
         (Prelude.and (not x@16) (not x@18)))

[20:36:10.237] Goal EVP_EncryptUpdate (goal number 62): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:139:10 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:139:10: error: in overrideBranches
No override specification applies for aesni_gcm_encrypt.
Arguments:
- pointer with concrete allocation and symbolic offset: allocation = 7493
- pointer with concrete allocation and symbolic offset: allocation = 7494
- symbolic integer:  width = 64
- concrete pointer: allocation = 7491, offset = 384
- concrete pointer: allocation = 7491, offset = 0
- concrete pointer: allocation = 7491, offset = 80
- concrete pointer: allocation = 7491, offset = 64
The conjunction of these overrides' preconditions was unsatisfiable, meaning your override can never apply. You probably have unintentionally specified mutually exclusive/inconsistent preconditions.
- Name: aesni_gcm_encrypt
  Location: /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:114:31
  Argument types: 
  - i8*
  - i8*
  - i64
  - %struct.aes_key_st*
  - i8*
  - %struct.u128*
  - i8*
  Return type: i64
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 68719476704
      x@7 = bvNat 64 18446744073709551602
      x@8 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@9 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@8 0) (bvNat 32 4294967295) x@4)
              x@8
      x@10 = bvEq 64 x@3 (bvAdd 64 x@7 x@9)
      x@11 = ite x@1 x@10 x@7 (bvNat 64 18446744073709551601)
      x@12 = bvAdd 64 x@9 x@11
      x@13 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@14 = bvNat 1 1
      x@15 = bvAdd 64 x@13 x@9
      x@16 = ite x@1 x@10 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or (not (bvult 32 x@8 (bvNat 32 2147483648)))
                           (not (bvult 64 x@13 x@6)))
                        (not
                           (bvult 64 (bvAdd 64 x@13 (append 32 32 Bool x@4 x@8)) x@6)))
                     (bvult 64 (bvNat 64 2147483647) x@9))
                  (not
                     (bvEq 1 x@5
                        (bvOr 1 (ite x@2 (bvult 64 x@6 x@15) x@14 x@5)
                           (ite x@2 (bvult 64 x@15 x@9) x@14 x@5)))))
               x@10)
            (bvEq 64 x@3 x@12))
         (Prelude.and
            (Prelude.and
               (Prelude.and (bvult 64 x@12 (bvNat 64 68719476736))
                  (not (bvult 64 x@9 x@12)))
               (not
                  (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@11)
                     x@16)))
            (not (bvult 64 x@9 (bvAdd 64 x@12 x@16)))))

[20:36:11.234] Goal EVP_EncryptUpdate (goal number 63): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:653:8 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:653:8: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 96
      x@7 = bvNat 64 68719476704
      x@8 = bvNat 64 18446744073709551602
      x@9 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@10 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@9 0) (bvNat 32 4294967295) x@4)
               x@9
      x@11 = bvEq 64 x@3 (bvAdd 64 x@8 x@10)
      x@12 = ite x@1 x@11 x@8 (bvNat 64 18446744073709551601)
      x@13 = bvAdd 64 x@10 x@12
      x@14 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@15 = bvNat 1 1
      x@16 = bvAdd 64 x@14 x@10
      x@17 = ite x@1 x@11 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@9 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@14 x@7)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@14 (append 32 32 Bool x@4 x@9)) x@7)))
                                 (bvult 64 (bvNat 64 2147483647) x@10))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@7 x@16) x@15 x@5)
                                       (ite x@2 (bvult 64 x@16 x@10) x@15 x@5)))))
                           x@11)
                        (bvEq 64 x@3 x@13))
                     (not (bvult 64 x@13 (bvNat 64 68719476736))))
                  (bvult 64 x@10 x@13))
               (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@12) x@17))
            (bvult 64 x@10 (bvAdd 64 x@13 x@17)))
         (not
            (bvult 64 x@10
               (bvAdd 64 x@17
                  (ite x@1 (bvult 64 x@13 (bvNat 64 288)) x@3
                     (bvMul 64 x@6 (bvUDiv 64 x@13 x@6)))))))

[20:36:12.310] Goal EVP_EncryptUpdate (goal number 64): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:654:9 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:654:9: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 96
      x@7 = bvNat 64 68719476704
      x@8 = bvNat 64 18446744073709551602
      x@9 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@10 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@9 0) (bvNat 32 4294967295) x@4)
               x@9
      x@11 = bvEq 64 x@3 (bvAdd 64 x@8 x@10)
      x@12 = ite x@1 x@11 x@8 (bvNat 64 18446744073709551601)
      x@13 = bvAdd 64 x@10 x@12
      x@14 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@15 = bvNat 1 1
      x@16 = bvAdd 64 x@14 x@10
      x@17 = ite x@1 x@11 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@9 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@14 x@7)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@14 (append 32 32 Bool x@4 x@9)) x@7)))
                                 (bvult 64 (bvNat 64 2147483647) x@10))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@7 x@16) x@15 x@5)
                                       (ite x@2 (bvult 64 x@16 x@10) x@15 x@5)))))
                           x@11)
                        (bvEq 64 x@3 x@13))
                     (not (bvult 64 x@13 (bvNat 64 68719476736))))
                  (bvult 64 x@10 x@13))
               (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@12) x@17))
            (bvult 64 x@10 (bvAdd 64 x@13 x@17)))
         (not
            (bvult 64 x@10
               (bvAdd 64 x@17
                  (ite x@1 (bvult 64 x@13 (bvNat 64 288)) x@3
                     (bvMul 64 x@6 (bvUDiv 64 x@13 x@6)))))))

[20:36:13.418] Goal EVP_EncryptUpdate (goal number 65): safety assertion
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw:161:49 in overrideBranches
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw:161:49: error: in overrideBranches
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551615
      x@9 = bvNat 64 68719476704
      x@10 = bvNat 64 18446744073709551602
      x@11 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@12 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@11 0) (bvNat 32 4294967295)
                  x@5)
               x@11
      x@13 = bvEq 64 x@3 (bvAdd 64 x@10 x@12)
      x@14 = ite x@1 x@13 x@10 (bvNat 64 18446744073709551601)
      x@15 = bvAdd 64 x@12 x@14
      x@16 = ite x@1 (bvult 64 x@15 (bvNat 64 288)) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@15 x@7))
      x@17 = bvAdd 64 x@15 (bvMul 64 x@8 x@16)
      x@18 = bvShr 64 x@17 4
      x@19 = bvMul 64 x@4 x@18
      x@20 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@21 = bvNat 1 1
      x@22 = bvAdd 64 x@20 x@12
      x@23 = ite x@1 x@13 (bvNat 64 14) (bvNat 64 15)
      x@24 = bvAdd 64 x@23 x@16
      x@25 = bvult 64 x@12 x@19
      x@26 = bvult 64
               (bvAdd 64 x@12 (bvMul 64 (bvNat 64 18446744073709551600) x@18))
               x@24
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@11 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@20 x@9)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@20 (append 32 32 Bool x@5 x@11)) x@9)))
                                                      (bvult 64 (bvNat 64 2147483647) x@12))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@9 x@22) x@21 x@6)
                                                            (ite x@2 (bvult 64 x@22 x@12) x@21 x@6)))))
                                                x@13)
                                             (bvEq 64 x@3 x@15))
                                          (not (bvult 64 x@15 (bvNat 64 68719476736))))
                                       (bvult 64 x@12 x@15))
                                    (bvult 64 (bvMul 64 x@8 x@14) x@23))
                                 (bvult 64 (bvNat 64 3071) x@17))
                              (bvEq 64 x@3 (bvMul 64 x@4 (bvUDiv 64 x@17 x@4))))
                           (not (bvult 64 x@18 (bvNat 64 18))))
                        (not (bvult 64 x@3 x@18)))
                     x@25)
                  x@26)
               (bvult 64 x@12 (bvAdd 64 x@15 x@23)))
            (bvult 64 x@12 (bvAdd 64 x@24 x@19)))
         (Prelude.and (not x@25) (not x@26)))

[20:36:14.454] Goal EVP_EncryptUpdate (goal number 66): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:673:5 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:673:5: error: in overrideBranches
No override specification applies for aes_hw_ctr32_encrypt_blocks.
Arguments:
- pointer with concrete allocation and symbolic offset: allocation = 7493
- pointer with concrete allocation and symbolic offset: allocation = 7494
- symbolic integer:  width = 64
- concrete pointer: allocation = 7491, offset = 384
- concrete pointer: allocation = 7491, offset = 0
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551615
      x@9 = bvNat 64 68719476704
      x@10 = bvNat 64 18446744073709551602
      x@11 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@12 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@11 0) (bvNat 32 4294967295)
                  x@5)
               x@11
      x@13 = bvEq 64 x@3 (bvAdd 64 x@10 x@12)
      x@14 = ite x@1 x@13 x@10 (bvNat 64 18446744073709551601)
      x@15 = bvAdd 64 x@12 x@14
      x@16 = ite x@1 (bvult 64 x@15 (bvNat 64 288)) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@15 x@7))
      x@17 = bvAdd 64 x@15 (bvMul 64 x@8 x@16)
      x@18 = bvShr 64 x@17 4
      x@19 = bvMul 64 x@4 x@18
      x@20 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@21 = bvNat 1 1
      x@22 = bvAdd 64 x@20 x@12
      x@23 = ite x@1 x@13 (bvNat 64 14) (bvNat 64 15)
      x@24 = bvAdd 64 x@23 x@16
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or (not (bvult 32 x@11 (bvNat 32 2147483648)))
                                             (not (bvult 64 x@20 x@9)))
                                          (not
                                             (bvult 64 (bvAdd 64 x@20 (append 32 32 Bool x@5 x@11)) x@9)))
                                       (bvult 64 (bvNat 64 2147483647) x@12))
                                    (not
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@9 x@22) x@21 x@6)
                                             (ite x@2 (bvult 64 x@22 x@12) x@21 x@6)))))
                                 x@13)
                              (bvEq 64 x@3 x@15))
                           (not (bvult 64 x@15 (bvNat 64 68719476736))))
                        (bvult 64 x@12 x@15))
                     (bvult 64 (bvMul 64 x@8 x@14) x@23))
                  (bvult 64 (bvNat 64 3071) x@17))
               (bvEq 64 x@3 (bvMul 64 x@4 (bvUDiv 64 x@17 x@4))))
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and (bvult 64 x@18 (bvNat 64 18)) (bvult 64 x@3 x@18))
                     (not (bvult 64 x@12 x@19)))
                  (not
                     (bvult 64
                        (bvAdd 64 x@12 (bvMul 64 (bvNat 64 18446744073709551600) x@18))
                        x@24)))
               (not (bvult 64 x@12 (bvAdd 64 x@24 x@19)))))
         (bvult 64 x@12 (bvAdd 64 x@15 x@23)))

[20:36:15.636] Goal EVP_EncryptUpdate (goal number 67): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:676:8 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:676:8: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551615
      x@9 = bvNat 64 68719476704
      x@10 = bvNat 64 18446744073709551602
      x@11 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@12 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@11 0) (bvNat 32 4294967295)
                  x@5)
               x@11
      x@13 = bvEq 64 x@3 (bvAdd 64 x@10 x@12)
      x@14 = ite x@1 x@13 x@10 (bvNat 64 18446744073709551601)
      x@15 = bvAdd 64 x@12 x@14
      x@16 = ite x@1 (bvult 64 x@15 (bvNat 64 288)) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@15 x@7))
      x@17 = bvAdd 64 x@15 (bvMul 64 x@8 x@16)
      x@18 = bvShr 64 x@17 4
      x@19 = bvMul 64 x@4 x@18
      x@20 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@21 = bvNat 1 1
      x@22 = bvAdd 64 x@20 x@12
      x@23 = ite x@1 x@13 (bvNat 64 14) (bvNat 64 15)
      x@24 = bvAdd 64 x@23 x@16
      x@25 = bvMul 64 x@4 (bvUDiv 64 x@17 x@4)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@11 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@20 x@9)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@20 (append 32 32 Bool x@5 x@11)) x@9)))
                                                      (bvult 64 (bvNat 64 2147483647) x@12))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@9 x@22) x@21 x@6)
                                                            (ite x@2 (bvult 64 x@22 x@12) x@21 x@6)))))
                                                x@13)
                                             (bvEq 64 x@3 x@15))
                                          (not (bvult 64 x@15 (bvNat 64 68719476736))))
                                       (bvult 64 x@12 x@15))
                                    (bvult 64 (bvMul 64 x@8 x@14) x@23))
                                 (bvult 64 (bvNat 64 3071) x@17))
                              (bvEq 64 x@3 x@25))
                           (not (bvult 64 x@18 (bvNat 64 18))))
                        (not (bvult 64 x@3 x@18)))
                     (bvult 64 x@12 x@19))
                  (bvult 64
                     (bvAdd 64 x@12 (bvMul 64 (bvNat 64 18446744073709551600) x@18))
                     x@24))
               (bvult 64 x@12 (bvAdd 64 x@15 x@23)))
            (bvult 64 x@12 (bvAdd 64 x@24 x@19)))
         (not (bvult 64 x@12 (bvAdd 64 x@24 x@25))))

[20:36:16.629] Goal EVP_EncryptUpdate (goal number 68): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:677:9 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:677:9: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Poison value created
  Signed subtraction caused wrapping even though the `nsw` flag was set

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 (bvNat 64 288)) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvAdd 64 x@16 (bvMul 64 x@9 x@17)
      x@19 = bvShr 64 x@18 4
      x@20 = bvMul 64 x@4 x@19
      x@21 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@22 = bvNat 1 1
      x@23 = bvAdd 64 x@21 x@13
      x@24 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@25 = bvAdd 64 x@24 x@17
      x@26 = bvUDiv 64 x@18 x@4
      x@27 = bvMul 64 x@4 x@26
      x@28 = bvslt 64 x@18 x@3
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@21 x@10)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@21 (append 32 32 Bool x@5 x@12)) x@10)))
                                                         (bvult 64 (bvNat 64 2147483647) x@13))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@10 x@23) x@22 x@6)
                                                               (ite x@2 (bvult 64 x@23 x@13) x@22 x@6)))))
                                                   x@14)
                                                (bvEq 64 x@3 x@16))
                                             (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                          (bvult 64 x@13 x@16))
                                       (bvult 64 (bvMul 64 x@9 x@15) x@24))
                                    (bvult 64 (bvNat 64 3071) x@18))
                                 (bvEq 64 x@3 x@27))
                              (not (bvult 64 x@19 (bvNat 64 18))))
                           (not (bvult 64 x@3 x@19)))
                        (bvult 64 x@13 x@20))
                     (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@19)) x@25))
                  (bvult 64 x@13 (bvAdd 64 x@16 x@24)))
               (bvult 64 x@13 (bvAdd 64 x@25 x@20)))
            (boolEq x@28
               (bvslt 64 (bvAdd 64 x@18 (bvMul 64 x@8 x@26)) x@3)))
         (boolEq x@28 (bvslt 64 x@27 x@3)))

[20:36:17.631] Goal EVP_EncryptUpdate (goal number 69): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:678:5 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:678:5: error: in overrideBranches
No override specification applies for gcm_ghash_avx.
Arguments:
- concrete pointer: allocation = 7491, offset = 64
- concrete pointer: allocation = 7491, offset = 80
- pointer with concrete allocation and symbolic offset: allocation = 7494
- symbolic integer:  width = 64
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 288
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@7) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvAdd 64 x@17 (bvMul 64 x@10 x@18)
      x@20 = bvShr 64 x@19 4
      x@21 = bvMul 64 x@4 x@20
      x@22 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@23 = bvNat 1 1
      x@24 = bvAdd 64 x@22 x@14
      x@25 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@26 = bvAdd 64 x@25 x@18
      x@27 = bvUDiv 64 x@19 x@4
      x@28 = bvMul 64 x@4 x@27
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@22 x@11)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@22 (append 32 32 Bool x@5 x@13)) x@11)))
                                                      (bvult 64 (bvNat 64 2147483647) x@14))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@11 x@24) x@23 x@6)
                                                            (ite x@2 (bvult 64 x@24 x@14) x@23 x@6)))))
                                                x@15)
                                             (bvEq 64 x@3 x@17))
                                          (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                       (bvult 64 x@14 x@17))
                                    (bvult 64 (bvMul 64 x@10 x@16) x@25))
                                 (bvult 64 (bvNat 64 3071) x@19))
                              (bvEq 64 x@3 x@28))
                           (not (bvult 64 x@20 (bvNat 64 18))))
                        (not (bvult 64 x@3 x@20)))
                     (bvult 64 x@14 x@21))
                  (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@20)) x@26))
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and
                           (Prelude.and (bvult 64 x@28 x@7) (bvult 64 x@3 x@28))
                           (bvEq 64 x@3 (bvURem 64 x@28 x@4)))
                        (not (bvult 64 x@14 x@28)))
                     (not (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@27)) x@26)))
                  (not (bvult 64 x@14 (bvAdd 64 x@26 x@28)))))
            (bvult 64 x@14 (bvAdd 64 x@17 x@25)))
         (bvult 64 x@14 (bvAdd 64 x@26 x@21)))

[20:36:18.651] Goal EVP_EncryptUpdate (goal number 70): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:679:9 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:679:9: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:36:19.623] Goal EVP_EncryptUpdate (goal number 71): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 288
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@7) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvult 64 x@14 (bvAdd 64 x@27 x@29)
      x@32 = bvMul 64 x@9 x@28
      x@33 = ite x@1 x@30 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@23 x@11)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                (bvult 64 (bvNat 64 2147483647) x@14))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                      (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                          x@15)
                                       (bvEq 64 x@3 x@17))
                                    (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                 (bvult 64 x@14 x@17))
                              (bvult 64 (bvMul 64 x@10 x@16) x@26))
                           (bvult 64 (bvNat 64 3071) x@20))
                        (not x@31))
                     (Prelude.and (not x@30)
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or x@30 (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (not (bvult 64 x@29 x@7)))
                                          (not (bvult 64 x@3 x@29)))
                                       (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                    (bvult 64 x@14 x@29))
                                 (bvult 64 (bvAdd 64 x@14 x@32) x@27))
                              (bvult 64 x@14 (bvAdd 64 x@27 x@22)))
                           x@31)))
                  (bvEq 64 x@3 x@34))
               (bvEq 1 x@6
                  (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                     (ite x@2
                        (bvult 64 (bvNat 64 4294967295)
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                              x@33))
                        x@24
                        x@6))))
            (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@34)))
         (bvult 64 x@14 (bvAdd 64 x@17 x@26)))

[20:36:20.711] Goal EVP_EncryptUpdate (goal number 72): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 288
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@7) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvAdd 64 x@28 x@30
      x@33 = bvMul 64 x@9 x@29
      x@34 = ite x@1 x@31 x@3 x@33
      x@35 = bvAdd 64 x@20 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@23 x@11)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                (bvult 64 (bvNat 64 2147483647) x@14))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                      (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                          x@15)
                                       (bvEq 64 x@3 x@17))
                                    (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                 (bvult 64 x@14 x@17))
                              (bvult 64 (bvMul 64 x@10 x@16) x@27))
                           (bvult 64 (bvNat 64 3071) x@20))
                        (Prelude.and (not x@31)
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or x@31 (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (not (bvult 64 x@30 x@7)))
                                             (not (bvult 64 x@3 x@30)))
                                          (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                       (bvult 64 x@14 x@30))
                                    (bvult 64 (bvAdd 64 x@14 x@33) x@28))
                                 (bvult 64 x@14 (bvAdd 64 x@28 x@22)))
                              (bvult 64 x@14 x@32))))
                     (bvEq 64 x@3 x@35))
                  (bvEq 1 x@6
                     (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@24 x@6)
                        (ite x@2
                           (bvult 64 (bvNat 64 4294967295)
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@34))
                           x@24
                           x@6))))
               (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@35)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not (bvult 64 x@26 x@32)))

[20:36:21.770] Goal EVP_EncryptUpdate (goal number 73): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 288
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@7) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvult 64 x@14 (bvAdd 64 x@27 x@29)
      x@32 = bvMul 64 x@9 x@28
      x@33 = ite x@1 x@30 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@23 x@11)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                (bvult 64 (bvNat 64 2147483647) x@14))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                      (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                          x@15)
                                       (bvEq 64 x@3 x@17))
                                    (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                 (bvult 64 x@14 x@17))
                              (bvult 64 (bvMul 64 x@10 x@16) x@26))
                           (bvult 64 (bvNat 64 3071) x@20))
                        (not x@31))
                     (Prelude.and (not x@30)
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or x@30 (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (not (bvult 64 x@29 x@7)))
                                          (not (bvult 64 x@3 x@29)))
                                       (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                    (bvult 64 x@14 x@29))
                                 (bvult 64 (bvAdd 64 x@14 x@32) x@27))
                              (bvult 64 x@14 (bvAdd 64 x@27 x@22)))
                           x@31)))
                  (bvEq 64 x@3 x@34))
               (bvEq 1 x@6
                  (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                     (ite x@2
                        (bvult 64 (bvNat 64 4294967295)
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                              x@33))
                        x@24
                        x@6))))
            (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@34)))
         (bvult 64 x@14 (bvAdd 64 x@17 x@26)))

[20:36:22.891] Goal EVP_EncryptUpdate (goal number 74): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 288
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@7) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvAdd 64 x@28 x@30
      x@33 = bvMul 64 x@9 x@29
      x@34 = ite x@1 x@31 x@3 x@33
      x@35 = bvAdd 64 x@20 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@23 x@11)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                (bvult 64 (bvNat 64 2147483647) x@14))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                      (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                          x@15)
                                       (bvEq 64 x@3 x@17))
                                    (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                 (bvult 64 x@14 x@17))
                              (bvult 64 (bvMul 64 x@10 x@16) x@27))
                           (bvult 64 (bvNat 64 3071) x@20))
                        (Prelude.and (not x@31)
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or x@31 (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (not (bvult 64 x@30 x@7)))
                                             (not (bvult 64 x@3 x@30)))
                                          (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                       (bvult 64 x@14 x@30))
                                    (bvult 64 (bvAdd 64 x@14 x@33) x@28))
                                 (bvult 64 x@14 (bvAdd 64 x@28 x@22)))
                              (bvult 64 x@14 x@32))))
                     (bvEq 64 x@3 x@35))
                  (bvEq 1 x@6
                     (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@24 x@6)
                        (ite x@2
                           (bvult 64 (bvNat 64 4294967295)
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@34))
                           x@24
                           x@6))))
               (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@35)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not (bvult 64 x@26 x@32)))

[20:36:24.020] Goal EVP_EncryptUpdate (goal number 75): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) x@8
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@25 x@13)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                   (bvult 64 (bvNat 64 2147483647) x@16))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                         (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                             x@17)
                                          (bvEq 64 x@3 x@19))
                                       (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                    (bvult 64 x@16 x@19))
                                 (bvult 64 (bvMul 64 x@12 x@18) x@28))
                              (bvult 64 (bvNat 64 3071) x@22))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@23 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@23)))
                                                         (bvult 64 x@16 x@24))
                                                      (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                   (not (bvult 64 x@31 x@9)))
                                                (not (bvult 64 x@3 x@31)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                          (bvult 64 x@16 x@31))
                                       (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                 (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                    x@34))
                              x@26
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31) (ite x@1 x@17 x@8 x@4)))))

[20:36:25.169] Goal EVP_EncryptUpdate (goal number 76): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) x@8
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@25 x@13)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                   (bvult 64 (bvNat 64 2147483647) x@16))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                         (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                             x@17)
                                          (bvEq 64 x@3 x@19))
                                       (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                    (bvult 64 x@16 x@19))
                                 (bvult 64 (bvMul 64 x@12 x@18) x@29))
                              (bvult 64 (bvNat 64 3071) x@22))
                           (Prelude.and (not x@33)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@33 (not (bvult 64 x@23 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@23)))
                                                         (bvult 64 x@16 x@24))
                                                      (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                   (not (bvult 64 x@32 x@9)))
                                                (not (bvult 64 x@3 x@32)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                          (bvult 64 x@16 x@32))
                                       (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                 (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                        (bvEq 64 x@3 x@36))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                              x@26
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
               (bvEq 64 x@7 x@36))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32) (ite x@1 x@17 x@8 x@4)))))

[20:36:26.309] Goal EVP_EncryptUpdate (goal number 77): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) x@8
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@25 x@13)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                   (bvult 64 (bvNat 64 2147483647) x@16))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                         (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                             x@17)
                                          (bvEq 64 x@3 x@19))
                                       (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                    (bvult 64 x@16 x@19))
                                 (bvult 64 (bvMul 64 x@12 x@18) x@28))
                              (bvult 64 (bvNat 64 3071) x@22))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@23 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@23)))
                                                         (bvult 64 x@16 x@24))
                                                      (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                   (not (bvult 64 x@31 x@9)))
                                                (not (bvult 64 x@3 x@31)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                          (bvult 64 x@16 x@31))
                                       (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                 (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                    x@34))
                              x@26
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31) (ite x@1 x@17 x@8 x@4)))))

[20:36:27.429] Goal EVP_EncryptUpdate (goal number 78): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) x@8
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@25 x@13)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                   (bvult 64 (bvNat 64 2147483647) x@16))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                         (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                             x@17)
                                          (bvEq 64 x@3 x@19))
                                       (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                    (bvult 64 x@16 x@19))
                                 (bvult 64 (bvMul 64 x@12 x@18) x@29))
                              (bvult 64 (bvNat 64 3071) x@22))
                           (Prelude.and (not x@33)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@33 (not (bvult 64 x@23 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@23)))
                                                         (bvult 64 x@16 x@24))
                                                      (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                   (not (bvult 64 x@32 x@9)))
                                                (not (bvult 64 x@3 x@32)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                          (bvult 64 x@16 x@32))
                                       (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                 (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                        (bvEq 64 x@3 x@36))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                              x@26
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
               (bvEq 64 x@7 x@36))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32) (ite x@1 x@17 x@8 x@4)))))

[20:36:28.545] Goal EVP_EncryptUpdate (goal number 79): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@27))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@22)))
                                                         (bvult 64 x@15 x@23))
                                                      (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                   (not (bvult 64 x@30 x@8)))
                                                (not (bvult 64 x@3 x@30)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                          (bvult 64 x@15 x@30))
                                       (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                 (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                    x@33))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 x@4 (bvNat 64 17))))))

[20:36:29.652] Goal EVP_EncryptUpdate (goal number 80): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@28))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@22)))
                                                         (bvult 64 x@15 x@23))
                                                      (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                   (not (bvult 64 x@31 x@8)))
                                                (not (bvult 64 x@3 x@31)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                          (bvult 64 x@15 x@31))
                                       (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                 (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 x@4 (bvNat 64 17))))))

[20:36:30.776] Goal EVP_EncryptUpdate (goal number 81): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@27))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@22)))
                                                         (bvult 64 x@15 x@23))
                                                      (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                   (not (bvult 64 x@30 x@8)))
                                                (not (bvult 64 x@3 x@30)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                          (bvult 64 x@15 x@30))
                                       (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                 (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                    x@33))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 x@4 (bvNat 64 17))))))

[20:36:31.898] Goal EVP_EncryptUpdate (goal number 82): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@28))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@22)))
                                                         (bvult 64 x@15 x@23))
                                                      (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                   (not (bvult 64 x@31 x@8)))
                                                (not (bvult 64 x@3 x@31)))
                                             (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                          (bvult 64 x@15 x@31))
                                       (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                 (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 x@4 (bvNat 64 17))))))

[20:36:33.050] Goal EVP_EncryptUpdate (goal number 83): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@28))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@32 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                      (not (bvult 64 x@31 x@9)))
                                                   (not (bvult 64 x@3 x@31)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                             (bvult 64 x@16 x@31))
                                          (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                       (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                       x@34))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@34)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31)
                  (ite x@1 x@17 (bvNat 64 17) x@8)))))

[20:36:34.160] Goal EVP_EncryptUpdate (goal number 84): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@29))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@33)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@33 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                      (not (bvult 64 x@32 x@9)))
                                                   (not (bvult 64 x@3 x@32)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                             (bvult 64 x@16 x@32))
                                          (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                       (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                           (bvEq 64 x@3 x@36))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
                  (bvEq 64 x@7 x@36))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@35)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32)
                  (ite x@1 x@17 (bvNat 64 17) x@8)))))

[20:36:35.287] Goal EVP_EncryptUpdate (goal number 85): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@28))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@32 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                      (not (bvult 64 x@31 x@9)))
                                                   (not (bvult 64 x@3 x@31)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                             (bvult 64 x@16 x@31))
                                          (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                       (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                       x@34))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@34)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31)
                  (ite x@1 x@17 (bvNat 64 17) x@8)))))

[20:36:36.393] Goal EVP_EncryptUpdate (goal number 86): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@29))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@33)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@33 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                      (not (bvult 64 x@32 x@9)))
                                                   (not (bvult 64 x@3 x@32)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                             (bvult 64 x@16 x@32))
                                          (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                       (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                           (bvEq 64 x@3 x@36))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
                  (bvEq 64 x@7 x@36))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@35)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32)
                  (ite x@1 x@17 (bvNat 64 17) x@8)))))

[20:36:37.498] Goal EVP_EncryptUpdate (goal number 87): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@28))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@32 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                      (not (bvult 64 x@31 x@9)))
                                                   (not (bvult 64 x@3 x@31)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                             (bvult 64 x@16 x@31))
                                          (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                       (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                       x@34))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@34)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31)
                  (ite x@1 x@17 x@8 (bvNat 64 19))))))

[20:36:38.629] Goal EVP_EncryptUpdate (goal number 88): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@29))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@33)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@33 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                      (not (bvult 64 x@32 x@9)))
                                                   (not (bvult 64 x@3 x@32)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                             (bvult 64 x@16 x@32))
                                          (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                       (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                           (bvEq 64 x@3 x@36))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
                  (bvEq 64 x@7 x@36))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@35)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32)
                  (ite x@1 x@17 x@8 (bvNat 64 19))))))

[20:36:39.756] Goal EVP_EncryptUpdate (goal number 89): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@11 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@28))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@32 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@29))
                                                      (not (bvult 64 x@31 x@9)))
                                                   (not (bvult 64 x@3 x@31)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                             (bvult 64 x@16 x@31))
                                          (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                       (bvult 64 x@16 (bvAdd 64 x@29 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@29 x@31)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@12 x@16) x@18) x@21)
                                       x@34))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@34)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@28)))
         (not
            (bvult 64 x@16
               (bvAdd 64 (bvAdd 64 x@20 x@31)
                  (ite x@1 x@17 x@8 (bvNat 64 19))))))

[20:36:40.921] Goal EVP_EncryptUpdate (goal number 90): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 288
      x@10 = bvNat 64 96
      x@11 = bvNat 64 18446744073709551600
      x@12 = bvNat 64 18446744073709551615
      x@13 = bvNat 64 68719476704
      x@14 = bvNat 64 18446744073709551602
      x@15 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@16 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@15 0) (bvNat 32 4294967295)
                  x@5)
               x@15
      x@17 = bvEq 64 x@3 (bvAdd 64 x@14 x@16)
      x@18 = ite x@1 x@17 x@14 (bvNat 64 18446744073709551601)
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@3
               (bvMul 64 x@10 (bvUDiv 64 x@19 x@10))
      x@21 = bvMul 64 x@12 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@4 x@23
      x@25 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = bvAdd 64 x@12 x@16
      x@29 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@30 = bvAdd 64 x@29 x@20
      x@31 = bvUDiv 64 x@22 x@4
      x@32 = bvMul 64 x@4 x@31
      x@33 = bvEq 64 x@3 x@32
      x@34 = bvMul 64 x@11 x@31
      x@35 = ite x@1 x@33 x@3 x@34
      x@36 = bvAdd 64 x@22 x@35
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@15 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@25 x@13)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@5 x@15)) x@13)))
                                                      (bvult 64 (bvNat 64 2147483647) x@16))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@13 x@27) x@26 x@6)
                                                            (ite x@2 (bvult 64 x@27 x@16) x@26 x@6)))))
                                                x@17)
                                             (bvEq 64 x@3 x@19))
                                          (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                       (bvult 64 x@16 x@19))
                                    (bvult 64 (bvMul 64 x@12 x@18) x@29))
                                 (bvult 64 (bvNat 64 3071) x@22))
                              (Prelude.and (not x@33)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (Prelude.or x@33 (not (bvult 64 x@23 x@8)))
                                                               (not (bvult 64 x@3 x@23)))
                                                            (bvult 64 x@16 x@24))
                                                         (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@11 x@23)) x@30))
                                                      (not (bvult 64 x@32 x@9)))
                                                   (not (bvult 64 x@3 x@32)))
                                                (not (bvEq 64 x@3 (bvURem 64 x@32 x@4))))
                                             (bvult 64 x@16 x@32))
                                          (bvult 64 (bvAdd 64 x@16 x@34) x@30))
                                       (bvult 64 x@16 (bvAdd 64 x@30 x@24)))
                                    (bvult 64 x@16 (bvAdd 64 x@30 x@32)))))
                           (bvEq 64 x@3 x@36))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@36 x@4) x@26 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@28 x@18) x@21) x@35))
                                 x@26
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@36)))
                  (bvEq 64 x@7 x@36))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                        x@21)
                     x@35)))
            (bvult 64 x@16 (bvAdd 64 x@19 x@29)))
         (not
            (bvult 64 x@28
               (bvAdd 64 (bvAdd 64 x@20 x@32)
                  (ite x@1 x@17 x@8 (bvNat 64 19))))))

[20:36:42.065] Goal EVP_EncryptUpdate (goal number 91): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                         (not (bvult 64 x@30 x@8)))
                                                      (not (bvult 64 x@3 x@30)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                (bvult 64 x@15 x@30))
                                             (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                          x@33))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 19) (bvNat 64 20))))))

[20:36:43.190] Goal EVP_EncryptUpdate (goal number 92): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@32)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                         (not (bvult 64 x@31 x@8)))
                                                      (not (bvult 64 x@3 x@31)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                (bvult 64 x@15 x@31))
                                             (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                              (bvEq 64 x@3 x@35))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                     (bvEq 64 x@7 x@35))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 19) (bvNat 64 20))))))

[20:36:44.308] Goal EVP_EncryptUpdate (goal number 93): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                         (not (bvult 64 x@30 x@8)))
                                                      (not (bvult 64 x@3 x@30)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                (bvult 64 x@15 x@30))
                                             (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                          x@33))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 19) (bvNat 64 20))))))

[20:36:45.395] Goal EVP_EncryptUpdate (goal number 94): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@32)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                         (not (bvult 64 x@31 x@8)))
                                                      (not (bvult 64 x@3 x@31)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                (bvult 64 x@15 x@31))
                                             (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                              (bvEq 64 x@3 x@35))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                     (bvEq 64 x@7 x@35))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 19) (bvNat 64 20))))))

[20:36:46.543] Goal EVP_EncryptUpdate (goal number 95): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                         (not (bvult 64 x@30 x@8)))
                                                      (not (bvult 64 x@3 x@30)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                (bvult 64 x@15 x@30))
                                             (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                          x@33))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 20) (bvNat 64 21))))))

[20:36:47.618] Goal EVP_EncryptUpdate (goal number 96): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@32)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                         (not (bvult 64 x@31 x@8)))
                                                      (not (bvult 64 x@3 x@31)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                (bvult 64 x@15 x@31))
                                             (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                              (bvEq 64 x@3 x@35))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                     (bvEq 64 x@7 x@35))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 20) (bvNat 64 21))))))

[20:36:48.712] Goal EVP_EncryptUpdate (goal number 97): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                         (not (bvult 64 x@30 x@8)))
                                                      (not (bvult 64 x@3 x@30)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                (bvult 64 x@15 x@30))
                                             (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                          x@33))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 20) (bvNat 64 21))))))

[20:36:49.818] Goal EVP_EncryptUpdate (goal number 98): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@24 x@12)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                         (bvult 64 (bvNat 64 2147483647) x@15))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                               (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                   x@16)
                                                (bvEq 64 x@3 x@18))
                                             (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                          (bvult 64 x@15 x@18))
                                       (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                    (bvult 64 (bvNat 64 3071) x@21))
                                 (Prelude.and (not x@32)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                  (not (bvult 64 x@3 x@22)))
                                                               (bvult 64 x@15 x@23))
                                                            (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                         (not (bvult 64 x@31 x@8)))
                                                      (not (bvult 64 x@3 x@31)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                (bvult 64 x@15 x@31))
                                             (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                              (bvEq 64 x@3 x@35))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                    x@25
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                     (bvEq 64 x@7 x@35))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 20) (bvNat 64 21))))))

[20:36:50.932] Goal EVP_EncryptUpdate (goal number 99): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                            (not (bvult 64 x@30 x@8)))
                                                         (not (bvult 64 x@3 x@30)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                   (bvult 64 x@15 x@30))
                                                (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                             x@33))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 21) (bvNat 64 22))))))

[20:36:52.070] Goal EVP_EncryptUpdate (goal number 100): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@32)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                            (not (bvult 64 x@31 x@8)))
                                                         (not (bvult 64 x@3 x@31)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                   (bvult 64 x@15 x@31))
                                                (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                 (bvEq 64 x@3 x@35))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                        (bvEq 64 x@7 x@35))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 21) (bvNat 64 22))))))

[20:36:53.216] Goal EVP_EncryptUpdate (goal number 101): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                            (not (bvult 64 x@30 x@8)))
                                                         (not (bvult 64 x@3 x@30)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                   (bvult 64 x@15 x@30))
                                                (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                             x@33))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 21) (bvNat 64 22))))))

[20:36:54.334] Goal EVP_EncryptUpdate (goal number 102): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@32)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                            (not (bvult 64 x@31 x@8)))
                                                         (not (bvult 64 x@3 x@31)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                   (bvult 64 x@15 x@31))
                                                (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                 (bvEq 64 x@3 x@35))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                        (bvEq 64 x@7 x@35))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 21) (bvNat 64 22))))))

[20:36:55.450] Goal EVP_EncryptUpdate (goal number 103): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                            (not (bvult 64 x@30 x@8)))
                                                         (not (bvult 64 x@3 x@30)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                   (bvult 64 x@15 x@30))
                                                (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                             x@33))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 22) (bvNat 64 23))))))

[20:36:56.551] Goal EVP_EncryptUpdate (goal number 104): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@32)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                            (not (bvult 64 x@31 x@8)))
                                                         (not (bvult 64 x@3 x@31)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                   (bvult 64 x@15 x@31))
                                                (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                 (bvEq 64 x@3 x@35))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                        (bvEq 64 x@7 x@35))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 22) (bvNat 64 23))))))

[20:36:57.682] Goal EVP_EncryptUpdate (goal number 105): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                            (not (bvult 64 x@30 x@8)))
                                                         (not (bvult 64 x@3 x@30)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                   (bvult 64 x@15 x@30))
                                                (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                             x@33))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 22) (bvNat 64 23))))))

[20:36:58.781] Goal EVP_EncryptUpdate (goal number 106): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@24 x@12)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                            (bvult 64 (bvNat 64 2147483647) x@15))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                  (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                      x@16)
                                                   (bvEq 64 x@3 x@18))
                                                (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                             (bvult 64 x@15 x@18))
                                          (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                       (bvult 64 (bvNat 64 3071) x@21))
                                    (Prelude.and (not x@32)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                     (not (bvult 64 x@3 x@22)))
                                                                  (bvult 64 x@15 x@23))
                                                               (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                            (not (bvult 64 x@31 x@8)))
                                                         (not (bvult 64 x@3 x@31)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                   (bvult 64 x@15 x@31))
                                                (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                          (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                 (bvEq 64 x@3 x@35))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                       x@25
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                        (bvEq 64 x@7 x@35))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 22) (bvNat 64 23))))))

[20:36:59.923] Goal EVP_EncryptUpdate (goal number 107): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                               (not (bvult 64 x@30 x@8)))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                x@33))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 23) (bvNat 64 24))))))

[20:37:01.040] Goal EVP_EncryptUpdate (goal number 108): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@32)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                               (not (bvult 64 x@31 x@8)))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                    (bvEq 64 x@3 x@35))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                           (bvEq 64 x@7 x@35))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 23) (bvNat 64 24))))))

[20:37:02.148] Goal EVP_EncryptUpdate (goal number 109): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                               (not (bvult 64 x@30 x@8)))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                x@33))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 23) (bvNat 64 24))))))

[20:37:03.281] Goal EVP_EncryptUpdate (goal number 110): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@32)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                               (not (bvult 64 x@31 x@8)))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                    (bvEq 64 x@3 x@35))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                           (bvEq 64 x@7 x@35))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 23) (bvNat 64 24))))))

[20:37:04.382] Goal EVP_EncryptUpdate (goal number 111): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                               (not (bvult 64 x@30 x@8)))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                x@33))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 24) (bvNat 64 25))))))

[20:37:05.502] Goal EVP_EncryptUpdate (goal number 112): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@32)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                               (not (bvult 64 x@31 x@8)))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                    (bvEq 64 x@3 x@35))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                           (bvEq 64 x@7 x@35))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 24) (bvNat 64 25))))))

[20:37:06.617] Goal EVP_EncryptUpdate (goal number 113): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                               (not (bvult 64 x@30 x@8)))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                x@33))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 24) (bvNat 64 25))))))

[20:37:07.727] Goal EVP_EncryptUpdate (goal number 114): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@24 x@12)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                               (bvult 64 (bvNat 64 2147483647) x@15))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                     (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                         x@16)
                                                      (bvEq 64 x@3 x@18))
                                                   (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                (bvult 64 x@15 x@18))
                                             (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                          (bvult 64 (bvNat 64 3071) x@21))
                                       (Prelude.and (not x@32)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                               (not (bvult 64 x@31 x@8)))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                             (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                    (bvEq 64 x@3 x@35))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                          x@25
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                           (bvEq 64 x@7 x@35))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 24) (bvNat 64 25))))))

[20:37:08.830] Goal EVP_EncryptUpdate (goal number 115): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                  (not (bvult 64 x@30 x@8)))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                   x@33))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 25) (bvNat 64 26))))))

[20:37:09.936] Goal EVP_EncryptUpdate (goal number 116): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@32)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                  (not (bvult 64 x@31 x@8)))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                       (bvEq 64 x@3 x@35))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                              (bvEq 64 x@7 x@35))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 25) (bvNat 64 26))))))

[20:37:11.047] Goal EVP_EncryptUpdate (goal number 117): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                  (not (bvult 64 x@30 x@8)))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                   x@33))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 25) (bvNat 64 26))))))

[20:37:12.136] Goal EVP_EncryptUpdate (goal number 118): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@32)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                  (not (bvult 64 x@31 x@8)))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                       (bvEq 64 x@3 x@35))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                              (bvEq 64 x@7 x@35))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 25) (bvNat 64 26))))))

[20:37:13.248] Goal EVP_EncryptUpdate (goal number 119): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                  (not (bvult 64 x@30 x@8)))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                   x@33))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 26) (bvNat 64 27))))))

[20:37:14.351] Goal EVP_EncryptUpdate (goal number 120): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@32)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                  (not (bvult 64 x@31 x@8)))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                       (bvEq 64 x@3 x@35))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                              (bvEq 64 x@7 x@35))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 26) (bvNat 64 27))))))

[20:37:15.481] Goal EVP_EncryptUpdate (goal number 121): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                  (not (bvult 64 x@30 x@8)))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                   x@33))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 26) (bvNat 64 27))))))

[20:37:16.612] Goal EVP_EncryptUpdate (goal number 122): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@24 x@12)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@15))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                            x@16)
                                                         (bvEq 64 x@3 x@18))
                                                      (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                   (bvult 64 x@15 x@18))
                                                (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                             (bvult 64 (bvNat 64 3071) x@21))
                                          (Prelude.and (not x@32)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                           (not (bvult 64 x@3 x@22)))
                                                                        (bvult 64 x@15 x@23))
                                                                     (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                  (not (bvult 64 x@31 x@8)))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                       (bvEq 64 x@3 x@35))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                             x@25
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                              (bvEq 64 x@7 x@35))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 26) (bvNat 64 27))))))

[20:37:17.732] Goal EVP_EncryptUpdate (goal number 123): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                     (not (bvult 64 x@30 x@8)))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@15 x@30))
                                                         (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                      (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                      x@33))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 27) (bvNat 64 28))))))

[20:37:18.869] Goal EVP_EncryptUpdate (goal number 124): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@32)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                     (not (bvult 64 x@31 x@8)))
                                                                  (not (bvult 64 x@3 x@31)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                            (bvult 64 x@15 x@31))
                                                         (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                      (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                          (bvEq 64 x@3 x@35))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                                 (bvEq 64 x@7 x@35))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@34)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 27) (bvNat 64 28))))))

[20:37:20.015] Goal EVP_EncryptUpdate (goal number 125): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                     (not (bvult 64 x@30 x@8)))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@15 x@30))
                                                         (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                      (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                      x@33))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 27) (bvNat 64 28))))))

[20:37:21.155] Goal EVP_EncryptUpdate (goal number 126): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@32)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                     (not (bvult 64 x@31 x@8)))
                                                                  (not (bvult 64 x@3 x@31)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                            (bvult 64 x@15 x@31))
                                                         (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                      (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                          (bvEq 64 x@3 x@35))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                                 (bvEq 64 x@7 x@35))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@34)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 27) (bvNat 64 28))))))

[20:37:22.248] Goal EVP_EncryptUpdate (goal number 127): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                     (not (bvult 64 x@30 x@8)))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@15 x@30))
                                                         (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                      (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                      x@33))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 28) (bvNat 64 29))))))

[20:37:23.370] Goal EVP_EncryptUpdate (goal number 128): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:30 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:30: error: in CRYPTO_gcm128_encrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@32)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                     (not (bvult 64 x@31 x@8)))
                                                                  (not (bvult 64 x@3 x@31)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                            (bvult 64 x@15 x@31))
                                                         (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                      (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                          (bvEq 64 x@3 x@35))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                                 (bvEq 64 x@7 x@35))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@34)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 28) (bvNat 64 29))))))

[20:37:24.496] Goal EVP_EncryptUpdate (goal number 129): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:21 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:21: error: in CRYPTO_gcm128_encrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                                                     (not (bvult 64 x@30 x@8)))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@15 x@30))
                                                         (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                      (bvult 64 x@15 (bvAdd 64 x@28 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@28 x@30)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                                      x@33))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 28) (bvNat 64 29))))))

[20:37:25.671] Goal EVP_EncryptUpdate (goal number 130): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:686:28 in CRYPTO_gcm128_encrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:686:28: error: in CRYPTO_gcm128_encrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 288
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@24 x@12)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@15))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                                           (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                               x@16)
                                                            (bvEq 64 x@3 x@18))
                                                         (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                      (bvult 64 x@15 x@18))
                                                   (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                                (bvult 64 (bvNat 64 3071) x@21))
                                             (Prelude.and (not x@32)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@32 (not (bvult 64 x@22 (bvNat 64 18))))
                                                                              (not (bvult 64 x@3 x@22)))
                                                                           (bvult 64 x@15 x@23))
                                                                        (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                                                     (not (bvult 64 x@31 x@8)))
                                                                  (not (bvult 64 x@3 x@31)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                            (bvult 64 x@15 x@31))
                                                         (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                      (bvult 64 x@15 (bvAdd 64 x@29 x@23)))
                                                   (bvult 64 x@15 (bvAdd 64 x@29 x@31)))))
                                          (bvEq 64 x@3 x@35))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                                x@25
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                                 (bvEq 64 x@7 x@35))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                       x@20)
                                    x@34)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                    x@20)
                                 x@34)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                 x@20)
                              x@34)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                              x@20)
                           x@34)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                           x@20)
                        x@34)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 28) (bvNat 64 29))))))

[20:37:26.893] Goal EVP_EncryptUpdate (goal number 131): LLVM points-to (array prefix)
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3 in llvm_points_to_array_prefix
Tags: "output buffer postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3: error: in llvm_points_to_array_prefix
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 32 Bool
      x@3 = Vec 8 Bool
      x@4 = Vec 1 Bool
      x@5 = Array x@1 x@3
      x@6 = bvNat 64 0
      x@7 = bvNat 64 16
      x@8 = bvNat 32 1
      x@9 = bvNat 32 0
      x@10 = bvNat 1 0
      x@11 = bvNat 64 1
      x@12 = bvNat 64 2
      x@13 = bvNat 64 3
      x@14 = bvNat 64 4
      x@15 = bvNat 64 5
      x@16 = bvNat 64 6
      x@17 = bvNat 64 7
      x@18 = bvNat 64 8
      x@19 = bvNat 64 9
      x@20 = bvNat 64 10
      x@21 = bvNat 64 11
      x@22 = bvNat 64 12
      x@23 = bvNat 64 13
      x@24 = bvNat 64 14
      x@25 = bvNat 64 15
      x@26 = bvNat 64 17
      x@27 = bvNat 64 18
      x@28 = bvNat 64 19
      x@29 = bvNat 64 20
      x@30 = bvNat 64 21
      x@31 = bvNat 64 22
      x@32 = bvNat 64 23
      x@33 = bvNat 64 24
      x@34 = bvNat 64 25
      x@35 = bvNat 64 26
      x@36 = bvNat 64 27
      x@37 = bvNat 64 28
      x@38 = bvNat 64 29
      x@39 = bvNat 64 288
      x@40 = bvNat 64 96
      x@41 = bvNat 64 18446744073709551600
      x@42 = bvNat 64 18446744073709551615
      x@43 = at 16 x@3 Xi#1568 15
      x@44 = bvNat 64 68719476704
      x@45 = bvNat 64 18446744073709551602
      x@46 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@47 = bvNat 64 18446744073709551601
      x@48 = bvNat 8 0
      x@49 = append 32 32 Bool
               (ite x@2 (at 32 Bool x@46 0) (bvNat 32 4294967295) x@9)
               x@46
      x@50 = bvEq 64 x@6 (bvAdd 64 x@45 x@49)
      x@51 = ite x@1 x@50 x@45 x@47
      x@52 = bvAdd 64 x@49 x@51
      x@53 = bvult 64 x@52 x@39
      x@54 = ite x@1 x@53 x@6 (bvMul 64 x@40 (bvUDiv 64 x@52 x@40))
      x@55 = bvMul 64 x@42 x@54
      x@56 = bvAdd 64 x@52 x@55
      x@57 = bvShr 64 x@56 4
      x@58 = bvMul 64 x@7 x@57
      x@59 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@60 = bvNat 1 1
      x@61 = bvAdd 64 x@59 x@49
      x@62 = aes_hw_encrypt
               [ x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48
               , x@48 ]
               key#1566
      x@63 = Cryptol::pmod (TCNum 129) (TCNum 128)
               (append 128 1 Bool
                  (append 64 64 Bool
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@62 0) (at 16 x@3 x@62 1))
                                       (at 16 x@3 x@62 2))
                                    (at 16 x@3 x@62 3))
                                 (at 16 x@3 x@62 4))
                              (at 16 x@3 x@62 5))
                           (at 16 x@3 x@62 6))
                        (at 16 x@3 x@62 7))
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@62 8) (at 16 x@3 x@62 9))
                                       (at 16 x@3 x@62 10))
                                    (at 16 x@3 x@62 11))
                                 (at 16 x@3 x@62 12))
                              (at 16 x@3 x@62 13))
                           (at 16 x@3 x@62 14))
                        (at 16 x@3 x@62 15)))
                  x@10)
               (bvNat 129 598152598103212142806713177126155059201)
      x@64 = ite x@1 x@50 x@24 x@25
      x@65 = bvAdd 64 x@64 x@54
      x@66 = bvUDiv 64 x@56 x@7
      x@67 = bvMul 64 x@7 x@66
      x@68 = bvEq 64 x@6 x@67
      x@69 = bvAdd 64 x@65 x@67
      x@70 = bvMul 64 x@41 x@66
      x@71 = ite x@1 x@68 x@6 x@70
      x@72 = bvAdd 64 x@56 x@71
      x@73 = at 12 x@3 iv#1567 0
      x@74 = at 12 x@3 iv#1567 1
      x@75 = at 12 x@3 iv#1567 2
      x@76 = at 12 x@3 iv#1567 3
      x@77 = at 12 x@3 iv#1567 4
      x@78 = at 12 x@3 iv#1567 5
      x@79 = at 12 x@3 iv#1567 6
      x@80 = at 12 x@3 iv#1567 7
      x@81 = at 12 x@3 iv#1567 8
      x@82 = at 12 x@3 iv#1567 9
      x@83 = at 12 x@3 iv#1567 10
      x@84 = at 12 x@3 iv#1567 11
      x@85 = bvAdd 64 x@47 x@49
      x@86 = bvAdd 64 x@25 x@59
      x@87 = slice Bool 32 32 0 (bvUDiv 64 x@86 x@7)
      x@88 = bvAdd 32 x@8 x@87
      x@89 = aes_hw_encrypt
               [ x@73
               , x@74
               , x@75
               , x@76
               , x@77
               , x@78
               , x@79
               , x@80
               , x@81
               , x@82
               , x@83
               , x@84
               , slice Bool 0 8 24 x@88
               , slice Bool 8 8 16 x@88
               , slice Bool 16 8 8 x@88
               , slice Bool 24 8 0 x@88 ]
               key#1566
      x@90 = bvAdd 32 (bvNat 32 2) x@87
      x@91 = slice Bool 0 8 24 x@90
      x@92 = slice Bool 8 8 16 x@90
      x@93 = slice Bool 16 8 8 x@90
      x@94 = slice Bool 24 8 0 x@90
      x@95 = [x@91, x@92, x@93, x@94]
      x@96 = append 248 8 Bool
               (append 240 8 Bool
                  (append 232 8 Bool
                     (append 224 8 Bool
                        (append 216 8 Bool
                           (append 208 8 Bool
                              (append 200 8 Bool
                                 (append 192 8 Bool
                                    (append 184 8 Bool
                                       (append 176 8 Bool
                                          (append 168 8 Bool
                                             (append 160 8 Bool
                                                (append 152 8 Bool
                                                   (append 144 8 Bool
                                                      (append 136 8 Bool
                                                         (append 128 8 Bool
                                                            (append 120 8 Bool
                                                               (append 112 8 Bool
                                                                  (append 104 8 Bool
                                                                     (append 96 8 Bool
                                                                        (append 88 8 Bool
                                                                           (append 80 8 Bool
                                                                              (append 72 8 Bool
                                                                                 (append 64 8 Bool
                                                                                    (append 56 8 Bool
                                                                                       (append 48 8 Bool
                                                                                          (append 40 8 Bool
                                                                                             (append 32 8 Bool
                                                                                                (append 24 8 Bool
                                                                                                   (append 16 8 Bool
                                                                                                      (append 8 8 Bool (at 32 x@3 key#1566 0) (at 32 x@3 key#1566 1))
                                                                                                      (at 32 x@3 key#1566 2))
                                                                                                   (at 32 x@3 key#1566 3))
                                                                                                (at 32 x@3 key#1566 4))
                                                                                             (at 32 x@3 key#1566 5))
                                                                                          (at 32 x@3 key#1566 6))
                                                                                       (at 32 x@3 key#1566 7))
                                                                                    (at 32 x@3 key#1566 8))
                                                                                 (at 32 x@3 key#1566 9))
                                                                              (at 32 x@3 key#1566 10))
                                                                           (at 32 x@3 key#1566 11))
                                                                        (at 32 x@3 key#1566 12))
                                                                     (at 32 x@3 key#1566 13))
                                                                  (at 32 x@3 key#1566 14))
                                                               (at 32 x@3 key#1566 15))
                                                            (at 32 x@3 key#1566 16))
                                                         (at 32 x@3 key#1566 17))
                                                      (at 32 x@3 key#1566 18))
                                                   (at 32 x@3 key#1566 19))
                                                (at 32 x@3 key#1566 20))
                                             (at 32 x@3 key#1566 21))
                                          (at 32 x@3 key#1566 22))
                                       (at 32 x@3 key#1566 23))
                                    (at 32 x@3 key#1566 24))
                                 (at 32 x@3 key#1566 25))
                              (at 32 x@3 key#1566 26))
                           (at 32 x@3 key#1566 27))
                        (at 32 x@3 key#1566 28))
                     (at 32 x@3 key#1566 29))
                  (at 32 x@3 key#1566 30))
               (at 32 x@3 key#1566 31)
      x@97 = append 88 8 Bool
               (append 80 8 Bool
                  (append 72 8 Bool
                     (append 64 8 Bool
                        (append 56 8 Bool
                           (append 48 8 Bool
                              (append 40 8 Bool
                                 (append 32 8 Bool
                                    (append 24 8 Bool
                                       (append 16 8 Bool (append 8 8 Bool x@73 x@74) x@75)
                                       x@76)
                                    x@77)
                                 x@78)
                              x@79)
                           x@80)
                        x@81)
                     x@82)
                  x@83)
               x@84
      x@98 = bvAdd 32 x@8
               (slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@86 x@49) x@7))
      x@99 = aes_hw_encrypt
               [ x@73
               , x@74
               , x@75
               , x@76
               , x@77
               , x@78
               , x@79
               , x@80
               , x@81
               , x@82
               , x@83
               , x@84
               , slice Bool 0 8 24 x@98
               , slice Bool 8 8 16 x@98
               , slice Bool 16 8 8 x@98
               , slice Bool 24 8 0 x@98 ]
               key#1566
      x@100 = bvUDiv 64 x@52 x@7
      x@101 = ite (Vec 128 Bool) x@53
                (append 120 8 Bool
                   (append 112 8 Bool
                      (append 104 8 Bool (append 96 8 Bool x@97 x@91) x@92)
                      x@93)
                   x@94)
                (append 96 32 Bool x@97
                   (bvAdd 32 x@90
                      (slice Bool 32 32 0 (bvMul 64 x@16 (bvUDiv 64 x@100 x@16)))))
      x@102 = slice Bool 96 32 0 x@101
      x@103 = bvAdd 32 x@102 (slice Bool 28 32 4 x@56)
      x@104 = aes_hw_encrypt
                [ slice Bool 0 8 120 x@101
                , slice Bool 8 8 112 x@101
                , slice Bool 16 8 104 x@101
                , slice Bool 24 8 96 x@101
                , slice Bool 32 8 88 x@101
                , slice Bool 40 8 80 x@101
                , slice Bool 48 8 72 x@101
                , slice Bool 56 8 64 x@101
                , slice Bool 64 8 56 x@101
                , slice Bool 72 8 48 x@101
                , slice Bool 80 8 40 x@101
                , slice Bool 88 8 32 x@101
                , ite x@3 x@68 (slice Bool 96 8 24 x@101)
                    (slice Bool 0 8 24 x@103)
                , ite x@3 x@68 (slice Bool 104 8 16 x@101)
                    (slice Bool 8 8 16 x@103)
                , ite x@3 x@68 (slice Bool 112 8 8 x@101)
                    (slice Bool 16 8 8 x@103)
                , ite x@3 x@68 (slice Bool 120 8 0 x@101)
                    (slice Bool 24 8 0 x@103) ]
                key#1566
      x@105 = bvXor 8 (at 16 x@3 x@89 1)
                (arrayLookupUnint in#1571 x@6)
      x@106 = bvXor 8 (at 16 x@3 x@89 2)
                (arrayLookupUnint in#1571 x@11)
      x@107 = bvXor 8 (at 16 x@3 x@89 3)
                (arrayLookupUnint in#1571 x@12)
      x@108 = bvXor 8 (at 16 x@3 x@89 4)
                (arrayLookupUnint in#1571 x@13)
      x@109 = bvXor 8 (at 16 x@3 x@89 5)
                (arrayLookupUnint in#1571 x@14)
      x@110 = bvXor 8 (at 16 x@3 x@89 6)
                (arrayLookupUnint in#1571 x@15)
      x@111 = bvXor 8 (at 16 x@3 x@89 7)
                (arrayLookupUnint in#1571 x@16)
      x@112 = bvXor 8 (at 16 x@3 x@89 8)
                (arrayLookupUnint in#1571 x@17)
      x@113 = bvXor 8 (at 16 x@3 x@89 9)
                (arrayLookupUnint in#1571 x@18)
      x@114 = bvXor 8 (at 16 x@3 x@89 10)
                (arrayLookupUnint in#1571 x@19)
      x@115 = bvXor 8 (at 16 x@3 x@89 11)
                (arrayLookupUnint in#1571 x@20)
      x@116 = bvXor 8 (at 16 x@3 x@89 12)
                (arrayLookupUnint in#1571 x@21)
      x@117 = bvXor 8 (at 16 x@3 x@89 13)
                (arrayLookupUnint in#1571 x@22)
      x@118 = bvXor 8 (at 16 x@3 x@89 14)
                (arrayLookupUnint in#1571 x@23)
      x@119 = arrayUpdateUnint
                (arrayUpdateUnint
                   (arrayUpdateUnint
                      (arrayUpdateUnint
                         (arrayUpdateUnint
                            (arrayUpdateUnint
                               (arrayUpdateUnint
                                  (arrayUpdateUnint
                                     (arrayUpdateUnint
                                        (arrayUpdateUnint
                                           (arrayUpdateUnint
                                              (arrayUpdateUnint
                                                 (arrayUpdateUnint (arrayUpdateUnint out#1572 x@6 x@105) x@11
                                                    x@106)
                                                 x@12
                                                 x@107)
                                              x@13
                                              x@108)
                                           x@14
                                           x@109)
                                        x@15
                                        x@110)
                                     x@16
                                     x@111)
                                  x@17
                                  x@112)
                               x@18
                               x@113)
                            x@19
                            x@114)
                         x@20
                         x@115)
                      x@21
                      x@116)
                   x@22
                   x@117)
                x@23
                x@118
      x@120 = bvXor 8 (at 16 x@3 x@89 15)
                (arrayLookupUnint in#1571 x@24)
      x@121 = arrayUpdateUnint x@119 x@24 x@120
      x@122 = ite x@5 x@50 x@119 x@121
      x@123 = arrayConstantUnint x@48
      x@124 = arrayCopyUnint x@123 x@6 x@122 x@64 x@52
      x@125 = append 112 8 Bool
                (append 104 8 Bool
                   (append 96 8 Bool
                      (append 88 8 Bool
                         (append 80 8 Bool
                            (append 72 8 Bool
                               (append 64 8 Bool
                                  (append 56 8 Bool
                                     (append 48 8 Bool
                                        (append 40 8 Bool
                                           (append 32 8 Bool
                                              (append 24 8 Bool
                                                 (append 16 8 Bool
                                                    (append 8 8 Bool (at 16 x@3 Xi#1568 0)
                                                       (bvXor 8 x@105 (at 16 x@3 Xi#1568 1)))
                                                    (bvXor 8 x@106 (at 16 x@3 Xi#1568 2)))
                                                 (bvXor 8 x@107 (at 16 x@3 Xi#1568 3)))
                                              (bvXor 8 x@108 (at 16 x@3 Xi#1568 4)))
                                           (bvXor 8 x@109 (at 16 x@3 Xi#1568 5)))
                                        (bvXor 8 x@110 (at 16 x@3 Xi#1568 6)))
                                     (bvXor 8 x@111 (at 16 x@3 Xi#1568 7)))
                                  (bvXor 8 x@112 (at 16 x@3 Xi#1568 8)))
                               (bvXor 8 x@113 (at 16 x@3 Xi#1568 9)))
                            (bvXor 8 x@114 (at 16 x@3 Xi#1568 10)))
                         (bvXor 8 x@115 (at 16 x@3 Xi#1568 11)))
                      (bvXor 8 x@116 (at 16 x@3 Xi#1568 12)))
                   (bvXor 8 x@117 (at 16 x@3 Xi#1568 13)))
                (bvXor 8 x@118 (at 16 x@3 Xi#1568 14))
      x@126 = bvXor 8 x@120 x@43
      x@127 = gcm_polyval x@63
                (append 120 8 Bool x@125 (ite x@3 x@50 x@43 x@126))
      x@128 = arrayCopyUnint x@122 x@64
                (ite x@5 x@53 x@124
                   (aesni_gcm_encrypt x@52
                      (arrayCopyUnint x@123 x@6 in#1571 x@64 x@52)
                      x@124
                      key#1566
                      iv#1567
                      x@95
                      [ slice Bool 0 8 120 x@127
                      , slice Bool 8 8 112 x@127
                      , slice Bool 16 8 104 x@127
                      , slice Bool 24 8 96 x@127
                      , slice Bool 32 8 88 x@127
                      , slice Bool 40 8 80 x@127
                      , slice Bool 48 8 72 x@127
                      , slice Bool 56 8 64 x@127
                      , slice Bool 64 8 56 x@127
                      , slice Bool 72 8 48 x@127
                      , slice Bool 80 8 40 x@127
                      , slice Bool 88 8 32 x@127
                      , slice Bool 96 8 24 x@127
                      , slice Bool 104 8 16 x@127
                      , slice Bool 112 8 8 x@127
                      , slice Bool 120 8 0 x@127 ]
                      x@6
                      x@124
                      x@127).1)
                x@6
                x@52
      x@129 = gcm_polyval x@63 (append 120 8 Bool x@125 x@126)
      x@130 = bvult 64 x@85 x@39
      x@131 = ite x@1 x@130 x@6 (bvMul 64 x@40 (bvUDiv 64 x@85 x@40))
      x@132 = bvUDiv 64 (bvAdd 64 x@85 (bvMul 64 x@42 x@131)) x@7
      x@133 = bvMul 64 x@7 x@132
      x@134 = arrayCopyUnint x@123 x@6 x@121 x@25 x@85
      x@135 = ite x@5 (bvult 64 x@6 x@85)
                (arrayCopyUnint x@121 x@25
                   (ite x@5 x@130 x@134
                      (aesni_gcm_encrypt x@85
                         (arrayCopyUnint x@123 x@6 in#1571 x@25 x@85)
                         x@134
                         key#1566
                         iv#1567
                         x@95
                         [ slice Bool 0 8 120 x@129
                         , slice Bool 8 8 112 x@129
                         , slice Bool 16 8 104 x@129
                         , slice Bool 24 8 96 x@129
                         , slice Bool 32 8 88 x@129
                         , slice Bool 40 8 80 x@129
                         , slice Bool 48 8 72 x@129
                         , slice Bool 56 8 64 x@129
                         , slice Bool 64 8 56 x@129
                         , slice Bool 72 8 48 x@129
                         , slice Bool 80 8 40 x@129
                         , slice Bool 88 8 32 x@129
                         , slice Bool 96 8 24 x@129
                         , slice Bool 104 8 16 x@129
                         , slice Bool 112 8 8 x@129
                         , slice Bool 120 8 0 x@129 ]
                         x@6
                         x@134
                         x@129).1)
                   x@6
                   x@85)
                x@121
      x@136 = bvAdd 64 x@25 x@131
      x@137 = bvUDiv 64 x@85 x@7
      x@138 = bvMul 64 x@7 x@100
      x@139 = bvAdd 64 x@138 (ite x@1 x@50 x@25 x@7)
      x@140 = bvAdd 64 x@138 (ite x@1 x@50 x@7 x@26)
      x@141 = bvAdd 64 x@138 (ite x@1 x@50 x@26 x@27)
      x@142 = bvAdd 64 x@138 (ite x@1 x@50 x@27 x@28)
      x@143 = bvAdd 64 x@138 (ite x@1 x@50 x@28 x@29)
      x@144 = bvAdd 64 x@138 (ite x@1 x@50 x@29 x@30)
      x@145 = bvAdd 64 x@138 (ite x@1 x@50 x@30 x@31)
      x@146 = bvAdd 64 x@138 (ite x@1 x@50 x@31 x@32)
      x@147 = bvAdd 64 x@138 (ite x@1 x@50 x@32 x@33)
      x@148 = bvAdd 64 x@138 (ite x@1 x@50 x@33 x@34)
      x@149 = bvAdd 64 x@138 (ite x@1 x@50 x@34 x@35)
      x@150 = bvAdd 64 x@138 (ite x@1 x@50 x@35 x@36)
      x@151 = bvAdd 64 x@138 (ite x@1 x@50 x@36 x@37)
      x@152 = bvAdd 64 x@138 (ite x@1 x@50 x@37 x@38)
      x@153 = bvMul 64 x@7 x@137
      x@154 = bvAdd 64 (bvAdd 64 x@25 x@133) x@131
      x@155 = bvAdd 64 x@7 x@153
      x@156 = bvAdd 64 x@26 x@153
      x@157 = bvAdd 64 x@27 x@153
      x@158 = bvAdd 64 x@28 x@153
      x@159 = bvAdd 64 x@29 x@153
      x@160 = bvAdd 64 x@30 x@153
      x@161 = bvAdd 64 x@31 x@153
      x@162 = bvAdd 64 x@32 x@153
      x@163 = bvAdd 64 x@33 x@153
      x@164 = bvAdd 64 x@34 x@153
      x@165 = bvAdd 64 x@35 x@153
      x@166 = bvAdd 64 x@36 x@153
      x@167 = bvAdd 64 x@37 x@153
      x@168 = bvAdd 64 x@38 x@153
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or (not (bvult 32 x@46 (bvNat 32 2147483648)))
                              (not (bvult 64 x@59 x@44)))
                           (not
                              (bvult 64 (bvAdd 64 x@59 (append 32 32 Bool x@9 x@46)) x@44)))
                        (bvult 64 (bvNat 64 2147483647) x@49))
                     (not
                        (bvEq 1 x@10
                           (bvOr 1 (ite x@4 (bvult 64 x@44 x@61) x@60 x@10)
                              (ite x@4 (bvult 64 x@61 x@49) x@60 x@10)))))
                  x@50)
               (Prelude.and (not x@50)
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (Prelude.or x@50 (bvEq 64 x@6 x@52))
                                                                     (not (bvult 64 x@52 (bvNat 64 68719476736))))
                                                                  (bvult 64 x@49 x@52))
                                                               (bvult 64 (bvMul 64 x@42 x@51) x@64))
                                                            (bvult 64 (bvNat 64 3071) x@56))
                                                         (Prelude.and (not x@68)
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or (Prelude.or x@68 (not (bvult 64 x@57 x@27)))
                                                                                          (not (bvult 64 x@6 x@57)))
                                                                                       (bvult 64 x@49 x@58))
                                                                                    (bvult 64 (bvAdd 64 x@49 (bvMul 64 x@41 x@57)) x@65))
                                                                                 (not (bvult 64 x@67 x@39)))
                                                                              (not (bvult 64 x@6 x@67)))
                                                                           (not (bvEq 64 x@6 (bvURem 64 x@67 x@7))))
                                                                        (bvult 64 x@49 x@67))
                                                                     (bvult 64 (bvAdd 64 x@49 x@70) x@65))
                                                                  (bvult 64 x@49 (bvAdd 64 x@65 x@58)))
                                                               (bvult 64 x@49 x@69))))
                                                      (bvEq 64 x@6 x@72))
                                                   (bvEq 1 x@10
                                                      (bvOr 1 (ite x@4 (bvult 64 x@72 x@7) x@60 x@10)
                                                         (ite x@4
                                                            (bvult 64 (bvNat 64 4294967295)
                                                               (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@42 x@49) x@51) x@55)
                                                                  x@71))
                                                            x@60
                                                            x@10))))
                                                (bvEq 64 x@6 (bvAnd 64 x@11 x@72)))
                                             (bvEq 64 x@11 x@72))
                                          (bvEq 64 x@6
                                             (bvAdd 64
                                                (bvAdd 64
                                                   (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@49) x@51)
                                                   x@55)
                                                x@71)))
                                       (bvEq 64 x@6
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@49) x@51)
                                                x@55)
                                             x@71)))
                                    (bvEq 64 x@6
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@49) x@51)
                                             x@55)
                                          x@71)))
                                 (bvEq 64 x@6
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@49) x@51)
                                          x@55)
                                       x@71)))
                              (bvEq 64 x@6
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@49) x@51)
                                       x@55)
                                    x@71)))
                           (bvEq 64 x@6
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@49) x@51)
                                    x@55)
                                 x@71)))
                        (not
                           (bvEq 64 x@6
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@85 x@51) x@55) x@71))))
                     (bvult 64 x@49 (bvAdd 64 x@52 x@64)))))
            (bvslt 32 x@46 x@9))
         (arrayEq x@1 x@3
            (arrayUpdateUnint
               (arrayUpdateUnint
                  (arrayUpdateUnint
                     (arrayUpdateUnint
                        (arrayUpdateUnint
                           (arrayUpdateUnint
                              (arrayUpdateUnint
                                 (arrayUpdateUnint
                                    (arrayUpdateUnint
                                       (arrayUpdateUnint
                                          (arrayUpdateUnint
                                             (arrayUpdateUnint
                                                (arrayUpdateUnint
                                                   (arrayUpdateUnint
                                                      (arrayUpdateUnint
                                                         (ite x@5 x@68 x@128
                                                            (arrayCopyUnint x@128 x@65
                                                               (aes_ctr32_encrypt_blocks_array x@96 (slice Bool 0 96 32 x@101)
                                                                  x@102
                                                                  (arrayCopyUnint x@123 x@6 in#1571 x@65 x@58)
                                                                  x@57
                                                                  x@6
                                                                  (arrayCopyUnint x@123 x@6 x@128 x@65 x@58))
                                                               x@6
                                                               x@58))
                                                         x@69
                                                         (bvXor 8 (at 16 x@3 x@104 0) (arrayLookupUnint in#1571 x@69)))
                                                      x@139
                                                      (bvXor 8 (at 16 x@3 x@104 1) (arrayLookupUnint in#1571 x@139)))
                                                   x@140
                                                   (bvXor 8 (at 16 x@3 x@104 2) (arrayLookupUnint in#1571 x@140)))
                                                x@141
                                                (bvXor 8 (at 16 x@3 x@104 3) (arrayLookupUnint in#1571 x@141)))
                                             x@142
                                             (bvXor 8 (at 16 x@3 x@104 4) (arrayLookupUnint in#1571 x@142)))
                                          x@143
                                          (bvXor 8 (at 16 x@3 x@104 5) (arrayLookupUnint in#1571 x@143)))
                                       x@144
                                       (bvXor 8 (at 16 x@3 x@104 6) (arrayLookupUnint in#1571 x@144)))
                                    x@145
                                    (bvXor 8 (at 16 x@3 x@104 7) (arrayLookupUnint in#1571 x@145)))
                                 x@146
                                 (bvXor 8 (at 16 x@3 x@104 8) (arrayLookupUnint in#1571 x@146)))
                              x@147
                              (bvXor 8 (at 16 x@3 x@104 9) (arrayLookupUnint in#1571 x@147)))
                           x@148
                           (bvXor 8 (at 16 x@3 x@104 10) (arrayLookupUnint in#1571 x@148)))
                        x@149
                        (bvXor 8 (at 16 x@3 x@104 11) (arrayLookupUnint in#1571 x@149)))
                     x@150
                     (bvXor 8 (at 16 x@3 x@104 12) (arrayLookupUnint in#1571 x@150)))
                  x@151
                  (bvXor 8 (at 16 x@3 x@104 13) (arrayLookupUnint in#1571 x@151)))
               x@152
               (bvXor 8 (at 16 x@3 x@104 14) (arrayLookupUnint in#1571 x@152)))
            (arrayUpdateUnint
               (arrayUpdateUnint
                  (arrayUpdateUnint
                     (arrayUpdateUnint
                        (arrayUpdateUnint
                           (arrayUpdateUnint
                              (arrayUpdateUnint
                                 (arrayUpdateUnint
                                    (arrayUpdateUnint
                                       (arrayUpdateUnint
                                          (arrayUpdateUnint
                                             (arrayUpdateUnint
                                                (arrayUpdateUnint
                                                   (arrayUpdateUnint
                                                      (arrayUpdateUnint
                                                         (ite x@5 (bvEq 64 x@6 x@133) x@135
                                                            (arrayCopyUnint x@135 x@136
                                                               (aes_ctr32_encrypt_blocks_array x@96 x@97
                                                                  (bvAdd 32 x@90
                                                                     (ite x@2 x@130 x@9
                                                                        (slice Bool 32 32 0 (bvMul 64 x@16 (bvUDiv 64 x@137 x@16)))))
                                                                  (arrayCopyUnint x@123 x@6 in#1571 x@136 x@133)
                                                                  x@132
                                                                  x@6
                                                                  (arrayCopyUnint x@123 x@6 x@135 x@136 x@133))
                                                               x@6
                                                               x@133))
                                                         x@154
                                                         (bvXor 8 (at 16 x@3 x@99 0) (arrayLookupUnint in#1571 x@154)))
                                                      x@155
                                                      (bvXor 8 (at 16 x@3 x@99 1) (arrayLookupUnint in#1571 x@155)))
                                                   x@156
                                                   (bvXor 8 (at 16 x@3 x@99 2) (arrayLookupUnint in#1571 x@156)))
                                                x@157
                                                (bvXor 8 (at 16 x@3 x@99 3) (arrayLookupUnint in#1571 x@157)))
                                             x@158
                                             (bvXor 8 (at 16 x@3 x@99 4) (arrayLookupUnint in#1571 x@158)))
                                          x@159
                                          (bvXor 8 (at 16 x@3 x@99 5) (arrayLookupUnint in#1571 x@159)))
                                       x@160
                                       (bvXor 8 (at 16 x@3 x@99 6) (arrayLookupUnint in#1571 x@160)))
                                    x@161
                                    (bvXor 8 (at 16 x@3 x@99 7) (arrayLookupUnint in#1571 x@161)))
                                 x@162
                                 (bvXor 8 (at 16 x@3 x@99 8) (arrayLookupUnint in#1571 x@162)))
                              x@163
                              (bvXor 8 (at 16 x@3 x@99 9) (arrayLookupUnint in#1571 x@163)))
                           x@164
                           (bvXor 8 (at 16 x@3 x@99 10) (arrayLookupUnint in#1571 x@164)))
                        x@165
                        (bvXor 8 (at 16 x@3 x@99 11) (arrayLookupUnint in#1571 x@165)))
                     x@166
                     (bvXor 8 (at 16 x@3 x@99 12) (arrayLookupUnint in#1571 x@166)))
                  x@167
                  (bvXor 8 (at 16 x@3 x@99 13) (arrayLookupUnint in#1571 x@167)))
               x@168
               (bvXor 8 (at 16 x@3 x@99 14)
                  (arrayLookupUnint in#1571 x@168)))))

Calling Yices to check sat
Running check sat
[20:38:12.896] Goal EVP_EncryptUpdate (goal number 132): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:38:14.223] Goal EVP_EncryptUpdate (goal number 133): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:38:15.574] Goal EVP_EncryptUpdate (goal number 134): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:197:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:197:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:38:16.680] Goal EVP_EncryptUpdate (goal number 135): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:213:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:213:3: error: in llvm_points_to
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 32 Bool
      x@3 = Vec 8 Bool
      x@4 = Vec 128 Bool
      x@5 = Vec 1 Bool
      x@6 = Array x@1 x@3
      x@7 = bvNat 64 0
      x@8 = bvNat 64 16
      x@9 = bvNat 32 1
      x@10 = bvNat 32 0
      x@11 = bvNat 1 0
      x@12 = bvNat 64 1
      x@13 = bvNat 64 2
      x@14 = bvNat 64 3
      x@15 = bvNat 64 4
      x@16 = bvNat 64 5
      x@17 = bvNat 64 6
      x@18 = bvNat 64 7
      x@19 = bvNat 64 8
      x@20 = bvNat 64 9
      x@21 = bvNat 64 10
      x@22 = bvNat 64 11
      x@23 = bvNat 64 12
      x@24 = bvNat 64 13
      x@25 = bvNat 64 14
      x@26 = bvNat 64 15
      x@27 = bvNat 64 17
      x@28 = bvNat 64 18
      x@29 = bvNat 64 19
      x@30 = bvNat 64 20
      x@31 = bvNat 64 21
      x@32 = bvNat 64 22
      x@33 = bvNat 64 23
      x@34 = bvNat 64 24
      x@35 = bvNat 64 25
      x@36 = bvNat 64 26
      x@37 = bvNat 64 27
      x@38 = bvNat 64 28
      x@39 = bvNat 64 29
      x@40 = bvNat 64 288
      x@41 = bvNat 64 96
      x@42 = bvNat 64 18446744073709551600
      x@43 = bvNat 64 18446744073709551615
      x@44 = at 16 x@3 Xi#1568 15
      x@45 = bvNat 64 68719476704
      x@46 = bvNat 64 18446744073709551602
      x@47 = append 28 4 Bool len#1570 (bvNat 4 14)
      x@48 = bvNat 64 18446744073709551601
      x@49 = bvNat 8 0
      x@50 = append 32 32 Bool
               (ite x@2 (at 32 Bool x@47 0) (bvNat 32 4294967295) x@10)
               x@47
      x@51 = bvEq 64 x@7 (bvAdd 64 x@46 x@50)
      x@52 = ite x@1 x@51 x@46 x@48
      x@53 = bvAdd 64 x@50 x@52
      x@54 = bvult 64 x@53 x@40
      x@55 = ite x@1 x@54 x@7 (bvMul 64 x@41 (bvUDiv 64 x@53 x@41))
      x@56 = bvMul 64 x@43 x@55
      x@57 = bvAdd 64 x@53 x@56
      x@58 = bvShr 64 x@57 4
      x@59 = bvMul 64 x@8 x@58
      x@60 = append 60 4 Bool ctx.len (bvNat 4 1)
      x@61 = bvNat 1 1
      x@62 = bvAdd 64 x@60 x@50
      x@63 = aes_hw_encrypt
               [ x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49
               , x@49 ]
               key#1566
      x@64 = Cryptol::pmod (TCNum 129) (TCNum 128)
               (append 128 1 Bool
                  (append 64 64 Bool
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@63 0) (at 16 x@3 x@63 1))
                                       (at 16 x@3 x@63 2))
                                    (at 16 x@3 x@63 3))
                                 (at 16 x@3 x@63 4))
                              (at 16 x@3 x@63 5))
                           (at 16 x@3 x@63 6))
                        (at 16 x@3 x@63 7))
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@63 8) (at 16 x@3 x@63 9))
                                       (at 16 x@3 x@63 10))
                                    (at 16 x@3 x@63 11))
                                 (at 16 x@3 x@63 12))
                              (at 16 x@3 x@63 13))
                           (at 16 x@3 x@63 14))
                        (at 16 x@3 x@63 15)))
                  x@11)
               (bvNat 129 598152598103212142806713177126155059201)
      x@65 = ite x@1 x@51 x@25 x@26
      x@66 = bvAdd 64 x@65 x@55
      x@67 = bvUDiv 64 x@57 x@8
      x@68 = bvMul 64 x@8 x@67
      x@69 = bvEq 64 x@7 x@68
      x@70 = bvAdd 64 x@66 x@68
      x@71 = bvMul 64 x@42 x@67
      x@72 = ite x@1 x@69 x@7 x@71
      x@73 = bvAdd 64 x@57 x@72
      x@74 = at 12 x@3 iv#1567 0
      x@75 = at 12 x@3 iv#1567 1
      x@76 = at 12 x@3 iv#1567 2
      x@77 = at 12 x@3 iv#1567 3
      x@78 = at 12 x@3 iv#1567 4
      x@79 = at 12 x@3 iv#1567 5
      x@80 = at 12 x@3 iv#1567 6
      x@81 = at 12 x@3 iv#1567 7
      x@82 = at 12 x@3 iv#1567 8
      x@83 = at 12 x@3 iv#1567 9
      x@84 = at 12 x@3 iv#1567 10
      x@85 = at 12 x@3 iv#1567 11
      x@86 = bvAdd 64 x@48 x@50
      x@87 = bvAdd 64 x@26 x@60
      x@88 = slice Bool 32 32 0 (bvUDiv 64 x@87 x@8)
      x@89 = bvAdd 32 x@9 x@88
      x@90 = aes_hw_encrypt
               [ x@74
               , x@75
               , x@76
               , x@77
               , x@78
               , x@79
               , x@80
               , x@81
               , x@82
               , x@83
               , x@84
               , x@85
               , slice Bool 0 8 24 x@89
               , slice Bool 8 8 16 x@89
               , slice Bool 16 8 8 x@89
               , slice Bool 24 8 0 x@89 ]
               key#1566
      x@91 = bvAdd 32 (bvNat 32 2) x@88
      x@92 = slice Bool 0 8 24 x@91
      x@93 = slice Bool 8 8 16 x@91
      x@94 = slice Bool 16 8 8 x@91
      x@95 = slice Bool 24 8 0 x@91
      x@96 = [x@92, x@93, x@94, x@95]
      x@97 = append 248 8 Bool
               (append 240 8 Bool
                  (append 232 8 Bool
                     (append 224 8 Bool
                        (append 216 8 Bool
                           (append 208 8 Bool
                              (append 200 8 Bool
                                 (append 192 8 Bool
                                    (append 184 8 Bool
                                       (append 176 8 Bool
                                          (append 168 8 Bool
                                             (append 160 8 Bool
                                                (append 152 8 Bool
                                                   (append 144 8 Bool
                                                      (append 136 8 Bool
                                                         (append 128 8 Bool
                                                            (append 120 8 Bool
                                                               (append 112 8 Bool
                                                                  (append 104 8 Bool
                                                                     (append 96 8 Bool
                                                                        (append 88 8 Bool
                                                                           (append 80 8 Bool
                                                                              (append 72 8 Bool
                                                                                 (append 64 8 Bool
                                                                                    (append 56 8 Bool
                                                                                       (append 48 8 Bool
                                                                                          (append 40 8 Bool
                                                                                             (append 32 8 Bool
                                                                                                (append 24 8 Bool
                                                                                                   (append 16 8 Bool
                                                                                                      (append 8 8 Bool (at 32 x@3 key#1566 0) (at 32 x@3 key#1566 1))
                                                                                                      (at 32 x@3 key#1566 2))
                                                                                                   (at 32 x@3 key#1566 3))
                                                                                                (at 32 x@3 key#1566 4))
                                                                                             (at 32 x@3 key#1566 5))
                                                                                          (at 32 x@3 key#1566 6))
                                                                                       (at 32 x@3 key#1566 7))
                                                                                    (at 32 x@3 key#1566 8))
                                                                                 (at 32 x@3 key#1566 9))
                                                                              (at 32 x@3 key#1566 10))
                                                                           (at 32 x@3 key#1566 11))
                                                                        (at 32 x@3 key#1566 12))
                                                                     (at 32 x@3 key#1566 13))
                                                                  (at 32 x@3 key#1566 14))
                                                               (at 32 x@3 key#1566 15))
                                                            (at 32 x@3 key#1566 16))
                                                         (at 32 x@3 key#1566 17))
                                                      (at 32 x@3 key#1566 18))
                                                   (at 32 x@3 key#1566 19))
                                                (at 32 x@3 key#1566 20))
                                             (at 32 x@3 key#1566 21))
                                          (at 32 x@3 key#1566 22))
                                       (at 32 x@3 key#1566 23))
                                    (at 32 x@3 key#1566 24))
                                 (at 32 x@3 key#1566 25))
                              (at 32 x@3 key#1566 26))
                           (at 32 x@3 key#1566 27))
                        (at 32 x@3 key#1566 28))
                     (at 32 x@3 key#1566 29))
                  (at 32 x@3 key#1566 30))
               (at 32 x@3 key#1566 31)
      x@98 = append 88 8 Bool
               (append 80 8 Bool
                  (append 72 8 Bool
                     (append 64 8 Bool
                        (append 56 8 Bool
                           (append 48 8 Bool
                              (append 40 8 Bool
                                 (append 32 8 Bool
                                    (append 24 8 Bool
                                       (append 16 8 Bool (append 8 8 Bool x@74 x@75) x@76)
                                       x@77)
                                    x@78)
                                 x@79)
                              x@80)
                           x@81)
                        x@82)
                     x@83)
                  x@84)
               x@85
      x@99 = bvAdd 32 x@9
               (slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@87 x@50) x@8))
      x@100 = aes_hw_encrypt
                [ x@74
                , x@75
                , x@76
                , x@77
                , x@78
                , x@79
                , x@80
                , x@81
                , x@82
                , x@83
                , x@84
                , x@85
                , slice Bool 0 8 24 x@99
                , slice Bool 8 8 16 x@99
                , slice Bool 16 8 8 x@99
                , slice Bool 24 8 0 x@99 ]
                key#1566
      x@101 = bvUDiv 64 x@53 x@8
      x@102 = ite x@4 x@54
                (append 120 8 Bool
                   (append 112 8 Bool
                      (append 104 8 Bool (append 96 8 Bool x@98 x@92) x@93)
                      x@94)
                   x@95)
                (append 96 32 Bool x@98
                   (bvAdd 32 x@91
                      (slice Bool 32 32 0 (bvMul 64 x@17 (bvUDiv 64 x@101 x@17)))))
      x@103 = slice Bool 96 32 0 x@102
      x@104 = bvAdd 32 x@103 (slice Bool 28 32 4 x@57)
      x@105 = aes_hw_encrypt
                [ slice Bool 0 8 120 x@102
                , slice Bool 8 8 112 x@102
                , slice Bool 16 8 104 x@102
                , slice Bool 24 8 96 x@102
                , slice Bool 32 8 88 x@102
                , slice Bool 40 8 80 x@102
                , slice Bool 48 8 72 x@102
                , slice Bool 56 8 64 x@102
                , slice Bool 64 8 56 x@102
                , slice Bool 72 8 48 x@102
                , slice Bool 80 8 40 x@102
                , slice Bool 88 8 32 x@102
                , ite x@3 x@69 (slice Bool 96 8 24 x@102)
                    (slice Bool 0 8 24 x@104)
                , ite x@3 x@69 (slice Bool 104 8 16 x@102)
                    (slice Bool 8 8 16 x@104)
                , ite x@3 x@69 (slice Bool 112 8 8 x@102)
                    (slice Bool 16 8 8 x@104)
                , ite x@3 x@69 (slice Bool 120 8 0 x@102)
                    (slice Bool 24 8 0 x@104) ]
                key#1566
      x@106 = bvXor 8 (at 16 x@3 x@90 1)
                (arrayLookupUnint in#1571 x@7)
      x@107 = bvXor 8 (at 16 x@3 x@90 2)
                (arrayLookupUnint in#1571 x@12)
      x@108 = bvXor 8 (at 16 x@3 x@90 3)
                (arrayLookupUnint in#1571 x@13)
      x@109 = bvXor 8 (at 16 x@3 x@90 4)
                (arrayLookupUnint in#1571 x@14)
      x@110 = bvXor 8 (at 16 x@3 x@90 5)
                (arrayLookupUnint in#1571 x@15)
      x@111 = bvXor 8 (at 16 x@3 x@90 6)
                (arrayLookupUnint in#1571 x@16)
      x@112 = bvXor 8 (at 16 x@3 x@90 7)
                (arrayLookupUnint in#1571 x@17)
      x@113 = bvXor 8 (at 16 x@3 x@90 8)
                (arrayLookupUnint in#1571 x@18)
      x@114 = bvXor 8 (at 16 x@3 x@90 9)
                (arrayLookupUnint in#1571 x@19)
      x@115 = bvXor 8 (at 16 x@3 x@90 10)
                (arrayLookupUnint in#1571 x@20)
      x@116 = bvXor 8 (at 16 x@3 x@90 11)
                (arrayLookupUnint in#1571 x@21)
      x@117 = bvXor 8 (at 16 x@3 x@90 12)
                (arrayLookupUnint in#1571 x@22)
      x@118 = bvXor 8 (at 16 x@3 x@90 13)
                (arrayLookupUnint in#1571 x@23)
      x@119 = bvXor 8 (at 16 x@3 x@90 14)
                (arrayLookupUnint in#1571 x@24)
      x@120 = arrayUpdateUnint
                (arrayUpdateUnint
                   (arrayUpdateUnint
                      (arrayUpdateUnint
                         (arrayUpdateUnint
                            (arrayUpdateUnint
                               (arrayUpdateUnint
                                  (arrayUpdateUnint
                                     (arrayUpdateUnint
                                        (arrayUpdateUnint
                                           (arrayUpdateUnint
                                              (arrayUpdateUnint
                                                 (arrayUpdateUnint (arrayUpdateUnint out#1572 x@7 x@106) x@12
                                                    x@107)
                                                 x@13
                                                 x@108)
                                              x@14
                                              x@109)
                                           x@15
                                           x@110)
                                        x@16
                                        x@111)
                                     x@17
                                     x@112)
                                  x@18
                                  x@113)
                               x@19
                               x@114)
                            x@20
                            x@115)
                         x@21
                         x@116)
                      x@22
                      x@117)
                   x@23
                   x@118)
                x@24
                x@119
      x@121 = bvXor 8 (at 16 x@3 x@90 15)
                (arrayLookupUnint in#1571 x@25)
      x@122 = arrayUpdateUnint x@120 x@25 x@121
      x@123 = ite x@6 x@51 x@120 x@122
      x@124 = arrayConstantUnint x@49
      x@125 = arrayCopyUnint x@124 x@7 x@123 x@65 x@53
      x@126 = append 112 8 Bool
                (append 104 8 Bool
                   (append 96 8 Bool
                      (append 88 8 Bool
                         (append 80 8 Bool
                            (append 72 8 Bool
                               (append 64 8 Bool
                                  (append 56 8 Bool
                                     (append 48 8 Bool
                                        (append 40 8 Bool
                                           (append 32 8 Bool
                                              (append 24 8 Bool
                                                 (append 16 8 Bool
                                                    (append 8 8 Bool (at 16 x@3 Xi#1568 0)
                                                       (bvXor 8 x@106 (at 16 x@3 Xi#1568 1)))
                                                    (bvXor 8 x@107 (at 16 x@3 Xi#1568 2)))
                                                 (bvXor 8 x@108 (at 16 x@3 Xi#1568 3)))
                                              (bvXor 8 x@109 (at 16 x@3 Xi#1568 4)))
                                           (bvXor 8 x@110 (at 16 x@3 Xi#1568 5)))
                                        (bvXor 8 x@111 (at 16 x@3 Xi#1568 6)))
                                     (bvXor 8 x@112 (at 16 x@3 Xi#1568 7)))
                                  (bvXor 8 x@113 (at 16 x@3 Xi#1568 8)))
                               (bvXor 8 x@114 (at 16 x@3 Xi#1568 9)))
                            (bvXor 8 x@115 (at 16 x@3 Xi#1568 10)))
                         (bvXor 8 x@116 (at 16 x@3 Xi#1568 11)))
                      (bvXor 8 x@117 (at 16 x@3 Xi#1568 12)))
                   (bvXor 8 x@118 (at 16 x@3 Xi#1568 13)))
                (bvXor 8 x@119 (at 16 x@3 Xi#1568 14))
      x@127 = bvXor 8 x@121 x@44
      x@128 = gcm_polyval x@64
                (append 120 8 Bool x@126 (ite x@3 x@51 x@44 x@127))
      x@129 = aesni_gcm_encrypt x@53
                (arrayCopyUnint x@124 x@7 in#1571 x@65 x@53)
                x@125
                key#1566
                iv#1567
                x@96
                [ slice Bool 0 8 120 x@128
                , slice Bool 8 8 112 x@128
                , slice Bool 16 8 104 x@128
                , slice Bool 24 8 96 x@128
                , slice Bool 32 8 88 x@128
                , slice Bool 40 8 80 x@128
                , slice Bool 48 8 72 x@128
                , slice Bool 56 8 64 x@128
                , slice Bool 64 8 56 x@128
                , slice Bool 72 8 48 x@128
                , slice Bool 80 8 40 x@128
                , slice Bool 88 8 32 x@128
                , slice Bool 96 8 24 x@128
                , slice Bool 104 8 16 x@128
                , slice Bool 112 8 8 x@128
                , slice Bool 120 8 0 x@128 ]
                x@7
                x@125
                x@128
      x@130 = arrayCopyUnint x@123 x@65 (ite x@6 x@54 x@125 x@129.1)
                x@7
                x@53
      x@131 = gcm_polyval x@64 (append 120 8 Bool x@126 x@127)
      x@132 = bvult 64 x@86 x@40
      x@133 = ite x@1 x@132 x@7 (bvMul 64 x@41 (bvUDiv 64 x@86 x@41))
      x@134 = bvUDiv 64 (bvAdd 64 x@86 (bvMul 64 x@43 x@133)) x@8
      x@135 = bvMul 64 x@8 x@134
      x@136 = arrayCopyUnint x@124 x@7 x@122 x@26 x@86
      x@137 = aesni_gcm_encrypt x@86
                (arrayCopyUnint x@124 x@7 in#1571 x@26 x@86)
                x@136
                key#1566
                iv#1567
                x@96
                [ slice Bool 0 8 120 x@131
                , slice Bool 8 8 112 x@131
                , slice Bool 16 8 104 x@131
                , slice Bool 24 8 96 x@131
                , slice Bool 32 8 88 x@131
                , slice Bool 40 8 80 x@131
                , slice Bool 48 8 72 x@131
                , slice Bool 56 8 64 x@131
                , slice Bool 64 8 56 x@131
                , slice Bool 72 8 48 x@131
                , slice Bool 80 8 40 x@131
                , slice Bool 88 8 32 x@131
                , slice Bool 96 8 24 x@131
                , slice Bool 104 8 16 x@131
                , slice Bool 112 8 8 x@131
                , slice Bool 120 8 0 x@131 ]
                x@7
                x@136
                x@131
      x@138 = ite x@6 (bvult 64 x@7 x@86)
                (arrayCopyUnint x@122 x@26 (ite x@6 x@132 x@136 x@137.1) x@7
                   x@86)
                x@122
      x@139 = bvAdd 64 x@26 x@133
      x@140 = bvUDiv 64 x@86 x@8
      x@141 = bvMul 64 x@8 x@101
      x@142 = bvMul 64 x@8 x@140
      x@143 = ite x@4 x@54 x@128 x@129.2.1
      x@144 = gcm_ghash_blocks_array x@64
                (arrayCopyUnint x@124 x@7
                   (arrayCopyUnint x@130 x@66
                      (aes_ctr32_encrypt_blocks_array x@97 (slice Bool 0 96 32 x@102)
                         x@103
                         (arrayCopyUnint x@124 x@7 in#1571 x@66 x@59)
                         x@58
                         x@7
                         (arrayCopyUnint x@124 x@7 x@130 x@66 x@59))
                      x@7
                      x@59)
                   x@66
                   x@68)
                x@67
                x@7
                x@143
      x@145 = ite x@4 x@132 x@131 x@137.2.1
      x@146 = ite x@4 (bvEq 64 x@7 x@135) x@145
                (gcm_ghash_blocks_array x@64
                   (arrayCopyUnint x@124 x@7
                      (arrayCopyUnint x@138 x@139
                         (aes_ctr32_encrypt_blocks_array x@97 x@98
                            (bvAdd 32 x@91
                               (ite x@2 x@132 x@10
                                  (slice Bool 32 32 0 (bvMul 64 x@17 (bvUDiv 64 x@140 x@17)))))
                            (arrayCopyUnint x@124 x@7 in#1571 x@139 x@135)
                            x@134
                            x@7
                            (arrayCopyUnint x@124 x@7 x@138 x@139 x@135))
                         x@7
                         x@135)
                      x@139
                      x@135)
                   x@134
                   x@7
                   x@145)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or (not (bvult 32 x@47 (bvNat 32 2147483648)))
                           (not (bvult 64 x@60 x@45)))
                        (not
                           (bvult 64 (bvAdd 64 x@60 (append 32 32 Bool x@10 x@47)) x@45)))
                     (bvult 64 (bvNat 64 2147483647) x@50))
                  (not
                     (bvEq 1 x@11
                        (bvOr 1 (ite x@5 (bvult 64 x@45 x@62) x@61 x@11)
                           (ite x@5 (bvult 64 x@62 x@50) x@61 x@11)))))
               (Prelude.and (not x@51)
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (Prelude.or x@51 (bvEq 64 x@7 x@53))
                                                                     (not (bvult 64 x@53 (bvNat 64 68719476736))))
                                                                  (bvult 64 x@50 x@53))
                                                               (bvult 64 (bvMul 64 x@43 x@52) x@65))
                                                            (bvult 64 (bvNat 64 3071) x@57))
                                                         (Prelude.and (not x@69)
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or (Prelude.or x@69 (not (bvult 64 x@58 x@28)))
                                                                                          (not (bvult 64 x@7 x@58)))
                                                                                       (bvult 64 x@50 x@59))
                                                                                    (bvult 64 (bvAdd 64 x@50 (bvMul 64 x@42 x@58)) x@66))
                                                                                 (not (bvult 64 x@68 x@40)))
                                                                              (not (bvult 64 x@7 x@68)))
                                                                           (not (bvEq 64 x@7 (bvURem 64 x@68 x@8))))
                                                                        (bvult 64 x@50 x@68))
                                                                     (bvult 64 (bvAdd 64 x@50 x@71) x@66))
                                                                  (bvult 64 x@50 (bvAdd 64 x@66 x@59)))
                                                               (bvult 64 x@50 x@70))))
                                                      (bvEq 64 x@7 x@73))
                                                   (bvEq 1 x@11
                                                      (bvOr 1 (ite x@5 (bvult 64 x@73 x@8) x@61 x@11)
                                                         (ite x@5
                                                            (bvult 64 (bvNat 64 4294967295)
                                                               (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@43 x@50) x@52) x@56)
                                                                  x@72))
                                                            x@61
                                                            x@11))))
                                                (bvEq 64 x@7 (bvAnd 64 x@12 x@73)))
                                             (bvEq 64 x@12 x@73))
                                          (bvEq 64 x@7
                                             (bvAdd 64
                                                (bvAdd 64
                                                   (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@50) x@52)
                                                   x@56)
                                                x@72)))
                                       (bvEq 64 x@7
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@50) x@52)
                                                x@56)
                                             x@72)))
                                    (bvEq 64 x@7
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@50) x@52)
                                             x@56)
                                          x@72)))
                                 (bvEq 64 x@7
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@50) x@52)
                                          x@56)
                                       x@72)))
                              (bvEq 64 x@7
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@50) x@52)
                                       x@56)
                                    x@72)))
                           (bvEq 64 x@7
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@50) x@52)
                                    x@56)
                                 x@72)))
                        (not
                           (bvEq 64 x@7
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@86 x@52) x@56) x@72))))
                     (bvult 64 x@50 (bvAdd 64 x@53 x@65)))))
            (bvslt 32 x@47 x@10))
         (Prelude.and
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and
                           (Prelude.and
                              (Prelude.and
                                 (Prelude.and
                                    (Prelude.and
                                       (Prelude.and
                                          (Prelude.and
                                             (Prelude.and
                                                (Prelude.and
                                                   (Prelude.and
                                                      (Prelude.or x@51
                                                         (bvEq 8
                                                            (bvXor 8
                                                               (bvXor 8 (at 16 x@3 x@105 0) (arrayLookupUnint in#1571 x@70))
                                                               (ite x@3 x@69 (slice Bool 0 8 120 x@143)
                                                                  (slice Bool 0 8 120 x@144)))
                                                            (bvXor 8
                                                               (bvXor 8 (at 16 x@3 x@100 0)
                                                                  (arrayLookupUnint in#1571 (bvAdd 64 x@139 x@135)))
                                                               (slice Bool 0 8 120 x@146))))
                                                      (Prelude.or x@51
                                                         (bvEq 8
                                                            (bvXor 8
                                                               (bvXor 8 (at 16 x@3 x@105 1)
                                                                  (arrayLookupUnint in#1571
                                                                     (bvAdd 64 x@141 (ite x@1 x@51 x@26 x@8))))
                                                               (ite x@3 x@69 (slice Bool 8 8 112 x@143)
                                                                  (slice Bool 8 8 112 x@144)))
                                                            (bvXor 8
                                                               (bvXor 8 (at 16 x@3 x@100 1)
                                                                  (arrayLookupUnint in#1571 (bvAdd 64 x@8 x@142)))
                                                               (slice Bool 8 8 112 x@146)))))
                                                   (Prelude.or x@51
                                                      (bvEq 8
                                                         (bvXor 8
                                                            (bvXor 8 (at 16 x@3 x@105 2)
                                                               (arrayLookupUnint in#1571
                                                                  (bvAdd 64 x@141 (ite x@1 x@51 x@8 x@27))))
                                                            (ite x@3 x@69 (slice Bool 16 8 104 x@143)
                                                               (slice Bool 16 8 104 x@144)))
                                                         (bvXor 8
                                                            (bvXor 8 (at 16 x@3 x@100 2)
                                                               (arrayLookupUnint in#1571 (bvAdd 64 x@27 x@142)))
                                                            (slice Bool 16 8 104 x@146)))))
                                                (Prelude.or x@51
                                                   (bvEq 8
                                                      (bvXor 8
                                                         (bvXor 8 (at 16 x@3 x@105 3)
                                                            (arrayLookupUnint in#1571
                                                               (bvAdd 64 x@141 (ite x@1 x@51 x@27 x@28))))
                                                         (ite x@3 x@69 (slice Bool 24 8 96 x@143)
                                                            (slice Bool 24 8 96 x@144)))
                                                      (bvXor 8
                                                         (bvXor 8 (at 16 x@3 x@100 3)
                                                            (arrayLookupUnint in#1571 (bvAdd 64 x@28 x@142)))
                                                         (slice Bool 24 8 96 x@146)))))
                                             (Prelude.or x@51
                                                (bvEq 8
                                                   (bvXor 8
                                                      (bvXor 8 (at 16 x@3 x@105 4)
                                                         (arrayLookupUnint in#1571
                                                            (bvAdd 64 x@141 (ite x@1 x@51 x@28 x@29))))
                                                      (ite x@3 x@69 (slice Bool 32 8 88 x@143)
                                                         (slice Bool 32 8 88 x@144)))
                                                   (bvXor 8
                                                      (bvXor 8 (at 16 x@3 x@100 4)
                                                         (arrayLookupUnint in#1571 (bvAdd 64 x@29 x@142)))
                                                      (slice Bool 32 8 88 x@146)))))
                                          (Prelude.or x@51
                                             (bvEq 8
                                                (bvXor 8
                                                   (bvXor 8 (at 16 x@3 x@105 5)
                                                      (arrayLookupUnint in#1571
                                                         (bvAdd 64 x@141 (ite x@1 x@51 x@29 x@30))))
                                                   (ite x@3 x@69 (slice Bool 40 8 80 x@143)
                                                      (slice Bool 40 8 80 x@144)))
                                                (bvXor 8
                                                   (bvXor 8 (at 16 x@3 x@100 5)
                                                      (arrayLookupUnint in#1571 (bvAdd 64 x@30 x@142)))
                                                   (slice Bool 40 8 80 x@146)))))
                                       (Prelude.or x@51
                                          (bvEq 8
                                             (bvXor 8
                                                (bvXor 8 (at 16 x@3 x@105 6)
                                                   (arrayLookupUnint in#1571
                                                      (bvAdd 64 x@141 (ite x@1 x@51 x@30 x@31))))
                                                (ite x@3 x@69 (slice Bool 48 8 72 x@143)
                                                   (slice Bool 48 8 72 x@144)))
                                             (bvXor 8
                                                (bvXor 8 (at 16 x@3 x@100 6)
                                                   (arrayLookupUnint in#1571 (bvAdd 64 x@31 x@142)))
                                                (slice Bool 48 8 72 x@146)))))
                                    (Prelude.or x@51
                                       (bvEq 8
                                          (bvXor 8
                                             (bvXor 8 (at 16 x@3 x@105 7)
                                                (arrayLookupUnint in#1571
                                                   (bvAdd 64 x@141 (ite x@1 x@51 x@31 x@32))))
                                             (ite x@3 x@69 (slice Bool 56 8 64 x@143)
                                                (slice Bool 56 8 64 x@144)))
                                          (bvXor 8
                                             (bvXor 8 (at 16 x@3 x@100 7)
                                                (arrayLookupUnint in#1571 (bvAdd 64 x@32 x@142)))
                                             (slice Bool 56 8 64 x@146)))))
                                 (Prelude.or x@51
                                    (bvEq 8
                                       (bvXor 8
                                          (bvXor 8 (at 16 x@3 x@105 8)
                                             (arrayLookupUnint in#1571
                                                (bvAdd 64 x@141 (ite x@1 x@51 x@32 x@33))))
                                          (ite x@3 x@69 (slice Bool 64 8 56 x@143)
                                             (slice Bool 64 8 56 x@144)))
                                       (bvXor 8
                                          (bvXor 8 (at 16 x@3 x@100 8)
                                             (arrayLookupUnint in#1571 (bvAdd 64 x@33 x@142)))
                                          (slice Bool 64 8 56 x@146)))))
                              (Prelude.or x@51
                                 (bvEq 8
                                    (bvXor 8
                                       (bvXor 8 (at 16 x@3 x@105 9)
                                          (arrayLookupUnint in#1571
                                             (bvAdd 64 x@141 (ite x@1 x@51 x@33 x@34))))
                                       (ite x@3 x@69 (slice Bool 72 8 48 x@143)
                                          (slice Bool 72 8 48 x@144)))
                                    (bvXor 8
                                       (bvXor 8 (at 16 x@3 x@100 9)
                                          (arrayLookupUnint in#1571 (bvAdd 64 x@34 x@142)))
                                       (slice Bool 72 8 48 x@146)))))
                           (Prelude.or x@51
                              (bvEq 8
                                 (bvXor 8
                                    (bvXor 8 (at 16 x@3 x@105 10)
                                       (arrayLookupUnint in#1571
                                          (bvAdd 64 x@141 (ite x@1 x@51 x@34 x@35))))
                                    (ite x@3 x@69 (slice Bool 80 8 40 x@143)
                                       (slice Bool 80 8 40 x@144)))
                                 (bvXor 8
                                    (bvXor 8 (at 16 x@3 x@100 10)
                                       (arrayLookupUnint in#1571 (bvAdd 64 x@35 x@142)))
                                    (slice Bool 80 8 40 x@146)))))
                        (Prelude.or x@51
                           (bvEq 8
                              (bvXor 8
                                 (bvXor 8 (at 16 x@3 x@105 11)
                                    (arrayLookupUnint in#1571
                                       (bvAdd 64 x@141 (ite x@1 x@51 x@35 x@36))))
                                 (ite x@3 x@69 (slice Bool 88 8 32 x@143)
                                    (slice Bool 88 8 32 x@144)))
                              (bvXor 8
                                 (bvXor 8 (at 16 x@3 x@100 11)
                                    (arrayLookupUnint in#1571 (bvAdd 64 x@36 x@142)))
                                 (slice Bool 88 8 32 x@146)))))
                     (Prelude.or x@51
                        (bvEq 8
                           (bvXor 8
                              (bvXor 8 (at 16 x@3 x@105 12)
                                 (arrayLookupUnint in#1571
                                    (bvAdd 64 x@141 (ite x@1 x@51 x@36 x@37))))
                              (ite x@3 x@69 (slice Bool 96 8 24 x@143)
                                 (slice Bool 96 8 24 x@144)))
                           (bvXor 8
                              (bvXor 8 (at 16 x@3 x@100 12)
                                 (arrayLookupUnint in#1571 (bvAdd 64 x@37 x@142)))
                              (slice Bool 96 8 24 x@146)))))
                  (Prelude.or x@51
                     (bvEq 8
                        (bvXor 8
                           (bvXor 8 (at 16 x@3 x@105 13)
                              (arrayLookupUnint in#1571
                                 (bvAdd 64 x@141 (ite x@1 x@51 x@37 x@38))))
                           (ite x@3 x@69 (slice Bool 104 8 16 x@143)
                              (slice Bool 104 8 16 x@144)))
                        (bvXor 8
                           (bvXor 8 (at 16 x@3 x@100 13)
                              (arrayLookupUnint in#1571 (bvAdd 64 x@38 x@142)))
                           (slice Bool 104 8 16 x@146)))))
               (Prelude.or x@51
                  (bvEq 8
                     (bvXor 8
                        (bvXor 8 (at 16 x@3 x@105 14)
                           (arrayLookupUnint in#1571
                              (bvAdd 64 x@141 (ite x@1 x@51 x@38 x@39))))
                        (ite x@3 x@69 (slice Bool 112 8 8 x@143)
                           (slice Bool 112 8 8 x@144)))
                     (bvXor 8
                        (bvXor 8 (at 16 x@3 x@100 14)
                           (arrayLookupUnint in#1571 (bvAdd 64 x@39 x@142)))
                        (slice Bool 112 8 8 x@146)))))
            (Prelude.or x@51
               (bvEq 8
                  (ite x@3 x@69 (slice Bool 120 8 0 x@143)
                     (slice Bool 120 8 0 x@144))
                  (slice Bool 120 8 0 x@146)))))

