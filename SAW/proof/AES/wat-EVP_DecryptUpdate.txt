2024/02/21 15:42:50 Started AES-GCM check.
2024/02/21 15:42:50 Running saw script verify-AES-GCM-quickcheck.saw.
[20:42:51.337] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/verify-AES-GCM-quickcheck.saw"
[20:42:51.338] Running AES-GCM quick check with evp_cipher_update_len=380
[20:42:51.339] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw"
[20:43:00.389] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/common/helpers.saw"
[20:43:00.400] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/common/memory.saw"
[20:43:00.745] Assume override OPENSSL_malloc
[20:43:00.958] Assume override OPENSSL_malloc
[20:43:02.280] Assume override OPENSSL_malloc
[20:43:02.434] Assume override OPENSSL_realloc
[20:43:02.595] Assume override OPENSSL_free
[20:43:02.743] Assume override OPENSSL_cleanse
[20:43:03.009] evp_cipher_update_len=380
[20:43:03.009] aesni_gcm_cipher_gcm_len=16
[20:43:03.009] aesni_gcm_cipher_len=374
[20:43:03.009] evp_cipher_update_bulk_encrypt=288
[20:43:03.009] bulk_encrypt_used=1
[20:43:03.010] length_after_bulk_encrypt=86
[20:43:03.010] whole_blocks_after_bulk_encrypt=5
[20:43:03.010] GHASH_length_blocks_encrypt=80
[20:43:03.010] evp_cipher_update_bulk_decrypt=288
[20:43:03.010] bulk_decrypt_used=1
[20:43:03.010] length_after_bulk_decrypt=86
[20:43:03.011] whole_blocks_after_bulk_decrypt=5
[20:43:03.011] GHASH_length_blocks_decrypt=80
[20:43:03.011] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/goal-rewrites.saw"
[20:43:03.032] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/goal-rewrites-AES.saw"
[20:43:03.234] WARNING: assuming goal prove_print is unsat
[20:43:03.363] WARNING: assuming goal prove_print is unsat
[20:43:03.497] WARNING: assuming goal prove_print is unsat
[20:43:03.625] WARNING: assuming goal prove_print is unsat
[20:43:03.749] WARNING: assuming goal prove_print is unsat
[20:43:03.875] WARNING: assuming goal prove_print is unsat
[20:43:04.001] WARNING: assuming goal prove_print is unsat
[20:43:04.130] WARNING: assuming goal prove_print is unsat
[20:43:04.258] WARNING: assuming goal prove_print is unsat
[20:43:04.386] WARNING: assuming goal prove_print is unsat
[20:43:04.516] WARNING: assuming goal prove_print is unsat
[20:43:04.648] WARNING: assuming goal prove_print is unsat
[20:43:04.779] WARNING: assuming goal prove_print is unsat
[20:43:04.906] WARNING: assuming goal prove_print is unsat
[20:43:05.037] WARNING: assuming goal prove_print is unsat
[20:43:05.162] WARNING: assuming goal prove_print is unsat
[20:43:05.288] WARNING: assuming goal prove_print is unsat
[20:43:05.415] WARNING: assuming goal prove_print is unsat
[20:43:05.542] WARNING: assuming goal prove_print is unsat
[20:43:05.669] WARNING: assuming goal prove_print is unsat
[20:43:05.799] WARNING: assuming goal prove_print is unsat
[20:43:05.932] WARNING: assuming goal prove_print is unsat
[20:43:06.065] WARNING: assuming goal prove_print is unsat
[20:43:06.198] WARNING: assuming goal prove_print is unsat
[20:43:06.333] WARNING: assuming goal prove_print is unsat
[20:43:06.459] WARNING: assuming goal prove_print is unsat
[20:43:06.584] WARNING: assuming goal prove_print is unsat
[20:43:06.712] WARNING: assuming goal prove_print is unsat
[20:43:06.839] WARNING: assuming goal prove_print is unsat
[20:43:06.971] WARNING: assuming goal prove_print is unsat
[20:43:07.097] WARNING: assuming goal prove_print is unsat
[20:43:07.226] WARNING: assuming goal prove_print is unsat
[20:43:07.357] WARNING: assuming goal prove_print is unsat
[20:43:07.485] WARNING: assuming goal prove_print is unsat
[20:43:07.617] WARNING: assuming goal prove_print is unsat
[20:43:07.747] WARNING: assuming goal prove_print is unsat
[20:43:07.887] WARNING: assuming goal prove_print is unsat
[20:43:08.012] WARNING: assuming goal prove_print is unsat
[20:43:08.136] WARNING: assuming goal prove_print is unsat
[20:43:08.264] WARNING: assuming goal prove_print is unsat
[20:43:08.389] WARNING: assuming goal prove_print is unsat
[20:43:08.517] WARNING: assuming goal prove_print is unsat
[20:43:08.644] WARNING: assuming goal prove_print is unsat
[20:43:08.768] WARNING: assuming goal prove_print is unsat
[20:43:08.897] WARNING: assuming goal prove_print is unsat
[20:43:09.024] WARNING: assuming goal prove_print is unsat
[20:43:09.154] WARNING: assuming goal prove_print is unsat
[20:43:09.285] WARNING: assuming goal prove_print is unsat
[20:43:09.414] WARNING: assuming goal prove_print is unsat
[20:43:09.542] WARNING: assuming goal prove_print is unsat
[20:43:09.674] WARNING: assuming goal prove_print is unsat
[20:43:09.805] WARNING: assuming goal prove_print is unsat
[20:43:09.937] WARNING: assuming goal prove_print is unsat
[20:43:10.068] WARNING: assuming goal prove_print is unsat
[20:43:10.197] WARNING: assuming goal prove_print is unsat
[20:43:10.339] WARNING: assuming goal prove_print is unsat
[20:43:10.480] WARNING: assuming goal prove_print is unsat
[20:43:10.617] WARNING: assuming goal prove_print is unsat
[20:43:10.751] WARNING: assuming goal prove_print is unsat
[20:43:10.882] WARNING: assuming goal prove_print is unsat
[20:43:11.007] WARNING: assuming goal prove_print is unsat
[20:43:11.134] WARNING: assuming goal prove_print is unsat
[20:43:11.257] WARNING: assuming goal prove_print is unsat
[20:43:11.382] WARNING: assuming goal prove_print is unsat
[20:43:11.506] WARNING: assuming goal prove_print is unsat
[20:43:11.631] WARNING: assuming goal prove_print is unsat
[20:43:11.758] WARNING: assuming goal prove_print is unsat
[20:43:11.886] WARNING: assuming goal prove_print is unsat
[20:43:12.012] WARNING: assuming goal prove_print is unsat
[20:43:12.137] WARNING: assuming goal prove_print is unsat
[20:43:12.263] WARNING: assuming goal prove_print is unsat
[20:43:12.391] WARNING: assuming goal prove_print is unsat
[20:43:12.519] WARNING: assuming goal prove_print is unsat
[20:43:12.649] WARNING: assuming goal prove_print is unsat
[20:43:12.778] WARNING: assuming goal prove_print is unsat
[20:43:12.908] WARNING: assuming goal prove_print is unsat
[20:43:13.035] WARNING: assuming goal prove_print is unsat
[20:43:13.163] WARNING: assuming goal prove_print is unsat
[20:43:13.314] WARNING: assuming goal prove_print is unsat
[20:43:13.456] WARNING: assuming goal prove_print is unsat
[20:43:13.590] WARNING: assuming goal prove_print is unsat
[20:43:13.719] WARNING: assuming goal prove_print is unsat
[20:43:13.849] WARNING: assuming goal prove_print is unsat
[20:43:13.980] WARNING: assuming goal prove_print is unsat
[20:43:14.110] WARNING: assuming goal prove_print is unsat
[20:43:14.239] WARNING: assuming goal prove_print is unsat
[20:43:14.372] WARNING: assuming goal prove_print is unsat
[20:43:14.504] WARNING: assuming goal prove_print is unsat
[20:43:14.634] WARNING: assuming goal prove_print is unsat
[20:43:14.767] WARNING: assuming goal prove_print is unsat
[20:43:14.901] WARNING: assuming goal prove_print is unsat
[20:43:15.035] WARNING: assuming goal prove_print is unsat
[20:43:15.170] WARNING: assuming goal prove_print is unsat
[20:43:15.300] WARNING: assuming goal prove_print is unsat
[20:43:15.432] WARNING: assuming goal prove_print is unsat
[20:43:15.565] WARNING: assuming goal prove_print is unsat
[20:43:15.696] WARNING: assuming goal prove_print is unsat
[20:43:15.829] WARNING: assuming goal prove_print is unsat
[20:43:15.960] WARNING: assuming goal prove_print is unsat
[20:43:16.095] WARNING: assuming goal prove_print is unsat
[20:43:16.225] WARNING: assuming goal prove_print is unsat
[20:43:16.358] WARNING: assuming goal prove_print is unsat
[20:43:16.486] WARNING: assuming goal prove_print is unsat
[20:43:16.616] WARNING: assuming goal prove_print is unsat
[20:43:16.745] WARNING: assuming goal prove_print is unsat
[20:43:16.870] WARNING: assuming goal prove_print is unsat
[20:43:17.003] WARNING: assuming goal prove_print is unsat
[20:43:17.133] WARNING: assuming goal prove_print is unsat
[20:43:17.258] WARNING: assuming goal prove_print is unsat
[20:43:17.385] WARNING: assuming goal prove_print is unsat
[20:43:17.513] WARNING: assuming goal prove_print is unsat
[20:43:17.638] WARNING: assuming goal prove_print is unsat
[20:43:17.766] WARNING: assuming goal prove_print is unsat
[20:43:17.920] WARNING: assuming goal prove_print is unsat
[20:43:18.059] WARNING: assuming goal prove_print is unsat
[20:43:18.191] WARNING: assuming goal prove_print is unsat
[20:43:18.323] WARNING: assuming goal prove_print is unsat
[20:43:18.458] WARNING: assuming goal prove_print is unsat
[20:43:18.591] WARNING: assuming goal prove_print is unsat
[20:43:18.763] WARNING: assuming goal prove_print is unsat
[20:43:18.930] WARNING: assuming goal prove_print is unsat
[20:43:19.064] WARNING: assuming goal prove_print is unsat
[20:43:19.196] WARNING: assuming goal prove_print is unsat
[20:43:19.323] WARNING: assuming goal prove_print is unsat
[20:43:19.456] WARNING: assuming goal prove_print is unsat
[20:43:19.720] WARNING: assuming goal prove_print is unsat
[20:43:19.853] WARNING: assuming goal prove_print is unsat
[20:43:19.989] WARNING: assuming goal prove_print is unsat
[20:43:20.122] WARNING: assuming goal prove_print is unsat
[20:43:20.258] WARNING: assuming goal prove_print is unsat
[20:43:20.389] WARNING: assuming goal prove_print is unsat
[20:43:20.519] WARNING: assuming goal prove_print is unsat
[20:43:20.647] WARNING: assuming goal prove_print is unsat
[20:43:20.797] WARNING: assuming goal prove_print is unsat
[20:43:20.947] WARNING: assuming goal prove_print is unsat
[20:43:21.083] WARNING: assuming goal prove_print is unsat
[20:43:21.218] WARNING: assuming goal prove_print is unsat
[20:43:21.358] WARNING: assuming goal prove_print is unsat
[20:43:21.494] WARNING: assuming goal prove_print is unsat
[20:43:21.629] WARNING: assuming goal prove_print is unsat
[20:43:21.766] WARNING: assuming goal prove_print is unsat
[20:43:21.904] WARNING: assuming goal prove_print is unsat
[20:43:22.040] WARNING: assuming goal prove_print is unsat
[20:43:22.178] WARNING: assuming goal prove_print is unsat
[20:43:22.318] WARNING: assuming goal prove_print is unsat
[20:43:22.460] WARNING: assuming goal prove_print is unsat
[20:43:22.599] WARNING: assuming goal prove_print is unsat
[20:43:22.742] WARNING: assuming goal prove_print is unsat
[20:43:22.881] WARNING: assuming goal prove_print is unsat
[20:43:23.020] WARNING: assuming goal prove_print is unsat
[20:43:23.164] WARNING: assuming goal prove_print is unsat
[20:43:23.293] WARNING: assuming goal prove_print is unsat
[20:43:23.392] WARNING: assuming goal prove_print is unsat
[20:43:23.454] WARNING: assuming goal prove_print is unsat
[20:43:23.519] WARNING: assuming goal prove_print is unsat
[20:43:23.586] WARNING: assuming goal prove_print is unsat
[20:43:23.646] WARNING: assuming goal prove_print is unsat
[20:43:23.707] WARNING: assuming goal prove_print is unsat
[20:43:23.770] WARNING: assuming goal prove_print is unsat
[20:43:23.829] WARNING: assuming goal prove_print is unsat
[20:43:23.890] WARNING: assuming goal prove_print is unsat
[20:43:23.952] WARNING: assuming goal prove_print is unsat
[20:43:24.010] WARNING: assuming goal prove_print is unsat
[20:43:24.067] WARNING: assuming goal prove_print is unsat
[20:43:24.259] WARNING: assuming goal prove_print is unsat
[20:43:24.415] WARNING: assuming goal prove_print is unsat
[20:43:24.546] WARNING: assuming goal prove_print is unsat
[20:43:24.677] WARNING: assuming goal prove_print is unsat
[20:43:24.805] WARNING: assuming goal prove_print is unsat
[20:43:24.979] WARNING: assuming goal prove_print is unsat
[20:43:25.212] WARNING: assuming goal prove_print is unsat
[20:43:25.390] WARNING: assuming goal prove_print is unsat
[20:43:25.563] WARNING: assuming goal prove_print is unsat
[20:43:25.731] WARNING: assuming goal prove_print is unsat
[20:43:25.732] WARNING: assuming goal prove_print is unsat
[20:43:25.871] WARNING: assuming goal prove_print is unsat
[20:43:25.872] WARNING: assuming goal prove_print is unsat
[20:43:26.011] WARNING: assuming goal prove_print is unsat
[20:43:26.012] WARNING: assuming goal prove_print is unsat
[20:43:26.179] WARNING: assuming goal prove_print is unsat
[20:43:26.311] WARNING: assuming goal prove_print is unsat
[20:43:26.443] WARNING: assuming goal prove_print is unsat
[20:43:26.572] WARNING: assuming goal prove_print is unsat
[20:43:26.702] WARNING: assuming goal prove_print is unsat
[20:43:26.831] WARNING: assuming goal prove_print is unsat
[20:43:26.961] WARNING: assuming goal prove_print is unsat
[20:43:27.089] WARNING: assuming goal prove_print is unsat
[20:43:27.219] WARNING: assuming goal prove_print is unsat
[20:43:27.344] WARNING: assuming goal prove_print is unsat
[20:43:27.473] WARNING: assuming goal prove_print is unsat
[20:43:27.603] WARNING: assuming goal prove_print is unsat
[20:43:27.731] WARNING: assuming goal prove_print is unsat
[20:43:27.869] WARNING: assuming goal prove_print is unsat
[20:43:28.009] WARNING: assuming goal prove_print is unsat
[20:43:28.072] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES.saw"
[20:43:28.628] Assume override aes_hw_set_encrypt_key
[20:43:29.031] Assume override aes_hw_encrypt
[20:43:29.444] Assume override aes_hw_encrypt
[20:43:29.854] Assume override aes_hw_decrypt
[20:43:30.279] Assume override aes_hw_decrypt
[20:43:30.279] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/GHASH.saw"
[20:43:30.501] Assume override gcm_init_avx
[20:43:30.773] Assume override gcm_gmult_avx
[20:43:31.179] Assume override gcm_ghash_avx
[20:43:31.495] Assume override gcm_ghash_avx
[20:43:32.167] gcm_ghash_avx len=16
[20:43:32.292] WARNING: assuming goal prove_print is unsat
[20:43:32.696] Assume override gcm_ghash_avx
[20:43:32.696] gcm_ghash_avx len=32
[20:43:32.827] WARNING: assuming goal prove_print is unsat
[20:43:33.230] Assume override gcm_ghash_avx
[20:43:33.230] gcm_ghash_avx len=48
[20:43:33.366] WARNING: assuming goal prove_print is unsat
[20:43:33.771] Assume override gcm_ghash_avx
[20:43:33.771] gcm_ghash_avx len=64
[20:43:33.900] WARNING: assuming goal prove_print is unsat
[20:43:34.301] Assume override gcm_ghash_avx
[20:43:34.301] gcm_ghash_avx len=80
[20:43:34.432] WARNING: assuming goal prove_print is unsat
[20:43:36.690] Assume override gcm_ghash_avx
[20:43:36.690] gcm_ghash_avx len=96
[20:43:36.817] WARNING: assuming goal prove_print is unsat
[20:43:37.218] Assume override gcm_ghash_avx
[20:43:37.218] gcm_ghash_avx len=112
[20:43:37.373] WARNING: assuming goal prove_print is unsat
[20:43:37.784] Assume override gcm_ghash_avx
[20:43:37.784] gcm_ghash_avx len=128
[20:43:37.925] WARNING: assuming goal prove_print is unsat
[20:43:38.327] Assume override gcm_ghash_avx
[20:43:38.327] gcm_ghash_avx len=144
[20:43:38.460] WARNING: assuming goal prove_print is unsat
[20:43:38.867] Assume override gcm_ghash_avx
[20:43:38.867] gcm_ghash_avx len=160
[20:43:39.008] WARNING: assuming goal prove_print is unsat
[20:43:39.412] Assume override gcm_ghash_avx
[20:43:39.412] gcm_ghash_avx len=176
[20:43:39.545] WARNING: assuming goal prove_print is unsat
[20:43:39.966] Assume override gcm_ghash_avx
[20:43:39.966] gcm_ghash_avx len=192
[20:43:40.129] WARNING: assuming goal prove_print is unsat
[20:43:40.541] Assume override gcm_ghash_avx
[20:43:40.541] gcm_ghash_avx len=208
[20:43:40.671] WARNING: assuming goal prove_print is unsat
[20:43:41.074] Assume override gcm_ghash_avx
[20:43:41.074] gcm_ghash_avx len=224
[20:43:41.228] WARNING: assuming goal prove_print is unsat
[20:43:41.629] Assume override gcm_ghash_avx
[20:43:41.629] gcm_ghash_avx len=240
[20:43:41.762] WARNING: assuming goal prove_print is unsat
[20:43:42.168] Assume override gcm_ghash_avx
[20:43:42.168] gcm_ghash_avx len=256
[20:43:42.310] WARNING: assuming goal prove_print is unsat
[20:43:42.724] Assume override gcm_ghash_avx
[20:43:42.724] gcm_ghash_avx len=272
[20:43:42.856] WARNING: assuming goal prove_print is unsat
[20:43:43.286] Assume override gcm_ghash_avx
[20:43:43.706] Assume override gcm_ghash_avx
[20:43:43.706] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw"
[20:43:44.304] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:44.749] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:44.791] aes_hw_ctr32 copy lemma: 1
[20:43:44.925] WARNING: assuming goal prove_print is unsat
[20:43:44.925] aes_hw_ctr32 copy lemma: 2
[20:43:45.055] WARNING: assuming goal prove_print is unsat
[20:43:45.055] aes_hw_ctr32 copy lemma: 3
[20:43:45.183] WARNING: assuming goal prove_print is unsat
[20:43:45.183] aes_hw_ctr32 copy lemma: 4
[20:43:45.315] WARNING: assuming goal prove_print is unsat
[20:43:45.315] aes_hw_ctr32 copy lemma: 5
[20:43:45.448] WARNING: assuming goal prove_print is unsat
[20:43:45.448] aes_hw_ctr32 copy lemma: 6
[20:43:45.581] WARNING: assuming goal prove_print is unsat
[20:43:45.581] aes_hw_ctr32 copy lemma: 7
[20:43:45.713] WARNING: assuming goal prove_print is unsat
[20:43:45.713] aes_hw_ctr32 copy lemma: 8
[20:43:45.844] WARNING: assuming goal prove_print is unsat
[20:43:45.844] aes_hw_ctr32 copy lemma: 9
[20:43:45.976] WARNING: assuming goal prove_print is unsat
[20:43:45.976] aes_hw_ctr32 copy lemma: 10
[20:43:46.105] WARNING: assuming goal prove_print is unsat
[20:43:46.105] aes_hw_ctr32 copy lemma: 11
[20:43:46.239] WARNING: assuming goal prove_print is unsat
[20:43:46.239] aes_hw_ctr32 copy lemma: 12
[20:43:46.374] WARNING: assuming goal prove_print is unsat
[20:43:46.374] aes_hw_ctr32 copy lemma: 13
[20:43:46.508] WARNING: assuming goal prove_print is unsat
[20:43:46.508] aes_hw_ctr32 copy lemma: 14
[20:43:46.644] WARNING: assuming goal prove_print is unsat
[20:43:46.644] aes_hw_ctr32 copy lemma: 15
[20:43:46.777] WARNING: assuming goal prove_print is unsat
[20:43:46.777] aes_hw_ctr32 copy lemma: 16
[20:43:46.929] WARNING: assuming goal prove_print is unsat
[20:43:46.929] aes_hw_ctr32 copy lemma: 17
[20:43:47.070] WARNING: assuming goal prove_print is unsat
[20:43:47.112] aes_hw_ctr32_encrypt blocks=1
[20:43:47.550] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:48.141] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:48.141] aes_hw_ctr32_encrypt blocks=2
[20:43:48.587] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:49.175] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:49.175] aes_hw_ctr32_encrypt blocks=3
[20:43:49.615] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:50.205] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:50.205] aes_hw_ctr32_encrypt blocks=4
[20:43:50.644] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:51.250] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:51.250] aes_hw_ctr32_encrypt blocks=5
[20:43:51.696] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:52.285] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:52.285] aes_hw_ctr32_encrypt blocks=6
[20:43:52.719] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:53.313] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:53.313] aes_hw_ctr32_encrypt blocks=7
[20:43:53.774] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:54.359] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:54.359] aes_hw_ctr32_encrypt blocks=8
[20:43:54.799] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:55.401] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:55.401] aes_hw_ctr32_encrypt blocks=9
[20:43:58.748] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:59.339] Assume override aes_hw_ctr32_encrypt_blocks
[20:43:59.339] aes_hw_ctr32_encrypt blocks=10
[20:43:59.776] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:00.372] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:00.372] aes_hw_ctr32_encrypt blocks=11
[20:44:00.811] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:01.407] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:01.407] aes_hw_ctr32_encrypt blocks=12
[20:44:01.848] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:02.446] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:02.446] aes_hw_ctr32_encrypt blocks=13
[20:44:02.890] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:03.490] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:03.490] aes_hw_ctr32_encrypt blocks=14
[20:44:03.927] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:04.519] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:04.519] aes_hw_ctr32_encrypt blocks=15
[20:44:04.958] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:05.547] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:05.547] aes_hw_ctr32_encrypt blocks=16
[20:44:05.997] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:06.587] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:06.588] aes_hw_ctr32_encrypt blocks=17
[20:44:07.043] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:07.627] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:08.214] Assume override aes_hw_ctr32_encrypt_blocks
[20:44:08.214] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw"
[20:44:09.033] Assume override aesni_gcm_encrypt
[20:44:09.845] Assume override aesni_gcm_decrypt
[20:44:10.476] Assume override aesni_gcm_encrypt
[20:44:11.102] Assume override aesni_gcm_decrypt
[20:44:11.151] Loading file "/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw"
[20:44:11.323] Assume override aes_gcm_from_cipher_ctx
[20:44:11.728] Assume override EVP_aes_256_gcm_init
[20:44:13.267] Assume override EVP_CipherInit_ex
[20:44:14.718] Assume override EVP_CipherInit_ex
[20:44:17.394] Assume override EVP_EncryptUpdate
[20:44:20.091] Assume override EVP_DecryptUpdate
[20:44:23.214] Assume override EVP_EncryptUpdate
[20:44:26.309] Verifying EVP_DecryptUpdate ...
[20:44:40.988] Simulating EVP_DecryptUpdate ...
[20:44:40.992] Registering overrides for `aes_gcm_from_cipher_ctx`
[20:44:40.992]   variant `Symbol "aes_gcm_from_cipher_ctx"`
[20:44:40.992] Registering overrides for `aes_hw_ctr32_encrypt_blocks`
[20:44:40.992]   variant `Symbol "aes_hw_ctr32_encrypt_blocks"`
[20:44:40.992] Registering overrides for `aes_hw_encrypt`
[20:44:40.992]   variant `Symbol "aes_hw_encrypt"`
[20:44:40.992] Registering overrides for `aesni_gcm_decrypt`
[20:44:40.992]   variant `Symbol "aesni_gcm_decrypt"`
[20:44:40.992] Registering overrides for `aesni_gcm_encrypt`
[20:44:40.992]   variant `Symbol "aesni_gcm_encrypt"`
[20:44:40.992] Registering overrides for `gcm_ghash_avx`
[20:44:40.992]   variant `Symbol "gcm_ghash_avx"`
[20:44:40.992] Registering overrides for `gcm_gmult_avx`
[20:44:40.992]   variant `Symbol "gcm_gmult_avx"`
[20:44:41.290] Matching 1 overrides of  aes_gcm_from_cipher_ctx ...
[20:44:41.290] Branching on 1 override variants of aes_gcm_from_cipher_ctx ...
[20:44:41.290] Applied override! aes_gcm_from_cipher_ctx
[20:44:41.325] Matching 1 overrides of  gcm_gmult_avx ...
[20:44:41.419] Branching on 1 override variants of gcm_gmult_avx ...
[20:44:42.922] Applied override! gcm_gmult_avx
[20:44:42.923] Matching 1 overrides of  aesni_gcm_decrypt ...
[20:44:44.164] Branching on 1 override variants of aesni_gcm_decrypt ...
[20:44:47.667] Applied override! aesni_gcm_decrypt
[20:44:51.505] Matching 1 overrides of  gcm_ghash_avx ...
[20:44:52.149] Branching on 1 override variants of gcm_ghash_avx ...
[20:44:59.552] Applied override! gcm_ghash_avx
[20:44:59.552] Matching 1 overrides of  aes_hw_ctr32_encrypt_blocks ...
[20:45:00.461] Branching on 1 override variants of aes_hw_ctr32_encrypt_blocks ...
[20:45:01.413] Applied override! aes_hw_ctr32_encrypt_blocks
[20:45:01.431] Matching 1 overrides of  aes_hw_encrypt ...
[20:45:01.433] Branching on 1 override variants of aes_hw_encrypt ...
[20:45:03.166] Applied override! aes_hw_encrypt
[20:45:08.913] Symbolic simulation completed with side conditions.
[20:45:10.287] Checking proof obligations EVP_DecryptUpdate ...
[20:45:10.957] Goal EVP_DecryptUpdate (goal number 0): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:11.877] Goal EVP_DecryptUpdate (goal number 1): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:12.789] Goal EVP_DecryptUpdate (goal number 2): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:13.696] Goal EVP_DecryptUpdate (goal number 3): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:14.607] Goal EVP_DecryptUpdate (goal number 4): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:15.522] Goal EVP_DecryptUpdate (goal number 5): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:16.431] Goal EVP_DecryptUpdate (goal number 6): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:17.350] Goal EVP_DecryptUpdate (goal number 7): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:18.281] Goal EVP_DecryptUpdate (goal number 8): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:19.192] Goal EVP_DecryptUpdate (goal number 9): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:20.111] Goal EVP_DecryptUpdate (goal number 10): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:21.030] Goal EVP_DecryptUpdate (goal number 11): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:21.951] Goal EVP_DecryptUpdate (goal number 12): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:22.855] Goal EVP_DecryptUpdate (goal number 13): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:23.774] Goal EVP_DecryptUpdate (goal number 14): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:24.692] Goal EVP_DecryptUpdate (goal number 15): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:25.624] Goal EVP_DecryptUpdate (goal number 16): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:26.544] Goal EVP_DecryptUpdate (goal number 17): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:27.451] Goal EVP_DecryptUpdate (goal number 18): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:28.358] Goal EVP_DecryptUpdate (goal number 19): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:29.264] Goal EVP_DecryptUpdate (goal number 20): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:30.180] Goal EVP_DecryptUpdate (goal number 21): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:31.070] Goal EVP_DecryptUpdate (goal number 22): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:31.972] Goal EVP_DecryptUpdate (goal number 23): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:32.887] Goal EVP_DecryptUpdate (goal number 24): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:33.795] Goal EVP_DecryptUpdate (goal number 25): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:34.705] Goal EVP_DecryptUpdate (goal number 26): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:35.617] Goal EVP_DecryptUpdate (goal number 27): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:36.559] Goal EVP_DecryptUpdate (goal number 28): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:37.524] Goal EVP_DecryptUpdate (goal number 29): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:38.440] Goal EVP_DecryptUpdate (goal number 30): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:39.334] Goal EVP_DecryptUpdate (goal number 31): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:40.229] Goal EVP_DecryptUpdate (goal number 32): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:41.127] Goal EVP_DecryptUpdate (goal number 33): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:42.026] Goal EVP_DecryptUpdate (goal number 34): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:42.922] Goal EVP_DecryptUpdate (goal number 35): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:43.818] Goal EVP_DecryptUpdate (goal number 36): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:44.725] Goal EVP_DecryptUpdate (goal number 37): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:45.629] Goal EVP_DecryptUpdate (goal number 38): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:46.540] Goal EVP_DecryptUpdate (goal number 39): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:47.440] Goal EVP_DecryptUpdate (goal number 40): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:48.364] Goal EVP_DecryptUpdate (goal number 41): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:49.278] Goal EVP_DecryptUpdate (goal number 42): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:50.171] Goal EVP_DecryptUpdate (goal number 43): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:51.070] Goal EVP_DecryptUpdate (goal number 44): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:51.990] Goal EVP_DecryptUpdate (goal number 45): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:52.957] Goal EVP_DecryptUpdate (goal number 46): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:53.859] Goal EVP_DecryptUpdate (goal number 47): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:54.790] Goal EVP_DecryptUpdate (goal number 48): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:55.736] Goal EVP_DecryptUpdate (goal number 49): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:45:56.636] Goal EVP_DecryptUpdate (goal number 50): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:57.575] Goal EVP_DecryptUpdate (goal number 51): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:45:58.541] Goal EVP_DecryptUpdate (goal number 52): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:45:59.456] Goal EVP_DecryptUpdate (goal number 53): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

EqTrue True

[20:46:00.353] Goal EVP_DecryptUpdate (goal number 54): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:46:01.268] Goal EVP_DecryptUpdate (goal number 55): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

EqTrue True

[20:46:02.148] Goal EVP_DecryptUpdate (goal number 56): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:23 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:23: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not (bvult 64 x@6 (bvNat 64 15))))

[20:46:03.051] Goal EVP_DecryptUpdate (goal number 57): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:728:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:728:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not
            (bvult 64 (bvAdd 64 (bvNat 64 18446744073709551615) x@6)
               (bvNat 64 14))))

[20:46:03.961] Goal EVP_DecryptUpdate (goal number 58): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:12 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:12: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not (bvult 64 x@6 (bvNat 64 15))))

[20:46:04.886] Goal EVP_DecryptUpdate (goal number 59): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:729:16 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:729:16: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 1 Bool
      x@2 = bvNat 32 0
      x@3 = bvNat 1 0
      x@4 = bvNat 64 68719476704
      x@5 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@6 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@5 0) (bvNat 32 4294967295) x@2)
              x@5
      x@7 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@8 = bvNat 1 1
      x@9 = bvAdd 64 x@7 x@6
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@5 (bvNat 32 2147483648)))
                        (not (bvult 64 x@7 x@4)))
                     (not (bvult 64 (bvAdd 64 x@7 (append 32 32 Bool x@2 x@5)) x@4)))
                  (bvult 64 (bvNat 64 2147483647) x@6))
               (not
                  (bvEq 1 x@3
                     (bvOr 1 (ite x@1 (bvult 64 x@4 x@9) x@8 x@3)
                        (ite x@1 (bvult 64 x@9 x@6) x@8 x@3)))))
            (bvEq 64 (bvNat 64 0)
               (bvAdd 64 (bvNat 64 18446744073709551602) x@6)))
         (not
            (bvult 64 (bvAdd 64 (bvNat 64 18446744073709551615) x@6)
               (bvNat 64 14))))

[20:46:05.812] Goal EVP_DecryptUpdate (goal number 60): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:735:7 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:735:7: error: in overrideBranches
No override specification applies for gcm_gmult_avx.
Arguments:
- concrete pointer: allocation = 7491, offset = 64
- concrete pointer: allocation = 7491, offset = 80
Run SAW with --sim-verbose=3 to see a description of each override.

EqTrue True

[20:46:06.755] Goal EVP_DecryptUpdate (goal number 61): safety assertion
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:163:31 in overrideBranches
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:163:31: error: in overrideBranches
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 68719476704
      x@7 = bvNat 64 18446744073709551602
      x@8 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@9 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@8 0) (bvNat 32 4294967295) x@4)
              x@8
      x@10 = bvEq 64 x@3 (bvAdd 64 x@7 x@9)
      x@11 = ite x@1 x@10 x@7 (bvNat 64 18446744073709551601)
      x@12 = bvAdd 64 x@9 x@11
      x@13 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@14 = bvNat 1 1
      x@15 = bvAdd 64 x@13 x@9
      x@16 = bvult 64 x@9 x@12
      x@17 = ite x@1 x@10 (bvNat 64 14) (bvNat 64 15)
      x@18 = bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@11)
               x@17
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@8 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@13 x@6)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@13 (append 32 32 Bool x@4 x@8)) x@6)))
                                 (bvult 64 (bvNat 64 2147483647) x@9))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@6 x@15) x@14 x@5)
                                       (ite x@2 (bvult 64 x@15 x@9) x@14 x@5)))))
                           x@10)
                        (bvEq 64 x@3 x@12))
                     (not (bvult 64 x@12 (bvNat 64 68719476736))))
                  x@16)
               x@18)
            (bvult 64 x@9 (bvAdd 64 x@12 x@17)))
         (Prelude.and (not x@16) (not x@18)))

[20:46:07.727] Goal EVP_DecryptUpdate (goal number 62): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:145:10 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:145:10: error: in overrideBranches
No override specification applies for aesni_gcm_decrypt.
Arguments:
- pointer with concrete allocation and symbolic offset: allocation = 7493
- pointer with concrete allocation and symbolic offset: allocation = 7494
- symbolic integer:  width = 64
- concrete pointer: allocation = 7491, offset = 384
- concrete pointer: allocation = 7491, offset = 0
- concrete pointer: allocation = 7491, offset = 80
- concrete pointer: allocation = 7491, offset = 64
The conjunction of these overrides' preconditions was unsatisfiable, meaning your override can never apply. You probably have unintentionally specified mutually exclusive/inconsistent preconditions.
- Name: aesni_gcm_decrypt
  Location: /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AESNI-GCM.saw:163:31
  Argument types: 
  - i8*
  - i8*
  - i64
  - %struct.aes_key_st*
  - i8*
  - %struct.u128*
  - i8*
  Return type: i64
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 68719476704
      x@7 = bvNat 64 18446744073709551602
      x@8 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@9 = append 32 32 Bool
              (ite (Vec 32 Bool) (at 32 Bool x@8 0) (bvNat 32 4294967295) x@4)
              x@8
      x@10 = bvEq 64 x@3 (bvAdd 64 x@7 x@9)
      x@11 = ite x@1 x@10 x@7 (bvNat 64 18446744073709551601)
      x@12 = bvAdd 64 x@9 x@11
      x@13 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@14 = bvNat 1 1
      x@15 = bvAdd 64 x@13 x@9
      x@16 = ite x@1 x@10 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or (not (bvult 32 x@8 (bvNat 32 2147483648)))
                           (not (bvult 64 x@13 x@6)))
                        (not
                           (bvult 64 (bvAdd 64 x@13 (append 32 32 Bool x@4 x@8)) x@6)))
                     (bvult 64 (bvNat 64 2147483647) x@9))
                  (not
                     (bvEq 1 x@5
                        (bvOr 1 (ite x@2 (bvult 64 x@6 x@15) x@14 x@5)
                           (ite x@2 (bvult 64 x@15 x@9) x@14 x@5)))))
               x@10)
            (bvEq 64 x@3 x@12))
         (Prelude.and
            (Prelude.and
               (Prelude.and (bvult 64 x@12 (bvNat 64 68719476736))
                  (not (bvult 64 x@9 x@12)))
               (not
                  (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@11)
                     x@16)))
            (not (bvult 64 x@9 (bvAdd 64 x@12 x@16)))))

[20:46:08.745] Goal EVP_DecryptUpdate (goal number 63): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:749:8 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:749:8: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 96
      x@7 = bvNat 64 68719476704
      x@8 = bvNat 64 18446744073709551602
      x@9 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@10 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@9 0) (bvNat 32 4294967295) x@4)
               x@9
      x@11 = bvEq 64 x@3 (bvAdd 64 x@8 x@10)
      x@12 = ite x@1 x@11 x@8 (bvNat 64 18446744073709551601)
      x@13 = bvAdd 64 x@10 x@12
      x@14 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@15 = bvNat 1 1
      x@16 = bvAdd 64 x@14 x@10
      x@17 = ite x@1 x@11 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@9 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@14 x@7)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@14 (append 32 32 Bool x@4 x@9)) x@7)))
                                 (bvult 64 (bvNat 64 2147483647) x@10))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@7 x@16) x@15 x@5)
                                       (ite x@2 (bvult 64 x@16 x@10) x@15 x@5)))))
                           x@11)
                        (bvEq 64 x@3 x@13))
                     (not (bvult 64 x@13 (bvNat 64 68719476736))))
                  (bvult 64 x@10 x@13))
               (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@12) x@17))
            (bvult 64 x@10 (bvAdd 64 x@13 x@17)))
         (not
            (bvult 64 x@10
               (bvAdd 64 x@17
                  (ite x@1 (bvult 64 x@13 x@6) x@3
                     (bvMul 64 x@6 (bvUDiv 64 x@13 x@6)))))))

[20:46:09.869] Goal EVP_DecryptUpdate (goal number 64): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:750:9 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:750:9: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 32 0
      x@5 = bvNat 1 0
      x@6 = bvNat 64 96
      x@7 = bvNat 64 68719476704
      x@8 = bvNat 64 18446744073709551602
      x@9 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@10 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@9 0) (bvNat 32 4294967295) x@4)
               x@9
      x@11 = bvEq 64 x@3 (bvAdd 64 x@8 x@10)
      x@12 = ite x@1 x@11 x@8 (bvNat 64 18446744073709551601)
      x@13 = bvAdd 64 x@10 x@12
      x@14 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@15 = bvNat 1 1
      x@16 = bvAdd 64 x@14 x@10
      x@17 = ite x@1 x@11 (bvNat 64 14) (bvNat 64 15)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or (not (bvult 32 x@9 (bvNat 32 2147483648)))
                                       (not (bvult 64 x@14 x@7)))
                                    (not
                                       (bvult 64 (bvAdd 64 x@14 (append 32 32 Bool x@4 x@9)) x@7)))
                                 (bvult 64 (bvNat 64 2147483647) x@10))
                              (not
                                 (bvEq 1 x@5
                                    (bvOr 1 (ite x@2 (bvult 64 x@7 x@16) x@15 x@5)
                                       (ite x@2 (bvult 64 x@16 x@10) x@15 x@5)))))
                           x@11)
                        (bvEq 64 x@3 x@13))
                     (not (bvult 64 x@13 (bvNat 64 68719476736))))
                  (bvult 64 x@10 x@13))
               (bvult 64 (bvMul 64 (bvNat 64 18446744073709551615) x@12) x@17))
            (bvult 64 x@10 (bvAdd 64 x@13 x@17)))
         (not
            (bvult 64 x@10
               (bvAdd 64 x@17
                  (ite x@1 (bvult 64 x@13 x@6) x@3
                     (bvMul 64 x@6 (bvUDiv 64 x@13 x@6)))))))

[20:46:11.012] Goal EVP_DecryptUpdate (goal number 65): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:769:5 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:769:5: error: in overrideBranches
No override specification applies for gcm_ghash_avx.
Arguments:
- concrete pointer: allocation = 7491, offset = 64
- concrete pointer: allocation = 7491, offset = 80
- pointer with concrete allocation and symbolic offset: allocation = 7493
- symbolic integer:  width = 64
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551615
      x@9 = bvNat 64 68719476704
      x@10 = bvNat 64 18446744073709551602
      x@11 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@12 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@11 0) (bvNat 32 4294967295)
                  x@5)
               x@11
      x@13 = bvEq 64 x@3 (bvAdd 64 x@10 x@12)
      x@14 = ite x@1 x@13 x@10 (bvNat 64 18446744073709551601)
      x@15 = bvAdd 64 x@12 x@14
      x@16 = ite x@1 (bvult 64 x@15 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@15 x@7))
      x@17 = bvAdd 64 x@15 (bvMul 64 x@8 x@16)
      x@18 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@19 = bvNat 1 1
      x@20 = bvAdd 64 x@18 x@12
      x@21 = ite x@1 x@13 (bvNat 64 14) (bvNat 64 15)
      x@22 = bvAdd 64 x@21 x@16
      x@23 = bvUDiv 64 x@17 x@4
      x@24 = bvMul 64 x@4 x@23
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or (not (bvult 32 x@11 (bvNat 32 2147483648)))
                                             (not (bvult 64 x@18 x@9)))
                                          (not
                                             (bvult 64 (bvAdd 64 x@18 (append 32 32 Bool x@5 x@11)) x@9)))
                                       (bvult 64 (bvNat 64 2147483647) x@12))
                                    (not
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@9 x@20) x@19 x@6)
                                             (ite x@2 (bvult 64 x@20 x@12) x@19 x@6)))))
                                 x@13)
                              (bvEq 64 x@3 x@15))
                           (not (bvult 64 x@15 (bvNat 64 68719476736))))
                        (bvult 64 x@12 x@15))
                     (bvult 64 (bvMul 64 x@8 x@14) x@21))
                  (bvult 64 (bvNat 64 3071) x@17))
               (bvEq 64 x@3 x@24))
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and (bvult 64 x@24 (bvNat 64 288)) (bvult 64 x@3 x@24))
                        (bvEq 64 x@3 (bvURem 64 x@24 x@4)))
                     (not (bvult 64 x@12 x@24)))
                  (not
                     (bvult 64
                        (bvAdd 64 x@12 (bvMul 64 (bvNat 64 18446744073709551600) x@23))
                        x@22)))
               (not (bvult 64 x@12 (bvAdd 64 x@22 x@24)))))
         (bvult 64 x@12 (bvAdd 64 x@15 x@21)))

[20:46:12.179] Goal EVP_DecryptUpdate (goal number 66): safety assertion
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw:161:49 in overrideBranches
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-CTR32.saw:161:49: error: in overrideBranches
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvAdd 64 x@16 (bvMul 64 x@9 x@17)
      x@19 = bvShr 64 x@18 4
      x@20 = bvMul 64 x@4 x@19
      x@21 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@22 = bvNat 1 1
      x@23 = bvAdd 64 x@21 x@13
      x@24 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@25 = bvAdd 64 x@24 x@17
      x@26 = bvUDiv 64 x@18 x@4
      x@27 = bvMul 64 x@4 x@26
      x@28 = bvult 64 x@13 x@20
      x@29 = bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@19)) x@25
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                                              (not (bvult 64 x@21 x@10)))
                                                                           (not
                                                                              (bvult 64 (bvAdd 64 x@21 (append 32 32 Bool x@5 x@12)) x@10)))
                                                                        (bvult 64 (bvNat 64 2147483647) x@13))
                                                                     (not
                                                                        (bvEq 1 x@6
                                                                           (bvOr 1 (ite x@2 (bvult 64 x@10 x@23) x@22 x@6)
                                                                              (ite x@2 (bvult 64 x@23 x@13) x@22 x@6)))))
                                                                  x@14)
                                                               (bvEq 64 x@3 x@16))
                                                            (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                                         (bvult 64 x@13 x@16))
                                                      (bvult 64 (bvMul 64 x@9 x@15) x@24))
                                                   (bvult 64 (bvNat 64 3071) x@18))
                                                (bvEq 64 x@3 x@27))
                                             (not (bvult 64 x@27 (bvNat 64 288))))
                                          (not (bvult 64 x@3 x@27)))
                                       (not (bvEq 64 x@3 (bvURem 64 x@27 x@4))))
                                    (bvult 64 x@13 x@27))
                                 (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@26)) x@25))
                              (not (bvult 64 x@19 (bvNat 64 18))))
                           (not (bvult 64 x@3 x@19)))
                        x@28)
                     x@29)
                  (bvult 64 x@13 (bvAdd 64 x@16 x@24)))
               (bvult 64 x@13 (bvAdd 64 x@25 x@27)))
            (bvult 64 x@13 (bvAdd 64 x@25 x@20)))
         (Prelude.and (not x@28) (not x@29)))

[20:46:13.208] Goal EVP_DecryptUpdate (goal number 67): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:770:5 in overrideBranches
src/crypto/fipsmodule/modes/gcm.c:770:5: error: in overrideBranches
No override specification applies for aes_hw_ctr32_encrypt_blocks.
Arguments:
- pointer with concrete allocation and symbolic offset: allocation = 7493
- pointer with concrete allocation and symbolic offset: allocation = 7494
- symbolic integer:  width = 64
- concrete pointer: allocation = 7491, offset = 384
- concrete pointer: allocation = 7491, offset = 0
Run SAW with --sim-verbose=3 to see a description of each override.

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvAdd 64 x@16 (bvMul 64 x@9 x@17)
      x@19 = bvShr 64 x@18 4
      x@20 = bvMul 64 x@4 x@19
      x@21 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@22 = bvNat 1 1
      x@23 = bvAdd 64 x@21 x@13
      x@24 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@25 = bvAdd 64 x@24 x@17
      x@26 = bvUDiv 64 x@18 x@4
      x@27 = bvMul 64 x@4 x@26
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@21 x@10)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@21 (append 32 32 Bool x@5 x@12)) x@10)))
                                                         (bvult 64 (bvNat 64 2147483647) x@13))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@10 x@23) x@22 x@6)
                                                               (ite x@2 (bvult 64 x@23 x@13) x@22 x@6)))))
                                                   x@14)
                                                (bvEq 64 x@3 x@16))
                                             (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                          (bvult 64 x@13 x@16))
                                       (bvult 64 (bvMul 64 x@9 x@15) x@24))
                                    (bvult 64 (bvNat 64 3071) x@18))
                                 (bvEq 64 x@3 x@27))
                              (not (bvult 64 x@27 (bvNat 64 288))))
                           (not (bvult 64 x@3 x@27)))
                        (not (bvEq 64 x@3 (bvURem 64 x@27 x@4))))
                     (bvult 64 x@13 x@27))
                  (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@26)) x@25))
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and (bvult 64 x@19 (bvNat 64 18)) (bvult 64 x@3 x@19))
                        (not (bvult 64 x@13 x@20)))
                     (not (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@19)) x@25)))
                  (not (bvult 64 x@13 (bvAdd 64 x@25 x@20)))))
            (bvult 64 x@13 (bvAdd 64 x@16 x@24)))
         (bvult 64 x@13 (bvAdd 64 x@25 x@27)))

[20:46:14.268] Goal EVP_DecryptUpdate (goal number 68): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:773:9 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:773:9: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:46:15.223] Goal EVP_DecryptUpdate (goal number 69): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:774:8 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:774:8: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

EqTrue True

[20:46:16.192] Goal EVP_DecryptUpdate (goal number 70): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:775:9 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:775:9: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Poison value created
  Signed subtraction caused wrapping even though the `nsw` flag was set

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvAdd 64 x@16 (bvMul 64 x@9 x@17)
      x@19 = bvShr 64 x@18 4
      x@20 = bvMul 64 x@4 x@19
      x@21 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@22 = bvNat 1 1
      x@23 = bvAdd 64 x@21 x@13
      x@24 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@25 = bvAdd 64 x@24 x@17
      x@26 = bvUDiv 64 x@18 x@4
      x@27 = bvMul 64 x@4 x@26
      x@28 = bvMul 64 x@8 x@26
      x@29 = bvslt 64 x@18 x@3
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                                                 (not (bvult 64 x@21 x@10)))
                                                                              (not
                                                                                 (bvult 64 (bvAdd 64 x@21 (append 32 32 Bool x@5 x@12)) x@10)))
                                                                           (bvult 64 (bvNat 64 2147483647) x@13))
                                                                        (not
                                                                           (bvEq 1 x@6
                                                                              (bvOr 1 (ite x@2 (bvult 64 x@10 x@23) x@22 x@6)
                                                                                 (ite x@2 (bvult 64 x@23 x@13) x@22 x@6)))))
                                                                     x@14)
                                                                  (bvEq 64 x@3 x@16))
                                                               (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                                            (bvult 64 x@13 x@16))
                                                         (bvult 64 (bvMul 64 x@9 x@15) x@24))
                                                      (bvult 64 (bvNat 64 3071) x@18))
                                                   (bvEq 64 x@3 x@27))
                                                (not (bvult 64 x@27 (bvNat 64 288))))
                                             (not (bvult 64 x@3 x@27)))
                                          (not (bvEq 64 x@3 (bvURem 64 x@27 x@4))))
                                       (bvult 64 x@13 x@27))
                                    (bvult 64 (bvAdd 64 x@13 x@28) x@25))
                                 (not (bvult 64 x@19 (bvNat 64 18))))
                              (not (bvult 64 x@3 x@19)))
                           (bvult 64 x@13 x@20))
                        (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@19)) x@25))
                     (bvult 64 x@13 (bvAdd 64 x@16 x@24)))
                  (bvult 64 x@13 (bvAdd 64 x@25 x@27)))
               (bvult 64 x@13 (bvAdd 64 x@25 x@20)))
            (boolEq x@29 (bvslt 64 (bvAdd 64 x@18 x@28) x@3)))
         (boolEq x@29 (bvslt 64 x@27 x@3)))

[20:46:17.185] Goal EVP_DecryptUpdate (goal number 71): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvMul 64 x@9 x@17
      x@19 = bvAdd 64 x@16 x@18
      x@20 = bvShr 64 x@19 4
      x@21 = bvMul 64 x@4 x@20
      x@22 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@23 = bvNat 1 1
      x@24 = bvAdd 64 x@22 x@13
      x@25 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@26 = bvAdd 64 x@25 x@17
      x@27 = bvUDiv 64 x@19 x@4
      x@28 = bvMul 64 x@4 x@27
      x@29 = bvEq 64 x@3 x@28
      x@30 = bvult 64 x@13 (bvAdd 64 x@26 x@28)
      x@31 = bvMul 64 x@8 x@27
      x@32 = ite x@1 x@29 x@3 x@31
      x@33 = bvAdd 64 x@19 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@22 x@10)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@22 (append 32 32 Bool x@5 x@12)) x@10)))
                                                (bvult 64 (bvNat 64 2147483647) x@13))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@10 x@24) x@23 x@6)
                                                      (ite x@2 (bvult 64 x@24 x@13) x@23 x@6)))))
                                          x@14)
                                       (bvEq 64 x@3 x@16))
                                    (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                 (bvult 64 x@13 x@16))
                              (bvult 64 (bvMul 64 x@9 x@15) x@25))
                           (bvult 64 (bvNat 64 3071) x@19))
                        (not x@30))
                     (Prelude.and (not x@29)
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or x@29 (not (bvult 64 x@28 (bvNat 64 288))))
                                                      (not (bvult 64 x@3 x@28)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@28 x@4))))
                                                (bvult 64 x@13 x@28))
                                             (bvult 64 (bvAdd 64 x@13 x@31) x@26))
                                          (not (bvult 64 x@20 (bvNat 64 18))))
                                       (not (bvult 64 x@3 x@20)))
                                    (bvult 64 x@13 x@21))
                                 (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@20)) x@26))
                              x@30)
                           (bvult 64 x@13 (bvAdd 64 x@26 x@21)))))
                  (bvEq 64 x@3 x@33))
               (bvEq 1 x@6
                  (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@23 x@6)
                     (ite x@2
                        (bvult 64 (bvNat 64 4294967295)
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@9 x@13) x@15) x@18)
                              x@32))
                        x@23
                        x@6))))
            (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@33)))
         (bvult 64 x@13 (bvAdd 64 x@16 x@25)))

[20:46:18.262] Goal EVP_DecryptUpdate (goal number 72): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvMul 64 x@9 x@17
      x@19 = bvAdd 64 x@16 x@18
      x@20 = bvShr 64 x@19 4
      x@21 = bvMul 64 x@4 x@20
      x@22 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@23 = bvNat 1 1
      x@24 = bvAdd 64 x@22 x@13
      x@25 = bvAdd 64 x@9 x@13
      x@26 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@17
      x@28 = bvUDiv 64 x@19 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvAdd 64 x@27 x@29
      x@32 = bvMul 64 x@8 x@28
      x@33 = ite x@1 x@30 x@3 x@32
      x@34 = bvAdd 64 x@19 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@22 x@10)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@22 (append 32 32 Bool x@5 x@12)) x@10)))
                                                (bvult 64 (bvNat 64 2147483647) x@13))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@10 x@24) x@23 x@6)
                                                      (ite x@2 (bvult 64 x@24 x@13) x@23 x@6)))))
                                          x@14)
                                       (bvEq 64 x@3 x@16))
                                    (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                 (bvult 64 x@13 x@16))
                              (bvult 64 (bvMul 64 x@9 x@15) x@26))
                           (bvult 64 (bvNat 64 3071) x@19))
                        (Prelude.and (not x@30)
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                         (not (bvult 64 x@3 x@29)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                   (bvult 64 x@13 x@29))
                                                (bvult 64 (bvAdd 64 x@13 x@32) x@27))
                                             (not (bvult 64 x@20 (bvNat 64 18))))
                                          (not (bvult 64 x@3 x@20)))
                                       (bvult 64 x@13 x@21))
                                    (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@20)) x@27))
                                 (bvult 64 x@13 x@31))
                              (bvult 64 x@13 (bvAdd 64 x@27 x@21)))))
                     (bvEq 64 x@3 x@34))
                  (bvEq 1 x@6
                     (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@23 x@6)
                        (ite x@2
                           (bvult 64 (bvNat 64 4294967295)
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@25 x@15) x@18) x@33))
                           x@23
                           x@6))))
               (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@34)))
            (bvult 64 x@13 (bvAdd 64 x@16 x@26)))
         (not (bvult 64 x@25 x@31)))

[20:46:19.352] Goal EVP_DecryptUpdate (goal number 73): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvMul 64 x@9 x@17
      x@19 = bvAdd 64 x@16 x@18
      x@20 = bvShr 64 x@19 4
      x@21 = bvMul 64 x@4 x@20
      x@22 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@23 = bvNat 1 1
      x@24 = bvAdd 64 x@22 x@13
      x@25 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@26 = bvAdd 64 x@25 x@17
      x@27 = bvUDiv 64 x@19 x@4
      x@28 = bvMul 64 x@4 x@27
      x@29 = bvEq 64 x@3 x@28
      x@30 = bvult 64 x@13 (bvAdd 64 x@26 x@28)
      x@31 = bvMul 64 x@8 x@27
      x@32 = ite x@1 x@29 x@3 x@31
      x@33 = bvAdd 64 x@19 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@22 x@10)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@22 (append 32 32 Bool x@5 x@12)) x@10)))
                                                (bvult 64 (bvNat 64 2147483647) x@13))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@10 x@24) x@23 x@6)
                                                      (ite x@2 (bvult 64 x@24 x@13) x@23 x@6)))))
                                          x@14)
                                       (bvEq 64 x@3 x@16))
                                    (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                 (bvult 64 x@13 x@16))
                              (bvult 64 (bvMul 64 x@9 x@15) x@25))
                           (bvult 64 (bvNat 64 3071) x@19))
                        (not x@30))
                     (Prelude.and (not x@29)
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or x@29 (not (bvult 64 x@28 (bvNat 64 288))))
                                                      (not (bvult 64 x@3 x@28)))
                                                   (not (bvEq 64 x@3 (bvURem 64 x@28 x@4))))
                                                (bvult 64 x@13 x@28))
                                             (bvult 64 (bvAdd 64 x@13 x@31) x@26))
                                          (not (bvult 64 x@20 (bvNat 64 18))))
                                       (not (bvult 64 x@3 x@20)))
                                    (bvult 64 x@13 x@21))
                                 (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@20)) x@26))
                              x@30)
                           (bvult 64 x@13 (bvAdd 64 x@26 x@21)))))
                  (bvEq 64 x@3 x@33))
               (bvEq 1 x@6
                  (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@23 x@6)
                     (ite x@2
                        (bvult 64 (bvNat 64 4294967295)
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@9 x@13) x@15) x@18)
                              x@32))
                        x@23
                        x@6))))
            (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@33)))
         (bvult 64 x@13 (bvAdd 64 x@16 x@25)))

[20:46:20.439] Goal EVP_DecryptUpdate (goal number 74): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 96
      x@8 = bvNat 64 18446744073709551600
      x@9 = bvNat 64 18446744073709551615
      x@10 = bvNat 64 68719476704
      x@11 = bvNat 64 18446744073709551602
      x@12 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@13 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@12 0) (bvNat 32 4294967295)
                  x@5)
               x@12
      x@14 = bvEq 64 x@3 (bvAdd 64 x@11 x@13)
      x@15 = ite x@1 x@14 x@11 (bvNat 64 18446744073709551601)
      x@16 = bvAdd 64 x@13 x@15
      x@17 = ite x@1 (bvult 64 x@16 x@7) x@3
               (bvMul 64 x@7 (bvUDiv 64 x@16 x@7))
      x@18 = bvMul 64 x@9 x@17
      x@19 = bvAdd 64 x@16 x@18
      x@20 = bvShr 64 x@19 4
      x@21 = bvMul 64 x@4 x@20
      x@22 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@23 = bvNat 1 1
      x@24 = bvAdd 64 x@22 x@13
      x@25 = bvAdd 64 x@9 x@13
      x@26 = ite x@1 x@14 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@17
      x@28 = bvUDiv 64 x@19 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvAdd 64 x@27 x@29
      x@32 = bvMul 64 x@8 x@28
      x@33 = ite x@1 x@30 x@3 x@32
      x@34 = bvAdd 64 x@19 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or (not (bvult 32 x@12 (bvNat 32 2147483648)))
                                                      (not (bvult 64 x@22 x@10)))
                                                   (not
                                                      (bvult 64 (bvAdd 64 x@22 (append 32 32 Bool x@5 x@12)) x@10)))
                                                (bvult 64 (bvNat 64 2147483647) x@13))
                                             (not
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@10 x@24) x@23 x@6)
                                                      (ite x@2 (bvult 64 x@24 x@13) x@23 x@6)))))
                                          x@14)
                                       (bvEq 64 x@3 x@16))
                                    (not (bvult 64 x@16 (bvNat 64 68719476736))))
                                 (bvult 64 x@13 x@16))
                              (bvult 64 (bvMul 64 x@9 x@15) x@26))
                           (bvult 64 (bvNat 64 3071) x@19))
                        (Prelude.and (not x@30)
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                         (not (bvult 64 x@3 x@29)))
                                                      (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                   (bvult 64 x@13 x@29))
                                                (bvult 64 (bvAdd 64 x@13 x@32) x@27))
                                             (not (bvult 64 x@20 (bvNat 64 18))))
                                          (not (bvult 64 x@3 x@20)))
                                       (bvult 64 x@13 x@21))
                                    (bvult 64 (bvAdd 64 x@13 (bvMul 64 x@8 x@20)) x@27))
                                 (bvult 64 x@13 x@31))
                              (bvult 64 x@13 (bvAdd 64 x@27 x@21)))))
                     (bvEq 64 x@3 x@34))
                  (bvEq 1 x@6
                     (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@23 x@6)
                        (ite x@2
                           (bvult 64 (bvNat 64 4294967295)
                              (bvAdd 64 (bvAdd 64 (bvAdd 64 x@25 x@15) x@18) x@33))
                           x@23
                           x@6))))
               (bvEq 64 x@3 (bvAnd 64 (bvNat 64 1) x@34)))
            (bvult 64 x@13 (bvAdd 64 x@16 x@26)))
         (not (bvult 64 x@25 x@31)))

[20:46:21.601] Goal EVP_DecryptUpdate (goal number 75): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) x@8
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@27))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (not (bvult 64 x@22 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@22)))
                                          (bvult 64 x@15 x@23))
                                       (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                 (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                    x@33))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30) (ite x@1 x@16 x@8 x@4)))))

[20:46:22.724] Goal EVP_DecryptUpdate (goal number 76): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) x@8
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@28))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (not (bvult 64 x@22 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@22)))
                                          (bvult 64 x@15 x@23))
                                       (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                 (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31) (ite x@1 x@16 x@8 x@4)))))

[20:46:23.834] Goal EVP_DecryptUpdate (goal number 77): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) x@8
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@27))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@15 x@30))
                                                   (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                (not (bvult 64 x@22 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@22)))
                                          (bvult 64 x@15 x@23))
                                       (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                 (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                    x@33))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30) (ite x@1 x@16 x@8 x@4)))))

[20:46:24.961] Goal EVP_DecryptUpdate (goal number 78): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 15
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) x@8
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@24 x@12)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                   (bvult 64 (bvNat 64 2147483647) x@15))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                         (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                             x@16)
                                          (bvEq 64 x@3 x@18))
                                       (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                    (bvult 64 x@15 x@18))
                                 (bvult 64 (bvMul 64 x@11 x@17) x@28))
                              (bvult 64 (bvNat 64 3071) x@21))
                           (Prelude.and (not x@32)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@31)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                      (bvult 64 x@15 x@31))
                                                   (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                (not (bvult 64 x@22 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@22)))
                                          (bvult 64 x@15 x@23))
                                       (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                 (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                        (bvEq 64 x@3 x@35))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                              x@25
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
               (bvEq 64 x@7 x@35))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31) (ite x@1 x@16 x@8 x@4)))))

[20:46:26.060] Goal EVP_DecryptUpdate (goal number 79): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@23 x@11)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                   (bvult 64 (bvNat 64 2147483647) x@14))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                         (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                             x@15)
                                          (bvEq 64 x@3 x@17))
                                       (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                    (bvult 64 x@14 x@17))
                                 (bvult 64 (bvMul 64 x@10 x@16) x@26))
                              (bvult 64 (bvNat 64 3071) x@20))
                           (Prelude.and (not x@30)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@29)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                      (bvult 64 x@14 x@29))
                                                   (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                (not (bvult 64 x@21 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@21)))
                                          (bvult 64 x@14 x@22))
                                       (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                    (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                 (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                        (bvEq 64 x@3 x@33))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                    x@32))
                              x@24
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
               (bvEq 64 x@7 x@33))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 x@4 (bvNat 64 17))))))

[20:46:27.222] Goal EVP_DecryptUpdate (goal number 80): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@23 x@11)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                   (bvult 64 (bvNat 64 2147483647) x@14))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                         (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                             x@15)
                                          (bvEq 64 x@3 x@17))
                                       (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                    (bvult 64 x@14 x@17))
                                 (bvult 64 (bvMul 64 x@10 x@16) x@27))
                              (bvult 64 (bvNat 64 3071) x@20))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@14 x@30))
                                                   (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                (not (bvult 64 x@21 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@21)))
                                          (bvult 64 x@14 x@22))
                                       (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                    (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                 (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                              x@24
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 x@4 (bvNat 64 17))))))

[20:46:28.335] Goal EVP_DecryptUpdate (goal number 81): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@23 x@11)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                   (bvult 64 (bvNat 64 2147483647) x@14))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                         (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                             x@15)
                                          (bvEq 64 x@3 x@17))
                                       (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                    (bvult 64 x@14 x@17))
                                 (bvult 64 (bvMul 64 x@10 x@16) x@26))
                              (bvult 64 (bvNat 64 3071) x@20))
                           (Prelude.and (not x@30)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@29)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                      (bvult 64 x@14 x@29))
                                                   (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                (not (bvult 64 x@21 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@21)))
                                          (bvult 64 x@14 x@22))
                                       (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                    (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                 (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                        (bvEq 64 x@3 x@33))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                    x@32))
                              x@24
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
               (bvEq 64 x@7 x@33))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 x@4 (bvNat 64 17))))))

[20:46:29.425] Goal EVP_DecryptUpdate (goal number 82): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                         (not (bvult 64 x@23 x@11)))
                                                      (not
                                                         (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                   (bvult 64 (bvNat 64 2147483647) x@14))
                                                (not
                                                   (bvEq 1 x@6
                                                      (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                         (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                             x@15)
                                          (bvEq 64 x@3 x@17))
                                       (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                    (bvult 64 x@14 x@17))
                                 (bvult 64 (bvMul 64 x@10 x@16) x@27))
                              (bvult 64 (bvNat 64 3071) x@20))
                           (Prelude.and (not x@31)
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                            (not (bvult 64 x@3 x@30)))
                                                         (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                      (bvult 64 x@14 x@30))
                                                   (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                (not (bvult 64 x@21 (bvNat 64 18))))
                                             (not (bvult 64 x@3 x@21)))
                                          (bvult 64 x@14 x@22))
                                       (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                    (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                 (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                        (bvEq 64 x@3 x@34))
                     (bvEq 1 x@6
                        (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                           (ite x@2
                              (bvult 64 (bvNat 64 4294967295)
                                 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                              x@24
                              x@6))))
                  (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
               (bvEq 64 x@7 x@34))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 x@4 (bvNat 64 17))))))

[20:46:30.589] Goal EVP_DecryptUpdate (goal number 83): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@31)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                           (bvEq 64 x@3 x@34))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                       x@33))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                  (bvEq 64 x@7 x@34))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 17) x@8)))))

[20:46:31.702] Goal EVP_DecryptUpdate (goal number 84): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 17) x@8)))))

[20:46:32.794] Goal EVP_DecryptUpdate (goal number 85): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@31)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                           (bvEq 64 x@3 x@34))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                       x@33))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                  (bvEq 64 x@7 x@34))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 (bvNat 64 17) x@8)))))

[20:46:33.892] Goal EVP_DecryptUpdate (goal number 86): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 (bvNat 64 17) x@8)))))

[20:46:34.992] Goal EVP_DecryptUpdate (goal number 87): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@31)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                           (bvEq 64 x@3 x@34))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                       x@33))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                  (bvEq 64 x@7 x@34))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 x@8 (bvNat 64 19))))))

[20:46:36.094] Goal EVP_DecryptUpdate (goal number 88): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 x@8 (bvNat 64 19))))))

[20:46:37.207] Goal EVP_DecryptUpdate (goal number 89): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@10 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@27))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@31)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@30)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                         (bvult 64 x@15 x@30))
                                                      (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@28))
                                       (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                    (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                           (bvEq 64 x@3 x@34))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@15) x@17) x@20)
                                       x@33))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                  (bvEq 64 x@7 x@34))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@33)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@27)))
         (not
            (bvult 64 x@15
               (bvAdd 64 (bvAdd 64 x@19 x@30)
                  (ite x@1 x@16 x@8 (bvNat 64 19))))))

[20:46:38.312] Goal EVP_DecryptUpdate (goal number 90): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 18
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@14 0) (bvNat 32 4294967295)
                  x@5)
               x@14
      x@16 = bvEq 64 x@3 (bvAdd 64 x@13 x@15)
      x@17 = ite x@1 x@16 x@13 (bvNat 64 18446744073709551601)
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@9) x@3
               (bvMul 64 x@9 (bvUDiv 64 x@18 x@9))
      x@20 = bvMul 64 x@11 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = bvAdd 64 x@11 x@15
      x@28 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@19
      x@30 = bvUDiv 64 x@21 x@4
      x@31 = bvMul 64 x@4 x@30
      x@32 = bvEq 64 x@3 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@3 x@33
      x@35 = bvAdd 64 x@21 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                                                            (not (bvult 64 x@24 x@12)))
                                                         (not
                                                            (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@14)) x@12)))
                                                      (bvult 64 (bvNat 64 2147483647) x@15))
                                                   (not
                                                      (bvEq 1 x@6
                                                         (bvOr 1 (ite x@2 (bvult 64 x@12 x@26) x@25 x@6)
                                                            (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
                                                x@16)
                                             (bvEq 64 x@3 x@18))
                                          (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                       (bvult 64 x@15 x@18))
                                    (bvult 64 (bvMul 64 x@11 x@17) x@28))
                                 (bvult 64 (bvNat 64 3071) x@21))
                              (Prelude.and (not x@32)
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                               (not (bvult 64 x@3 x@31)))
                                                            (not (bvEq 64 x@3 (bvURem 64 x@31 x@4))))
                                                         (bvult 64 x@15 x@31))
                                                      (bvult 64 (bvAdd 64 x@15 x@33) x@29))
                                                   (not (bvult 64 x@22 x@8)))
                                                (not (bvult 64 x@3 x@22)))
                                             (bvult 64 x@15 x@23))
                                          (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@10 x@22)) x@29))
                                       (bvult 64 x@15 (bvAdd 64 x@29 x@31)))
                                    (bvult 64 x@15 (bvAdd 64 x@29 x@23)))))
                           (bvEq 64 x@3 x@35))
                        (bvEq 1 x@6
                           (bvOr 1 (ite x@2 (bvult 64 x@35 x@4) x@25 x@6)
                              (ite x@2
                                 (bvult 64 (bvNat 64 4294967295)
                                    (bvAdd 64 (bvAdd 64 (bvAdd 64 x@27 x@17) x@20) x@34))
                                 x@25
                                 x@6))))
                     (bvEq 64 x@3 (bvAnd 64 x@7 x@35)))
                  (bvEq 64 x@7 x@35))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                        x@20)
                     x@34)))
            (bvult 64 x@15 (bvAdd 64 x@18 x@28)))
         (not
            (bvult 64 x@27
               (bvAdd 64 (bvAdd 64 x@19 x@31)
                  (ite x@1 x@16 x@8 (bvNat 64 19))))))

[20:46:39.418] Goal EVP_DecryptUpdate (goal number 91): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@30)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@29)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                            (bvult 64 x@14 x@29))
                                                         (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                       (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                              (bvEq 64 x@3 x@33))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                          x@32))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                     (bvEq 64 x@7 x@33))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 19) (bvNat 64 20))))))

[20:46:40.528] Goal EVP_DecryptUpdate (goal number 92): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@14 x@30))
                                                         (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                       (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 19) (bvNat 64 20))))))

[20:46:41.625] Goal EVP_DecryptUpdate (goal number 93): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@30)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@29)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                            (bvult 64 x@14 x@29))
                                                         (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                       (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                              (bvEq 64 x@3 x@33))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                          x@32))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                     (bvEq 64 x@7 x@33))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 19) (bvNat 64 20))))))

[20:46:42.742] Goal EVP_DecryptUpdate (goal number 94): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@14 x@30))
                                                         (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                       (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 19) (bvNat 64 20))))))

[20:46:43.863] Goal EVP_DecryptUpdate (goal number 95): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@30)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@29)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                            (bvult 64 x@14 x@29))
                                                         (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                       (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                              (bvEq 64 x@3 x@33))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                          x@32))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                     (bvEq 64 x@7 x@33))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 20) (bvNat 64 21))))))

[20:46:45.043] Goal EVP_DecryptUpdate (goal number 96): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@14 x@30))
                                                         (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                       (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 20) (bvNat 64 21))))))

[20:46:46.157] Goal EVP_DecryptUpdate (goal number 97): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@30)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@29)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                            (bvult 64 x@14 x@29))
                                                         (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                       (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                              (bvEq 64 x@3 x@33))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                          x@32))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                     (bvEq 64 x@7 x@33))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 20) (bvNat 64 21))))))

[20:46:47.253] Goal EVP_DecryptUpdate (goal number 98): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                               (not (bvult 64 x@23 x@11)))
                                                            (not
                                                               (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                         (bvult 64 (bvNat 64 2147483647) x@14))
                                                      (not
                                                         (bvEq 1 x@6
                                                            (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                               (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                   x@15)
                                                (bvEq 64 x@3 x@17))
                                             (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                          (bvult 64 x@14 x@17))
                                       (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                    (bvult 64 (bvNat 64 3071) x@20))
                                 (Prelude.and (not x@31)
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                  (not (bvult 64 x@3 x@30)))
                                                               (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                            (bvult 64 x@14 x@30))
                                                         (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                      (not (bvult 64 x@21 (bvNat 64 18))))
                                                   (not (bvult 64 x@3 x@21)))
                                                (bvult 64 x@14 x@22))
                                             (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                       (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                              (bvEq 64 x@3 x@34))
                           (bvEq 1 x@6
                              (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                 (ite x@2
                                    (bvult 64 (bvNat 64 4294967295)
                                       (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                    x@24
                                    x@6))))
                        (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                     (bvEq 64 x@7 x@34))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 20) (bvNat 64 21))))))

[20:46:48.393] Goal EVP_DecryptUpdate (goal number 99): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@30)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@29)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                               (bvult 64 x@14 x@29))
                                                            (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                 (bvEq 64 x@3 x@33))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                             x@32))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                        (bvEq 64 x@7 x@33))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 21) (bvNat 64 22))))))

[20:46:49.503] Goal EVP_DecryptUpdate (goal number 100): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@30)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                               (bvult 64 x@14 x@30))
                                                            (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 21) (bvNat 64 22))))))

[20:46:50.648] Goal EVP_DecryptUpdate (goal number 101): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@30)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@29)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                               (bvult 64 x@14 x@29))
                                                            (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                 (bvEq 64 x@3 x@33))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                             x@32))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                        (bvEq 64 x@7 x@33))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 21) (bvNat 64 22))))))

[20:46:51.760] Goal EVP_DecryptUpdate (goal number 102): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@30)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                               (bvult 64 x@14 x@30))
                                                            (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 21) (bvNat 64 22))))))

[20:46:52.928] Goal EVP_DecryptUpdate (goal number 103): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@30)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@29)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                               (bvult 64 x@14 x@29))
                                                            (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                 (bvEq 64 x@3 x@33))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                             x@32))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                        (bvEq 64 x@7 x@33))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 22) (bvNat 64 23))))))

[20:46:54.060] Goal EVP_DecryptUpdate (goal number 104): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@30)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                               (bvult 64 x@14 x@30))
                                                            (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 22) (bvNat 64 23))))))

[20:46:55.205] Goal EVP_DecryptUpdate (goal number 105): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@30)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@29)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                               (bvult 64 x@14 x@29))
                                                            (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                          (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                 (bvEq 64 x@3 x@33))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                             x@32))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                        (bvEq 64 x@7 x@33))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 22) (bvNat 64 23))))))

[20:46:56.320] Goal EVP_DecryptUpdate (goal number 106): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                  (not (bvult 64 x@23 x@11)))
                                                               (not
                                                                  (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                            (bvult 64 (bvNat 64 2147483647) x@14))
                                                         (not
                                                            (bvEq 1 x@6
                                                               (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                  (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                      x@15)
                                                   (bvEq 64 x@3 x@17))
                                                (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                             (bvult 64 x@14 x@17))
                                          (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                       (bvult 64 (bvNat 64 3071) x@20))
                                    (Prelude.and (not x@31)
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                     (not (bvult 64 x@3 x@30)))
                                                                  (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                               (bvult 64 x@14 x@30))
                                                            (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                         (not (bvult 64 x@21 (bvNat 64 18))))
                                                      (not (bvult 64 x@3 x@21)))
                                                   (bvult 64 x@14 x@22))
                                                (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                          (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                 (bvEq 64 x@3 x@34))
                              (bvEq 1 x@6
                                 (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                    (ite x@2
                                       (bvult 64 (bvNat 64 4294967295)
                                          (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                       x@24
                                       x@6))))
                           (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                        (bvEq 64 x@7 x@34))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 22) (bvNat 64 23))))))

[20:46:57.449] Goal EVP_DecryptUpdate (goal number 107): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@30)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@29)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                  (bvult 64 x@14 x@29))
                                                               (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                    (bvEq 64 x@3 x@33))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                x@32))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                           (bvEq 64 x@7 x@33))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 23) (bvNat 64 24))))))

[20:46:58.573] Goal EVP_DecryptUpdate (goal number 108): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@30)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                  (bvult 64 x@14 x@30))
                                                               (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 23) (bvNat 64 24))))))

[20:46:59.668] Goal EVP_DecryptUpdate (goal number 109): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@30)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@29)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                  (bvult 64 x@14 x@29))
                                                               (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                    (bvEq 64 x@3 x@33))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                x@32))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                           (bvEq 64 x@7 x@33))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 23) (bvNat 64 24))))))

[20:47:00.788] Goal EVP_DecryptUpdate (goal number 110): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@30)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                  (bvult 64 x@14 x@30))
                                                               (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 23) (bvNat 64 24))))))

[20:47:01.894] Goal EVP_DecryptUpdate (goal number 111): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@30)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@29)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                  (bvult 64 x@14 x@29))
                                                               (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                    (bvEq 64 x@3 x@33))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                x@32))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                           (bvEq 64 x@7 x@33))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 24) (bvNat 64 25))))))

[20:47:02.991] Goal EVP_DecryptUpdate (goal number 112): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@30)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                  (bvult 64 x@14 x@30))
                                                               (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 24) (bvNat 64 25))))))

[20:47:04.112] Goal EVP_DecryptUpdate (goal number 113): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@30)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@29)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                  (bvult 64 x@14 x@29))
                                                               (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                             (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                    (bvEq 64 x@3 x@33))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                x@32))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                           (bvEq 64 x@7 x@33))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 24) (bvNat 64 25))))))

[20:47:05.206] Goal EVP_DecryptUpdate (goal number 114): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                     (not (bvult 64 x@23 x@11)))
                                                                  (not
                                                                     (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                               (bvult 64 (bvNat 64 2147483647) x@14))
                                                            (not
                                                               (bvEq 1 x@6
                                                                  (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                     (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                         x@15)
                                                      (bvEq 64 x@3 x@17))
                                                   (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                (bvult 64 x@14 x@17))
                                             (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                          (bvult 64 (bvNat 64 3071) x@20))
                                       (Prelude.and (not x@31)
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                        (not (bvult 64 x@3 x@30)))
                                                                     (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                  (bvult 64 x@14 x@30))
                                                               (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                            (not (bvult 64 x@21 (bvNat 64 18))))
                                                         (not (bvult 64 x@3 x@21)))
                                                      (bvult 64 x@14 x@22))
                                                   (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                             (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                    (bvEq 64 x@3 x@34))
                                 (bvEq 1 x@6
                                    (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                       (ite x@2
                                          (bvult 64 (bvNat 64 4294967295)
                                             (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                          x@24
                                          x@6))))
                              (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                           (bvEq 64 x@7 x@34))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 24) (bvNat 64 25))))))

[20:47:06.307] Goal EVP_DecryptUpdate (goal number 115): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@30)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@29)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                     (bvult 64 x@14 x@29))
                                                                  (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                       (bvEq 64 x@3 x@33))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                   x@32))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                              (bvEq 64 x@7 x@33))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 25) (bvNat 64 26))))))

[20:47:07.422] Goal EVP_DecryptUpdate (goal number 116): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@30)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                     (bvult 64 x@14 x@30))
                                                                  (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 25) (bvNat 64 26))))))

[20:47:08.522] Goal EVP_DecryptUpdate (goal number 117): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@30)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@29)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                     (bvult 64 x@14 x@29))
                                                                  (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                       (bvEq 64 x@3 x@33))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                   x@32))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                              (bvEq 64 x@7 x@33))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 25) (bvNat 64 26))))))

[20:47:09.607] Goal EVP_DecryptUpdate (goal number 118): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@30)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                     (bvult 64 x@14 x@30))
                                                                  (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 25) (bvNat 64 26))))))

[20:47:10.683] Goal EVP_DecryptUpdate (goal number 119): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@30)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@29)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                     (bvult 64 x@14 x@29))
                                                                  (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                       (bvEq 64 x@3 x@33))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                   x@32))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                              (bvEq 64 x@7 x@33))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 26) (bvNat 64 27))))))

[20:47:11.805] Goal EVP_DecryptUpdate (goal number 120): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@30)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                     (bvult 64 x@14 x@30))
                                                                  (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 26) (bvNat 64 27))))))

[20:47:12.917] Goal EVP_DecryptUpdate (goal number 121): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@30)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@29)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                     (bvult 64 x@14 x@29))
                                                                  (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                       (bvEq 64 x@3 x@33))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                   x@32))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                              (bvEq 64 x@7 x@33))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 26) (bvNat 64 27))))))

[20:47:14.022] Goal EVP_DecryptUpdate (goal number 122): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                        (not (bvult 64 x@23 x@11)))
                                                                     (not
                                                                        (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                  (bvult 64 (bvNat 64 2147483647) x@14))
                                                               (not
                                                                  (bvEq 1 x@6
                                                                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                        (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                            x@15)
                                                         (bvEq 64 x@3 x@17))
                                                      (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                   (bvult 64 x@14 x@17))
                                                (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                             (bvult 64 (bvNat 64 3071) x@20))
                                          (Prelude.and (not x@31)
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                           (not (bvult 64 x@3 x@30)))
                                                                        (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                     (bvult 64 x@14 x@30))
                                                                  (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                               (not (bvult 64 x@21 (bvNat 64 18))))
                                                            (not (bvult 64 x@3 x@21)))
                                                         (bvult 64 x@14 x@22))
                                                      (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                       (bvEq 64 x@3 x@34))
                                    (bvEq 1 x@6
                                       (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                          (ite x@2
                                             (bvult 64 (bvNat 64 4294967295)
                                                (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                             x@24
                                             x@6))))
                                 (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                              (bvEq 64 x@7 x@34))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 26) (bvNat 64 27))))))

[20:47:15.125] Goal EVP_DecryptUpdate (goal number 123): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@30)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@29)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                        (bvult 64 x@14 x@29))
                                                                     (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                      (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                          (bvEq 64 x@3 x@33))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                      x@32))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                                 (bvEq 64 x@7 x@33))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@32)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 27) (bvNat 64 28))))))

[20:47:16.253] Goal EVP_DecryptUpdate (goal number 124): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@30)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                        (bvult 64 x@14 x@30))
                                                                     (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                      (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 27) (bvNat 64 28))))))

[20:47:17.374] Goal EVP_DecryptUpdate (goal number 125): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@30)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@29)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                        (bvult 64 x@14 x@29))
                                                                     (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                      (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                          (bvEq 64 x@3 x@33))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                      x@32))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                                 (bvEq 64 x@7 x@33))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@32)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 27) (bvNat 64 28))))))

[20:47:18.510] Goal EVP_DecryptUpdate (goal number 126): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@30)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                        (bvult 64 x@14 x@30))
                                                                     (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                      (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 27) (bvNat 64 28))))))

[20:47:19.661] Goal EVP_DecryptUpdate (goal number 127): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@30)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@29)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                        (bvult 64 x@14 x@29))
                                                                     (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                      (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                          (bvEq 64 x@3 x@33))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                      x@32))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                                 (bvEq 64 x@7 x@33))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@32)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 28) (bvNat 64 29))))))

[20:47:20.776] Goal EVP_DecryptUpdate (goal number 128): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:782:19 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:782:19: error: in CRYPTO_gcm128_decrypt_ctr32
Error during memory load

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@30)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                        (bvult 64 x@14 x@30))
                                                                     (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                      (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 28) (bvNat 64 29))))))

[20:47:21.918] Goal EVP_DecryptUpdate (goal number 129): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:7 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:7: error: in CRYPTO_gcm128_decrypt_ctr32
Undefined behavior encountered
Details:
  Addition of an offset to a pointer resulted in a pointer to an address outside of the allocation

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@27 = bvAdd 64 x@26 x@18
      x@28 = bvUDiv 64 x@20 x@4
      x@29 = bvMul 64 x@4 x@28
      x@30 = bvEq 64 x@3 x@29
      x@31 = bvMul 64 x@9 x@28
      x@32 = ite x@1 x@30 x@3 x@31
      x@33 = bvAdd 64 x@20 x@32
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@26))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@30)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@30 (not (bvult 64 x@29 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@29)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@29 x@4))))
                                                                        (bvult 64 x@14 x@29))
                                                                     (bvult 64 (bvAdd 64 x@14 x@31) x@27))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@27))
                                                      (bvult 64 x@14 (bvAdd 64 x@27 x@29)))
                                                   (bvult 64 x@14 (bvAdd 64 x@27 x@22)))))
                                          (bvEq 64 x@3 x@33))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@33 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@14) x@16) x@19)
                                                      x@32))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@33)))
                                 (bvEq 64 x@7 x@33))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@32)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@32)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@32)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@32)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@32)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@32)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@26)))
         (not
            (bvult 64 x@14
               (bvAdd 64 (bvAdd 64 x@18 x@29)
                  (ite x@1 x@15 (bvNat 64 28) (bvNat 64 29))))))

[20:47:23.035] Goal EVP_DecryptUpdate (goal number 130): safety assertion
at src/crypto/fipsmodule/modes/gcm.c:784:14 in CRYPTO_gcm128_decrypt_ctr32
src/crypto/fipsmodule/modes/gcm.c:784:14: error: in CRYPTO_gcm128_decrypt_ctr32
Memory store failed
Details:
  The region wasn't allocated, wasn't large enough, or was marked as readonly

let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@15 = bvEq 64 x@3 (bvAdd 64 x@12 x@14)
      x@16 = ite x@1 x@15 x@12 (bvNat 64 18446744073709551601)
      x@17 = bvAdd 64 x@14 x@16
      x@18 = ite x@1 (bvult 64 x@17 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@17 x@8))
      x@19 = bvMul 64 x@10 x@18
      x@20 = bvAdd 64 x@17 x@19
      x@21 = bvShr 64 x@20 4
      x@22 = bvMul 64 x@4 x@21
      x@23 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@24 = bvNat 1 1
      x@25 = bvAdd 64 x@23 x@14
      x@26 = bvAdd 64 x@10 x@14
      x@27 = ite x@1 x@15 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@18
      x@29 = bvUDiv 64 x@20 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@20 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                                                                           (not (bvult 64 x@23 x@11)))
                                                                        (not
                                                                           (bvult 64 (bvAdd 64 x@23 (append 32 32 Bool x@5 x@13)) x@11)))
                                                                     (bvult 64 (bvNat 64 2147483647) x@14))
                                                                  (not
                                                                     (bvEq 1 x@6
                                                                        (bvOr 1 (ite x@2 (bvult 64 x@11 x@25) x@24 x@6)
                                                                           (ite x@2 (bvult 64 x@25 x@14) x@24 x@6)))))
                                                               x@15)
                                                            (bvEq 64 x@3 x@17))
                                                         (not (bvult 64 x@17 (bvNat 64 68719476736))))
                                                      (bvult 64 x@14 x@17))
                                                   (bvult 64 (bvMul 64 x@10 x@16) x@27))
                                                (bvult 64 (bvNat 64 3071) x@20))
                                             (Prelude.and (not x@31)
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                              (not (bvult 64 x@3 x@30)))
                                                                           (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                        (bvult 64 x@14 x@30))
                                                                     (bvult 64 (bvAdd 64 x@14 x@32) x@28))
                                                                  (not (bvult 64 x@21 (bvNat 64 18))))
                                                               (not (bvult 64 x@3 x@21)))
                                                            (bvult 64 x@14 x@22))
                                                         (bvult 64 (bvAdd 64 x@14 (bvMul 64 x@9 x@21)) x@28))
                                                      (bvult 64 x@14 (bvAdd 64 x@28 x@30)))
                                                   (bvult 64 x@14 (bvAdd 64 x@28 x@22)))))
                                          (bvEq 64 x@3 x@34))
                                       (bvEq 1 x@6
                                          (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@24 x@6)
                                             (ite x@2
                                                (bvult 64 (bvNat 64 4294967295)
                                                   (bvAdd 64 (bvAdd 64 (bvAdd 64 x@26 x@16) x@19) x@33))
                                                x@24
                                                x@6))))
                                    (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                 (bvEq 64 x@7 x@34))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@14) x@16)
                                       x@19)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@14) x@16)
                                    x@19)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@14) x@16)
                                 x@19)
                              x@33)))
                     (bvEq 64 x@3
                        (bvAdd 64
                           (bvAdd 64
                              (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@14) x@16)
                              x@19)
                           x@33)))
                  (bvEq 64 x@3
                     (bvAdd 64
                        (bvAdd 64
                           (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@14) x@16)
                           x@19)
                        x@33)))
               (bvEq 64 x@3
                  (bvAdd 64
                     (bvAdd 64
                        (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@14) x@16)
                        x@19)
                     x@33)))
            (bvult 64 x@14 (bvAdd 64 x@17 x@27)))
         (not
            (bvult 64 x@26
               (bvAdd 64 (bvAdd 64 x@18 x@30)
                  (ite x@1 x@15 (bvNat 64 28) (bvNat 64 29))))))

[20:47:24.163] Goal EVP_DecryptUpdate (goal number 131): return value matching
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:337:1 in _SAW_verify_prestate
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:337:1: error: in _SAW_verify_prestate
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 1 Bool
      x@3 = bvNat 64 0
      x@4 = bvNat 64 16
      x@5 = bvNat 32 0
      x@6 = bvNat 1 0
      x@7 = bvNat 64 1
      x@8 = bvNat 64 96
      x@9 = bvNat 64 18446744073709551600
      x@10 = bvNat 64 18446744073709551615
      x@11 = bvNat 64 68719476704
      x@12 = bvNat 64 18446744073709551602
      x@13 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@14 = bvNat 64 18446744073709551601
      x@15 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@13 0) (bvNat 32 4294967295)
                  x@5)
               x@13
      x@16 = bvEq 64 x@3 (bvAdd 64 x@12 x@15)
      x@17 = ite x@1 x@16 x@12 x@14
      x@18 = bvAdd 64 x@15 x@17
      x@19 = ite x@1 (bvult 64 x@18 x@8) x@3
               (bvMul 64 x@8 (bvUDiv 64 x@18 x@8))
      x@20 = bvMul 64 x@10 x@19
      x@21 = bvAdd 64 x@18 x@20
      x@22 = bvShr 64 x@21 4
      x@23 = bvMul 64 x@4 x@22
      x@24 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@25 = bvNat 1 1
      x@26 = bvAdd 64 x@24 x@15
      x@27 = ite x@1 x@16 (bvNat 64 14) (bvNat 64 15)
      x@28 = bvAdd 64 x@27 x@19
      x@29 = bvUDiv 64 x@21 x@4
      x@30 = bvMul 64 x@4 x@29
      x@31 = bvEq 64 x@3 x@30
      x@32 = bvMul 64 x@9 x@29
      x@33 = ite x@1 x@31 x@3 x@32
      x@34 = bvAdd 64 x@21 x@33
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@13 (bvNat 32 2147483648)))
                        (not (bvult 64 x@24 x@11)))
                     (not
                        (bvult 64 (bvAdd 64 x@24 (append 32 32 Bool x@5 x@13)) x@11)))
                  (bvult 64 (bvNat 64 2147483647) x@15))
               (not
                  (bvEq 1 x@6
                     (bvOr 1 (ite x@2 (bvult 64 x@11 x@26) x@25 x@6)
                        (ite x@2 (bvult 64 x@26 x@15) x@25 x@6)))))
            (Prelude.and (not x@16)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@16 (bvEq 64 x@3 x@18))
                                                                  (not (bvult 64 x@18 (bvNat 64 68719476736))))
                                                               (bvult 64 x@15 x@18))
                                                            (bvult 64 (bvMul 64 x@10 x@17) x@27))
                                                         (bvult 64 (bvNat 64 3071) x@21))
                                                      (Prelude.and (not x@31)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@31 (not (bvult 64 x@30 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@3 x@30)))
                                                                                    (not (bvEq 64 x@3 (bvURem 64 x@30 x@4))))
                                                                                 (bvult 64 x@15 x@30))
                                                                              (bvult 64 (bvAdd 64 x@15 x@32) x@28))
                                                                           (not (bvult 64 x@22 (bvNat 64 18))))
                                                                        (not (bvult 64 x@3 x@22)))
                                                                     (bvult 64 x@15 x@23))
                                                                  (bvult 64 (bvAdd 64 x@15 (bvMul 64 x@9 x@22)) x@28))
                                                               (bvult 64 x@15 (bvAdd 64 x@28 x@30)))
                                                            (bvult 64 x@15 (bvAdd 64 x@28 x@23)))))
                                                   (bvEq 64 x@3 x@34))
                                                (bvEq 1 x@6
                                                   (bvOr 1 (ite x@2 (bvult 64 x@34 x@4) x@25 x@6)
                                                      (ite x@2
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@10 x@15) x@17) x@20)
                                                               x@33))
                                                         x@25
                                                         x@6))))
                                             (bvEq 64 x@3 (bvAnd 64 x@7 x@34)))
                                          (bvEq 64 x@7 x@34))
                                       (bvEq 64 x@3
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@15) x@17)
                                                x@20)
                                             x@33)))
                                    (bvEq 64 x@3
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@15) x@17)
                                             x@20)
                                          x@33)))
                                 (bvEq 64 x@3
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@15) x@17)
                                          x@20)
                                       x@33)))
                              (bvEq 64 x@3
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@15) x@17)
                                       x@20)
                                    x@33)))
                           (bvEq 64 x@3
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@15) x@17)
                                    x@20)
                                 x@33)))
                        (bvEq 64 x@3
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@15) x@17)
                                 x@20)
                              x@33)))
                     (not
                        (bvEq 64 x@3
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@14 x@15) x@17) x@20)
                              x@33))))
                  (bvult 64 x@15 (bvAdd 64 x@18 x@27)))))
         (not (bvslt 32 x@13 x@5)))

[20:47:25.200] Goal EVP_DecryptUpdate (goal number 132): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:119:3 in llvm_points_to
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:119:3: error: in llvm_points_to
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 32 Bool
      x@3 = Vec 1 Bool
      x@4 = bvNat 64 0
      x@5 = bvNat 64 16
      x@6 = bvNat 32 0
      x@7 = bvNat 1 0
      x@8 = bvNat 64 1
      x@9 = bvNat 64 96
      x@10 = bvNat 64 18446744073709551600
      x@11 = bvNat 64 18446744073709551615
      x@12 = bvNat 64 68719476704
      x@13 = bvNat 64 18446744073709551602
      x@14 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@15 = bvNat 64 18446744073709551601
      x@16 = append 32 32 Bool
               (ite x@2 (at 32 Bool x@14 0) (bvNat 32 4294967295) x@6)
               x@14
      x@17 = bvEq 64 x@4 (bvAdd 64 x@13 x@16)
      x@18 = ite x@1 x@17 x@13 x@15
      x@19 = bvAdd 64 x@16 x@18
      x@20 = ite x@1 (bvult 64 x@19 x@9) x@4
               (bvMul 64 x@9 (bvUDiv 64 x@19 x@9))
      x@21 = bvMul 64 x@11 x@20
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvShr 64 x@22 4
      x@24 = bvMul 64 x@5 x@23
      x@25 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@26 = bvNat 1 1
      x@27 = bvAdd 64 x@25 x@16
      x@28 = ite x@1 x@17 (bvNat 64 14) (bvNat 64 15)
      x@29 = bvAdd 64 x@28 x@20
      x@30 = bvUDiv 64 x@22 x@5
      x@31 = bvMul 64 x@5 x@30
      x@32 = bvEq 64 x@4 x@31
      x@33 = bvMul 64 x@10 x@30
      x@34 = ite x@1 x@32 x@4 x@33
      x@35 = bvAdd 64 x@22 x@34
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@14 (bvNat 32 2147483648)))
                        (not (bvult 64 x@25 x@12)))
                     (not
                        (bvult 64 (bvAdd 64 x@25 (append 32 32 Bool x@6 x@14)) x@12)))
                  (bvult 64 (bvNat 64 2147483647) x@16))
               (not
                  (bvEq 1 x@7
                     (bvOr 1 (ite x@3 (bvult 64 x@12 x@27) x@26 x@7)
                        (ite x@3 (bvult 64 x@27 x@16) x@26 x@7)))))
            (Prelude.and (not x@17)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@17 (bvEq 64 x@4 x@19))
                                                                  (not (bvult 64 x@19 (bvNat 64 68719476736))))
                                                               (bvult 64 x@16 x@19))
                                                            (bvult 64 (bvMul 64 x@11 x@18) x@28))
                                                         (bvult 64 (bvNat 64 3071) x@22))
                                                      (Prelude.and (not x@32)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@32 (not (bvult 64 x@31 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@4 x@31)))
                                                                                    (not (bvEq 64 x@4 (bvURem 64 x@31 x@5))))
                                                                                 (bvult 64 x@16 x@31))
                                                                              (bvult 64 (bvAdd 64 x@16 x@33) x@29))
                                                                           (not (bvult 64 x@23 (bvNat 64 18))))
                                                                        (not (bvult 64 x@4 x@23)))
                                                                     (bvult 64 x@16 x@24))
                                                                  (bvult 64 (bvAdd 64 x@16 (bvMul 64 x@10 x@23)) x@29))
                                                               (bvult 64 x@16 (bvAdd 64 x@29 x@31)))
                                                            (bvult 64 x@16 (bvAdd 64 x@29 x@24)))))
                                                   (bvEq 64 x@4 x@35))
                                                (bvEq 1 x@7
                                                   (bvOr 1 (ite x@3 (bvult 64 x@35 x@5) x@26 x@7)
                                                      (ite x@3
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@11 x@16) x@18) x@21)
                                                               x@34))
                                                         x@26
                                                         x@7))))
                                             (bvEq 64 x@4 (bvAnd 64 x@8 x@35)))
                                          (bvEq 64 x@8 x@35))
                                       (bvEq 64 x@4
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@16) x@18)
                                                x@21)
                                             x@34)))
                                    (bvEq 64 x@4
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@16) x@18)
                                             x@21)
                                          x@34)))
                                 (bvEq 64 x@4
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@16) x@18)
                                          x@21)
                                       x@34)))
                              (bvEq 64 x@4
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@16) x@18)
                                       x@21)
                                    x@34)))
                           (bvEq 64 x@4
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@16) x@18)
                                    x@21)
                                 x@34)))
                        (bvEq 64 x@4
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@16) x@18)
                                 x@21)
                              x@34)))
                     (not
                        (bvEq 64 x@4
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@15 x@16) x@18) x@21)
                              x@34))))
                  (bvult 64 x@16 (bvAdd 64 x@19 x@28)))))
         (bvEq 32 x@14 (ite x@2 (bvslt 32 x@14 x@6) x@6 x@14)))

[20:47:26.341] Goal EVP_DecryptUpdate (goal number 133): LLVM points-to (array prefix)
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3 in llvm_points_to_array_prefix
Tags: "output buffer postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3: error: in llvm_points_to_array_prefix
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 32 Bool
      x@3 = Vec 8 Bool
      x@4 = Vec 1 Bool
      x@5 = Array x@1 x@3
      x@6 = bvNat 64 0
      x@7 = bvNat 64 16
      x@8 = bvNat 32 1
      x@9 = bvNat 32 0
      x@10 = bvNat 1 0
      x@11 = bvNat 64 1
      x@12 = bvNat 64 2
      x@13 = bvNat 64 3
      x@14 = bvNat 64 4
      x@15 = bvNat 64 5
      x@16 = bvNat 64 6
      x@17 = bvNat 64 7
      x@18 = bvNat 64 8
      x@19 = bvNat 64 9
      x@20 = bvNat 64 10
      x@21 = bvNat 64 11
      x@22 = bvNat 64 12
      x@23 = bvNat 64 13
      x@24 = bvNat 64 14
      x@25 = bvNat 64 15
      x@26 = bvNat 64 17
      x@27 = bvNat 64 18
      x@28 = bvNat 64 19
      x@29 = bvNat 64 20
      x@30 = bvNat 64 21
      x@31 = bvNat 64 22
      x@32 = bvNat 64 23
      x@33 = bvNat 64 24
      x@34 = bvNat 64 25
      x@35 = bvNat 64 26
      x@36 = bvNat 64 27
      x@37 = bvNat 64 28
      x@38 = bvNat 64 29
      x@39 = bvNat 64 96
      x@40 = bvNat 64 18446744073709551600
      x@41 = bvNat 64 18446744073709551615
      x@42 = at 16 x@3 Xi#1575 15
      x@43 = bvNat 64 68719476704
      x@44 = bvNat 64 18446744073709551602
      x@45 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@46 = bvNat 64 18446744073709551601
      x@47 = bvNat 8 0
      x@48 = append 32 32 Bool
               (ite x@2 (at 32 Bool x@45 0) (bvNat 32 4294967295) x@9)
               x@45
      x@49 = bvEq 64 x@6 (bvAdd 64 x@44 x@48)
      x@50 = ite x@1 x@49 x@44 x@46
      x@51 = bvAdd 64 x@48 x@50
      x@52 = bvult 64 x@51 x@39
      x@53 = ite x@1 x@52 x@6 (bvMul 64 x@39 (bvUDiv 64 x@51 x@39))
      x@54 = bvMul 64 x@41 x@53
      x@55 = bvAdd 64 x@51 x@54
      x@56 = bvShr 64 x@55 4
      x@57 = bvMul 64 x@7 x@56
      x@58 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@59 = bvNat 1 1
      x@60 = bvAdd 64 x@58 x@48
      x@61 = aes_hw_encrypt
               [ x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47
               , x@47 ]
               key#1573
      x@62 = Cryptol::pmod (TCNum 129) (TCNum 128)
               (append 128 1 Bool
                  (append 64 64 Bool
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@61 0) (at 16 x@3 x@61 1))
                                       (at 16 x@3 x@61 2))
                                    (at 16 x@3 x@61 3))
                                 (at 16 x@3 x@61 4))
                              (at 16 x@3 x@61 5))
                           (at 16 x@3 x@61 6))
                        (at 16 x@3 x@61 7))
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@3 x@61 8) (at 16 x@3 x@61 9))
                                       (at 16 x@3 x@61 10))
                                    (at 16 x@3 x@61 11))
                                 (at 16 x@3 x@61 12))
                              (at 16 x@3 x@61 13))
                           (at 16 x@3 x@61 14))
                        (at 16 x@3 x@61 15)))
                  x@10)
               (bvNat 129 598152598103212142806713177126155059201)
      x@63 = ite x@1 x@49 x@24 x@25
      x@64 = bvAdd 64 x@63 x@53
      x@65 = bvUDiv 64 x@55 x@7
      x@66 = bvMul 64 x@7 x@65
      x@67 = bvEq 64 x@6 x@66
      x@68 = bvAdd 64 x@64 x@66
      x@69 = bvMul 64 x@40 x@65
      x@70 = ite x@1 x@67 x@6 x@69
      x@71 = bvAdd 64 x@55 x@70
      x@72 = bvAdd 64 x@46 x@48
      x@73 = at 12 x@3 iv#1574 0
      x@74 = at 12 x@3 iv#1574 1
      x@75 = at 12 x@3 iv#1574 2
      x@76 = at 12 x@3 iv#1574 3
      x@77 = at 12 x@3 iv#1574 4
      x@78 = at 12 x@3 iv#1574 5
      x@79 = at 12 x@3 iv#1574 6
      x@80 = at 12 x@3 iv#1574 7
      x@81 = at 12 x@3 iv#1574 8
      x@82 = at 12 x@3 iv#1574 9
      x@83 = at 12 x@3 iv#1574 10
      x@84 = at 12 x@3 iv#1574 11
      x@85 = bvAdd 64 x@25 x@58
      x@86 = slice Bool 32 32 0 (bvUDiv 64 x@85 x@7)
      x@87 = bvAdd 32 x@8 x@86
      x@88 = aes_hw_encrypt
               [ x@73
               , x@74
               , x@75
               , x@76
               , x@77
               , x@78
               , x@79
               , x@80
               , x@81
               , x@82
               , x@83
               , x@84
               , slice Bool 0 8 24 x@87
               , slice Bool 8 8 16 x@87
               , slice Bool 16 8 8 x@87
               , slice Bool 24 8 0 x@87 ]
               key#1573
      x@89 = bvAdd 32 (bvNat 32 2) x@86
      x@90 = slice Bool 0 8 24 x@89
      x@91 = slice Bool 8 8 16 x@89
      x@92 = slice Bool 16 8 8 x@89
      x@93 = slice Bool 24 8 0 x@89
      x@94 = [x@90, x@91, x@92, x@93]
      x@95 = append 248 8 Bool
               (append 240 8 Bool
                  (append 232 8 Bool
                     (append 224 8 Bool
                        (append 216 8 Bool
                           (append 208 8 Bool
                              (append 200 8 Bool
                                 (append 192 8 Bool
                                    (append 184 8 Bool
                                       (append 176 8 Bool
                                          (append 168 8 Bool
                                             (append 160 8 Bool
                                                (append 152 8 Bool
                                                   (append 144 8 Bool
                                                      (append 136 8 Bool
                                                         (append 128 8 Bool
                                                            (append 120 8 Bool
                                                               (append 112 8 Bool
                                                                  (append 104 8 Bool
                                                                     (append 96 8 Bool
                                                                        (append 88 8 Bool
                                                                           (append 80 8 Bool
                                                                              (append 72 8 Bool
                                                                                 (append 64 8 Bool
                                                                                    (append 56 8 Bool
                                                                                       (append 48 8 Bool
                                                                                          (append 40 8 Bool
                                                                                             (append 32 8 Bool
                                                                                                (append 24 8 Bool
                                                                                                   (append 16 8 Bool
                                                                                                      (append 8 8 Bool (at 32 x@3 key#1573 0) (at 32 x@3 key#1573 1))
                                                                                                      (at 32 x@3 key#1573 2))
                                                                                                   (at 32 x@3 key#1573 3))
                                                                                                (at 32 x@3 key#1573 4))
                                                                                             (at 32 x@3 key#1573 5))
                                                                                          (at 32 x@3 key#1573 6))
                                                                                       (at 32 x@3 key#1573 7))
                                                                                    (at 32 x@3 key#1573 8))
                                                                                 (at 32 x@3 key#1573 9))
                                                                              (at 32 x@3 key#1573 10))
                                                                           (at 32 x@3 key#1573 11))
                                                                        (at 32 x@3 key#1573 12))
                                                                     (at 32 x@3 key#1573 13))
                                                                  (at 32 x@3 key#1573 14))
                                                               (at 32 x@3 key#1573 15))
                                                            (at 32 x@3 key#1573 16))
                                                         (at 32 x@3 key#1573 17))
                                                      (at 32 x@3 key#1573 18))
                                                   (at 32 x@3 key#1573 19))
                                                (at 32 x@3 key#1573 20))
                                             (at 32 x@3 key#1573 21))
                                          (at 32 x@3 key#1573 22))
                                       (at 32 x@3 key#1573 23))
                                    (at 32 x@3 key#1573 24))
                                 (at 32 x@3 key#1573 25))
                              (at 32 x@3 key#1573 26))
                           (at 32 x@3 key#1573 27))
                        (at 32 x@3 key#1573 28))
                     (at 32 x@3 key#1573 29))
                  (at 32 x@3 key#1573 30))
               (at 32 x@3 key#1573 31)
      x@96 = append 88 8 Bool
               (append 80 8 Bool
                  (append 72 8 Bool
                     (append 64 8 Bool
                        (append 56 8 Bool
                           (append 48 8 Bool
                              (append 40 8 Bool
                                 (append 32 8 Bool
                                    (append 24 8 Bool
                                       (append 16 8 Bool (append 8 8 Bool x@73 x@74) x@75)
                                       x@76)
                                    x@77)
                                 x@78)
                              x@79)
                           x@80)
                        x@81)
                     x@82)
                  x@83)
               x@84
      x@97 = bvAdd 32 x@8
               (slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@85 x@48) x@7))
      x@98 = aes_hw_encrypt
               [ x@73
               , x@74
               , x@75
               , x@76
               , x@77
               , x@78
               , x@79
               , x@80
               , x@81
               , x@82
               , x@83
               , x@84
               , slice Bool 0 8 24 x@97
               , slice Bool 8 8 16 x@97
               , slice Bool 16 8 8 x@97
               , slice Bool 24 8 0 x@97 ]
               key#1573
      x@99 = bvUDiv 64 x@51 x@7
      x@100 = ite (Vec 128 Bool) x@52
                (append 120 8 Bool
                   (append 112 8 Bool
                      (append 104 8 Bool (append 96 8 Bool x@96 x@90) x@91)
                      x@92)
                   x@93)
                (append 96 32 Bool x@96
                   (bvAdd 32 x@89
                      (slice Bool 32 32 0 (bvMul 64 x@16 (bvUDiv 64 x@99 x@16)))))
      x@101 = slice Bool 96 32 0 x@100
      x@102 = bvAdd 32 x@101 (slice Bool 28 32 4 x@55)
      x@103 = aes_hw_encrypt
                [ slice Bool 0 8 120 x@100
                , slice Bool 8 8 112 x@100
                , slice Bool 16 8 104 x@100
                , slice Bool 24 8 96 x@100
                , slice Bool 32 8 88 x@100
                , slice Bool 40 8 80 x@100
                , slice Bool 48 8 72 x@100
                , slice Bool 56 8 64 x@100
                , slice Bool 64 8 56 x@100
                , slice Bool 72 8 48 x@100
                , slice Bool 80 8 40 x@100
                , slice Bool 88 8 32 x@100
                , ite x@3 x@67 (slice Bool 96 8 24 x@100)
                    (slice Bool 0 8 24 x@102)
                , ite x@3 x@67 (slice Bool 104 8 16 x@100)
                    (slice Bool 8 8 16 x@102)
                , ite x@3 x@67 (slice Bool 112 8 8 x@100)
                    (slice Bool 16 8 8 x@102)
                , ite x@3 x@67 (slice Bool 120 8 0 x@100)
                    (slice Bool 24 8 0 x@102) ]
                key#1573
      x@104 = arrayLookupUnint in#1578 x@6
      x@105 = arrayLookupUnint in#1578 x@11
      x@106 = arrayLookupUnint in#1578 x@12
      x@107 = arrayLookupUnint in#1578 x@13
      x@108 = arrayLookupUnint in#1578 x@14
      x@109 = arrayLookupUnint in#1578 x@15
      x@110 = arrayLookupUnint in#1578 x@16
      x@111 = arrayLookupUnint in#1578 x@17
      x@112 = arrayLookupUnint in#1578 x@18
      x@113 = arrayLookupUnint in#1578 x@19
      x@114 = arrayLookupUnint in#1578 x@20
      x@115 = arrayLookupUnint in#1578 x@21
      x@116 = arrayLookupUnint in#1578 x@22
      x@117 = arrayLookupUnint in#1578 x@23
      x@118 = arrayUpdateUnint
                (arrayUpdateUnint
                   (arrayUpdateUnint
                      (arrayUpdateUnint
                         (arrayUpdateUnint
                            (arrayUpdateUnint
                               (arrayUpdateUnint
                                  (arrayUpdateUnint
                                     (arrayUpdateUnint
                                        (arrayUpdateUnint
                                           (arrayUpdateUnint
                                              (arrayUpdateUnint
                                                 (arrayUpdateUnint
                                                    (arrayUpdateUnint out#1579 x@6
                                                       (bvXor 8 (at 16 x@3 x@88 1) x@104))
                                                    x@11
                                                    (bvXor 8 (at 16 x@3 x@88 2) x@105))
                                                 x@12
                                                 (bvXor 8 (at 16 x@3 x@88 3) x@106))
                                              x@13
                                              (bvXor 8 (at 16 x@3 x@88 4) x@107))
                                           x@14
                                           (bvXor 8 (at 16 x@3 x@88 5) x@108))
                                        x@15
                                        (bvXor 8 (at 16 x@3 x@88 6) x@109))
                                     x@16
                                     (bvXor 8 (at 16 x@3 x@88 7) x@110))
                                  x@17
                                  (bvXor 8 (at 16 x@3 x@88 8) x@111))
                               x@18
                               (bvXor 8 (at 16 x@3 x@88 9) x@112))
                            x@19
                            (bvXor 8 (at 16 x@3 x@88 10) x@113))
                         x@20
                         (bvXor 8 (at 16 x@3 x@88 11) x@114))
                      x@21
                      (bvXor 8 (at 16 x@3 x@88 12) x@115))
                   x@22
                   (bvXor 8 (at 16 x@3 x@88 13) x@116))
                x@23
                (bvXor 8 (at 16 x@3 x@88 14) x@117)
      x@119 = arrayLookupUnint in#1578 x@24
      x@120 = arrayUpdateUnint x@118 x@24
                (bvXor 8 (at 16 x@3 x@88 15) x@119)
      x@121 = ite x@5 x@49 x@118 x@120
      x@122 = arrayConstantUnint x@47
      x@123 = arrayCopyUnint x@122 x@6 x@121 x@63 x@51
      x@124 = append 112 8 Bool
                (append 104 8 Bool
                   (append 96 8 Bool
                      (append 88 8 Bool
                         (append 80 8 Bool
                            (append 72 8 Bool
                               (append 64 8 Bool
                                  (append 56 8 Bool
                                     (append 48 8 Bool
                                        (append 40 8 Bool
                                           (append 32 8 Bool
                                              (append 24 8 Bool
                                                 (append 16 8 Bool
                                                    (append 8 8 Bool (at 16 x@3 Xi#1575 0)
                                                       (bvXor 8 x@104 (at 16 x@3 Xi#1575 1)))
                                                    (bvXor 8 x@105 (at 16 x@3 Xi#1575 2)))
                                                 (bvXor 8 x@106 (at 16 x@3 Xi#1575 3)))
                                              (bvXor 8 x@107 (at 16 x@3 Xi#1575 4)))
                                           (bvXor 8 x@108 (at 16 x@3 Xi#1575 5)))
                                        (bvXor 8 x@109 (at 16 x@3 Xi#1575 6)))
                                     (bvXor 8 x@110 (at 16 x@3 Xi#1575 7)))
                                  (bvXor 8 x@111 (at 16 x@3 Xi#1575 8)))
                               (bvXor 8 x@112 (at 16 x@3 Xi#1575 9)))
                            (bvXor 8 x@113 (at 16 x@3 Xi#1575 10)))
                         (bvXor 8 x@114 (at 16 x@3 Xi#1575 11)))
                      (bvXor 8 x@115 (at 16 x@3 Xi#1575 12)))
                   (bvXor 8 x@116 (at 16 x@3 Xi#1575 13)))
                (bvXor 8 x@117 (at 16 x@3 Xi#1575 14))
      x@125 = bvXor 8 x@119 x@42
      x@126 = gcm_polyval x@62
                (append 120 8 Bool x@124 (ite x@3 x@49 x@42 x@125))
      x@127 = arrayCopyUnint x@121 x@63
                (ite x@5 x@52 x@123
                   (aesni_gcm_decrypt x@51
                      (arrayCopyUnint x@122 x@6 in#1578 x@63 x@51)
                      x@123
                      key#1573
                      iv#1574
                      x@94
                      [ slice Bool 0 8 120 x@126
                      , slice Bool 8 8 112 x@126
                      , slice Bool 16 8 104 x@126
                      , slice Bool 24 8 96 x@126
                      , slice Bool 32 8 88 x@126
                      , slice Bool 40 8 80 x@126
                      , slice Bool 48 8 72 x@126
                      , slice Bool 56 8 64 x@126
                      , slice Bool 64 8 56 x@126
                      , slice Bool 72 8 48 x@126
                      , slice Bool 80 8 40 x@126
                      , slice Bool 88 8 32 x@126
                      , slice Bool 96 8 24 x@126
                      , slice Bool 104 8 16 x@126
                      , slice Bool 112 8 8 x@126
                      , slice Bool 120 8 0 x@126 ]
                      x@6
                      x@123
                      x@126).1)
                x@6
                x@51
      x@128 = gcm_polyval x@62 (append 120 8 Bool x@124 x@125)
      x@129 = bvult 64 x@72 x@39
      x@130 = ite x@1 x@129 x@6 (bvMul 64 x@39 (bvUDiv 64 x@72 x@39))
      x@131 = bvUDiv 64 (bvAdd 64 x@72 (bvMul 64 x@41 x@130)) x@7
      x@132 = bvMul 64 x@7 x@131
      x@133 = arrayCopyUnint x@122 x@6 x@120 x@25 x@72
      x@134 = ite x@5 (bvult 64 x@6 x@72)
                (arrayCopyUnint x@120 x@25
                   (ite x@5 x@129 x@133
                      (aesni_gcm_decrypt x@72
                         (arrayCopyUnint x@122 x@6 in#1578 x@25 x@72)
                         x@133
                         key#1573
                         iv#1574
                         x@94
                         [ slice Bool 0 8 120 x@128
                         , slice Bool 8 8 112 x@128
                         , slice Bool 16 8 104 x@128
                         , slice Bool 24 8 96 x@128
                         , slice Bool 32 8 88 x@128
                         , slice Bool 40 8 80 x@128
                         , slice Bool 48 8 72 x@128
                         , slice Bool 56 8 64 x@128
                         , slice Bool 64 8 56 x@128
                         , slice Bool 72 8 48 x@128
                         , slice Bool 80 8 40 x@128
                         , slice Bool 88 8 32 x@128
                         , slice Bool 96 8 24 x@128
                         , slice Bool 104 8 16 x@128
                         , slice Bool 112 8 8 x@128
                         , slice Bool 120 8 0 x@128 ]
                         x@6
                         x@133
                         x@128).1)
                   x@6
                   x@72)
                x@120
      x@135 = bvAdd 64 x@25 x@130
      x@136 = bvUDiv 64 x@72 x@7
      x@137 = bvMul 64 x@7 x@99
      x@138 = bvAdd 64 x@137 (ite x@1 x@49 x@25 x@7)
      x@139 = bvAdd 64 x@137 (ite x@1 x@49 x@7 x@26)
      x@140 = bvAdd 64 x@137 (ite x@1 x@49 x@26 x@27)
      x@141 = bvAdd 64 x@137 (ite x@1 x@49 x@27 x@28)
      x@142 = bvAdd 64 x@137 (ite x@1 x@49 x@28 x@29)
      x@143 = bvAdd 64 x@137 (ite x@1 x@49 x@29 x@30)
      x@144 = bvAdd 64 x@137 (ite x@1 x@49 x@30 x@31)
      x@145 = bvAdd 64 x@137 (ite x@1 x@49 x@31 x@32)
      x@146 = bvAdd 64 x@137 (ite x@1 x@49 x@32 x@33)
      x@147 = bvAdd 64 x@137 (ite x@1 x@49 x@33 x@34)
      x@148 = bvAdd 64 x@137 (ite x@1 x@49 x@34 x@35)
      x@149 = bvAdd 64 x@137 (ite x@1 x@49 x@35 x@36)
      x@150 = bvAdd 64 x@137 (ite x@1 x@49 x@36 x@37)
      x@151 = bvAdd 64 x@137 (ite x@1 x@49 x@37 x@38)
      x@152 = bvMul 64 x@7 x@136
      x@153 = bvAdd 64 (bvAdd 64 x@25 x@132) x@130
      x@154 = bvAdd 64 x@7 x@152
      x@155 = bvAdd 64 x@26 x@152
      x@156 = bvAdd 64 x@27 x@152
      x@157 = bvAdd 64 x@28 x@152
      x@158 = bvAdd 64 x@29 x@152
      x@159 = bvAdd 64 x@30 x@152
      x@160 = bvAdd 64 x@31 x@152
      x@161 = bvAdd 64 x@32 x@152
      x@162 = bvAdd 64 x@33 x@152
      x@163 = bvAdd 64 x@34 x@152
      x@164 = bvAdd 64 x@35 x@152
      x@165 = bvAdd 64 x@36 x@152
      x@166 = bvAdd 64 x@37 x@152
      x@167 = bvAdd 64 x@38 x@152
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or (not (bvult 32 x@45 (bvNat 32 2147483648)))
                           (not (bvult 64 x@58 x@43)))
                        (not
                           (bvult 64 (bvAdd 64 x@58 (append 32 32 Bool x@9 x@45)) x@43)))
                     (bvult 64 (bvNat 64 2147483647) x@48))
                  (not
                     (bvEq 1 x@10
                        (bvOr 1 (ite x@4 (bvult 64 x@43 x@60) x@59 x@10)
                           (ite x@4 (bvult 64 x@60 x@48) x@59 x@10)))))
               x@49)
            (Prelude.and (not x@49)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@49 (bvEq 64 x@6 x@51))
                                                                  (not (bvult 64 x@51 (bvNat 64 68719476736))))
                                                               (bvult 64 x@48 x@51))
                                                            (bvult 64 (bvMul 64 x@41 x@50) x@63))
                                                         (bvult 64 (bvNat 64 3071) x@55))
                                                      (Prelude.and (not x@67)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@67 (not (bvult 64 x@66 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@6 x@66)))
                                                                                    (not (bvEq 64 x@6 (bvURem 64 x@66 x@7))))
                                                                                 (bvult 64 x@48 x@66))
                                                                              (bvult 64 (bvAdd 64 x@48 x@69) x@64))
                                                                           (not (bvult 64 x@56 x@27)))
                                                                        (not (bvult 64 x@6 x@56)))
                                                                     (bvult 64 x@48 x@57))
                                                                  (bvult 64 (bvAdd 64 x@48 (bvMul 64 x@40 x@56)) x@64))
                                                               (bvult 64 x@48 x@68))
                                                            (bvult 64 x@48 (bvAdd 64 x@64 x@57)))))
                                                   (bvEq 64 x@6 x@71))
                                                (bvEq 1 x@10
                                                   (bvOr 1 (ite x@4 (bvult 64 x@71 x@7) x@59 x@10)
                                                      (ite x@4
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@41 x@48) x@50) x@54)
                                                               x@70))
                                                         x@59
                                                         x@10))))
                                             (bvEq 64 x@6 (bvAnd 64 x@11 x@71)))
                                          (bvEq 64 x@11 x@71))
                                       (bvEq 64 x@6
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@48) x@50)
                                                x@54)
                                             x@70)))
                                    (bvEq 64 x@6
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@48) x@50)
                                             x@54)
                                          x@70)))
                                 (bvEq 64 x@6
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@48) x@50)
                                          x@54)
                                       x@70)))
                              (bvEq 64 x@6
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@48) x@50)
                                       x@54)
                                    x@70)))
                           (bvEq 64 x@6
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@48) x@50)
                                    x@54)
                                 x@70)))
                        (bvEq 64 x@6
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@48) x@50)
                                 x@54)
                              x@70)))
                     (not
                        (bvEq 64 x@6
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 x@72 x@50) x@54) x@70))))
                  (bvult 64 x@48 (bvAdd 64 x@51 x@63)))))
         (arrayEq x@1 x@3
            (arrayUpdateUnint
               (arrayUpdateUnint
                  (arrayUpdateUnint
                     (arrayUpdateUnint
                        (arrayUpdateUnint
                           (arrayUpdateUnint
                              (arrayUpdateUnint
                                 (arrayUpdateUnint
                                    (arrayUpdateUnint
                                       (arrayUpdateUnint
                                          (arrayUpdateUnint
                                             (arrayUpdateUnint
                                                (arrayUpdateUnint
                                                   (arrayUpdateUnint
                                                      (arrayUpdateUnint
                                                         (ite x@5 x@67 x@127
                                                            (arrayCopyUnint x@127 x@64
                                                               (aes_ctr32_encrypt_blocks_array x@95 (slice Bool 0 96 32 x@100)
                                                                  x@101
                                                                  (arrayCopyUnint x@122 x@6 in#1578 x@64 x@57)
                                                                  x@56
                                                                  x@6
                                                                  (arrayCopyUnint x@122 x@6 x@127 x@64 x@57))
                                                               x@6
                                                               x@57))
                                                         x@68
                                                         (bvXor 8 (at 16 x@3 x@103 0) (arrayLookupUnint in#1578 x@68)))
                                                      x@138
                                                      (bvXor 8 (at 16 x@3 x@103 1) (arrayLookupUnint in#1578 x@138)))
                                                   x@139
                                                   (bvXor 8 (at 16 x@3 x@103 2) (arrayLookupUnint in#1578 x@139)))
                                                x@140
                                                (bvXor 8 (at 16 x@3 x@103 3) (arrayLookupUnint in#1578 x@140)))
                                             x@141
                                             (bvXor 8 (at 16 x@3 x@103 4) (arrayLookupUnint in#1578 x@141)))
                                          x@142
                                          (bvXor 8 (at 16 x@3 x@103 5) (arrayLookupUnint in#1578 x@142)))
                                       x@143
                                       (bvXor 8 (at 16 x@3 x@103 6) (arrayLookupUnint in#1578 x@143)))
                                    x@144
                                    (bvXor 8 (at 16 x@3 x@103 7) (arrayLookupUnint in#1578 x@144)))
                                 x@145
                                 (bvXor 8 (at 16 x@3 x@103 8) (arrayLookupUnint in#1578 x@145)))
                              x@146
                              (bvXor 8 (at 16 x@3 x@103 9) (arrayLookupUnint in#1578 x@146)))
                           x@147
                           (bvXor 8 (at 16 x@3 x@103 10) (arrayLookupUnint in#1578 x@147)))
                        x@148
                        (bvXor 8 (at 16 x@3 x@103 11) (arrayLookupUnint in#1578 x@148)))
                     x@149
                     (bvXor 8 (at 16 x@3 x@103 12) (arrayLookupUnint in#1578 x@149)))
                  x@150
                  (bvXor 8 (at 16 x@3 x@103 13) (arrayLookupUnint in#1578 x@150)))
               x@151
               (bvXor 8 (at 16 x@3 x@103 14) (arrayLookupUnint in#1578 x@151)))
            (arrayUpdateUnint
               (arrayUpdateUnint
                  (arrayUpdateUnint
                     (arrayUpdateUnint
                        (arrayUpdateUnint
                           (arrayUpdateUnint
                              (arrayUpdateUnint
                                 (arrayUpdateUnint
                                    (arrayUpdateUnint
                                       (arrayUpdateUnint
                                          (arrayUpdateUnint
                                             (arrayUpdateUnint
                                                (arrayUpdateUnint
                                                   (arrayUpdateUnint
                                                      (arrayUpdateUnint
                                                         (ite x@5 (bvEq 64 x@6 x@132) x@134
                                                            (arrayCopyUnint x@134 x@135
                                                               (aes_ctr32_encrypt_blocks_array x@95 x@96
                                                                  (bvAdd 32 x@89
                                                                     (ite x@2 x@129 x@9
                                                                        (slice Bool 32 32 0 (bvMul 64 x@16 (bvUDiv 64 x@136 x@16)))))
                                                                  (arrayCopyUnint x@122 x@6 in#1578 x@135 x@132)
                                                                  x@131
                                                                  x@6
                                                                  (arrayCopyUnint x@122 x@6 x@134 x@135 x@132))
                                                               x@6
                                                               x@132))
                                                         x@153
                                                         (bvXor 8 (at 16 x@3 x@98 0) (arrayLookupUnint in#1578 x@153)))
                                                      x@154
                                                      (bvXor 8 (at 16 x@3 x@98 1) (arrayLookupUnint in#1578 x@154)))
                                                   x@155
                                                   (bvXor 8 (at 16 x@3 x@98 2) (arrayLookupUnint in#1578 x@155)))
                                                x@156
                                                (bvXor 8 (at 16 x@3 x@98 3) (arrayLookupUnint in#1578 x@156)))
                                             x@157
                                             (bvXor 8 (at 16 x@3 x@98 4) (arrayLookupUnint in#1578 x@157)))
                                          x@158
                                          (bvXor 8 (at 16 x@3 x@98 5) (arrayLookupUnint in#1578 x@158)))
                                       x@159
                                       (bvXor 8 (at 16 x@3 x@98 6) (arrayLookupUnint in#1578 x@159)))
                                    x@160
                                    (bvXor 8 (at 16 x@3 x@98 7) (arrayLookupUnint in#1578 x@160)))
                                 x@161
                                 (bvXor 8 (at 16 x@3 x@98 8) (arrayLookupUnint in#1578 x@161)))
                              x@162
                              (bvXor 8 (at 16 x@3 x@98 9) (arrayLookupUnint in#1578 x@162)))
                           x@163
                           (bvXor 8 (at 16 x@3 x@98 10) (arrayLookupUnint in#1578 x@163)))
                        x@164
                        (bvXor 8 (at 16 x@3 x@98 11) (arrayLookupUnint in#1578 x@164)))
                     x@165
                     (bvXor 8 (at 16 x@3 x@98 12) (arrayLookupUnint in#1578 x@165)))
                  x@166
                  (bvXor 8 (at 16 x@3 x@98 13) (arrayLookupUnint in#1578 x@166)))
               x@167
               (bvXor 8 (at 16 x@3 x@98 14)
                  (arrayLookupUnint in#1578 x@167)))))

Calling Yices to check sat
Running check sat
[20:48:03.067] Goal EVP_DecryptUpdate (goal number 134): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:48:04.407] Goal EVP_DecryptUpdate (goal number 135): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:221:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:48:05.810] Goal EVP_DecryptUpdate (goal number 136): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:197:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:197:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:48:06.888] Goal EVP_DecryptUpdate (goal number 137): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:213:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:213:3: error: in llvm_points_to
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 8 Bool
      x@3 = Vec 128 Bool
      x@4 = Vec 1 Bool
      x@5 = Array x@1 x@2
      x@6 = bvNat 64 0
      x@7 = bvNat 64 16
      x@8 = bvNat 32 0
      x@9 = bvNat 1 0
      x@10 = bvNat 64 1
      x@11 = bvNat 64 2
      x@12 = bvNat 64 3
      x@13 = bvNat 64 4
      x@14 = bvNat 64 5
      x@15 = bvNat 64 6
      x@16 = bvNat 64 7
      x@17 = bvNat 64 8
      x@18 = bvNat 64 9
      x@19 = bvNat 64 10
      x@20 = bvNat 64 11
      x@21 = bvNat 64 12
      x@22 = bvNat 64 13
      x@23 = bvNat 64 14
      x@24 = bvNat 64 15
      x@25 = bvNat 64 17
      x@26 = bvNat 64 18
      x@27 = bvNat 64 19
      x@28 = bvNat 64 20
      x@29 = bvNat 64 21
      x@30 = bvNat 64 22
      x@31 = bvNat 64 23
      x@32 = bvNat 64 24
      x@33 = bvNat 64 25
      x@34 = bvNat 64 26
      x@35 = bvNat 64 27
      x@36 = bvNat 64 28
      x@37 = bvNat 64 29
      x@38 = bvNat 64 96
      x@39 = bvNat 64 18446744073709551600
      x@40 = bvNat 64 18446744073709551615
      x@41 = at 16 x@2 Xi#1575 15
      x@42 = bvNat 64 68719476704
      x@43 = bvNat 64 18446744073709551602
      x@44 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@45 = bvNat 64 18446744073709551601
      x@46 = bvNat 8 0
      x@47 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@44 0) (bvNat 32 4294967295)
                  x@8)
               x@44
      x@48 = bvEq 64 x@6 (bvAdd 64 x@43 x@47)
      x@49 = ite x@1 x@48 x@43 x@45
      x@50 = bvAdd 64 x@47 x@49
      x@51 = bvult 64 x@50 x@38
      x@52 = ite x@1 x@51 x@6 (bvMul 64 x@38 (bvUDiv 64 x@50 x@38))
      x@53 = bvMul 64 x@40 x@52
      x@54 = bvAdd 64 x@50 x@53
      x@55 = bvShr 64 x@54 4
      x@56 = bvMul 64 x@7 x@55
      x@57 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@58 = bvNat 1 1
      x@59 = bvAdd 64 x@57 x@47
      x@60 = aes_hw_encrypt
               [ x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46
               , x@46 ]
               key#1573
      x@61 = Cryptol::pmod (TCNum 129) (TCNum 128)
               (append 128 1 Bool
                  (append 64 64 Bool
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@2 x@60 0) (at 16 x@2 x@60 1))
                                       (at 16 x@2 x@60 2))
                                    (at 16 x@2 x@60 3))
                                 (at 16 x@2 x@60 4))
                              (at 16 x@2 x@60 5))
                           (at 16 x@2 x@60 6))
                        (at 16 x@2 x@60 7))
                     (append 56 8 Bool
                        (append 48 8 Bool
                           (append 40 8 Bool
                              (append 32 8 Bool
                                 (append 24 8 Bool
                                    (append 16 8 Bool
                                       (append 8 8 Bool (at 16 x@2 x@60 8) (at 16 x@2 x@60 9))
                                       (at 16 x@2 x@60 10))
                                    (at 16 x@2 x@60 11))
                                 (at 16 x@2 x@60 12))
                              (at 16 x@2 x@60 13))
                           (at 16 x@2 x@60 14))
                        (at 16 x@2 x@60 15)))
                  x@9)
               (bvNat 129 598152598103212142806713177126155059201)
      x@62 = ite x@1 x@48 x@23 x@24
      x@63 = bvAdd 64 x@62 x@52
      x@64 = bvUDiv 64 x@54 x@7
      x@65 = bvMul 64 x@7 x@64
      x@66 = bvEq 64 x@6 x@65
      x@67 = bvAdd 64 x@63 x@65
      x@68 = bvMul 64 x@39 x@64
      x@69 = ite x@1 x@66 x@6 x@68
      x@70 = bvAdd 64 x@54 x@69
      x@71 = bvAdd 64 x@45 x@47
      x@72 = slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@24 x@57) x@7)
      x@73 = bvAdd 32 (bvNat 32 1) x@72
      x@74 = aes_hw_encrypt
               [ at 12 x@2 iv#1574 0
               , at 12 x@2 iv#1574 1
               , at 12 x@2 iv#1574 2
               , at 12 x@2 iv#1574 3
               , at 12 x@2 iv#1574 4
               , at 12 x@2 iv#1574 5
               , at 12 x@2 iv#1574 6
               , at 12 x@2 iv#1574 7
               , at 12 x@2 iv#1574 8
               , at 12 x@2 iv#1574 9
               , at 12 x@2 iv#1574 10
               , at 12 x@2 iv#1574 11
               , slice Bool 0 8 24 x@73
               , slice Bool 8 8 16 x@73
               , slice Bool 16 8 8 x@73
               , slice Bool 24 8 0 x@73 ]
               key#1573
      x@75 = bvAdd 32 (bvNat 32 2) x@72
      x@76 = [ slice Bool 0 8 24 x@75
      , slice Bool 8 8 16 x@75
      , slice Bool 16 8 8 x@75
      , slice Bool 24 8 0 x@75 ]
      x@77 = arrayLookupUnint in#1578 x@6
      x@78 = arrayLookupUnint in#1578 x@10
      x@79 = arrayLookupUnint in#1578 x@11
      x@80 = arrayLookupUnint in#1578 x@12
      x@81 = arrayLookupUnint in#1578 x@13
      x@82 = arrayLookupUnint in#1578 x@14
      x@83 = arrayLookupUnint in#1578 x@15
      x@84 = arrayLookupUnint in#1578 x@16
      x@85 = arrayLookupUnint in#1578 x@17
      x@86 = arrayLookupUnint in#1578 x@18
      x@87 = arrayLookupUnint in#1578 x@19
      x@88 = arrayLookupUnint in#1578 x@20
      x@89 = arrayLookupUnint in#1578 x@21
      x@90 = arrayLookupUnint in#1578 x@22
      x@91 = arrayLookupUnint in#1578 x@23
      x@92 = arrayConstantUnint x@46
      x@93 = append 112 8 Bool
               (append 104 8 Bool
                  (append 96 8 Bool
                     (append 88 8 Bool
                        (append 80 8 Bool
                           (append 72 8 Bool
                              (append 64 8 Bool
                                 (append 56 8 Bool
                                    (append 48 8 Bool
                                       (append 40 8 Bool
                                          (append 32 8 Bool
                                             (append 24 8 Bool
                                                (append 16 8 Bool
                                                   (append 8 8 Bool (at 16 x@2 Xi#1575 0)
                                                      (bvXor 8 x@77 (at 16 x@2 Xi#1575 1)))
                                                   (bvXor 8 x@78 (at 16 x@2 Xi#1575 2)))
                                                (bvXor 8 x@79 (at 16 x@2 Xi#1575 3)))
                                             (bvXor 8 x@80 (at 16 x@2 Xi#1575 4)))
                                          (bvXor 8 x@81 (at 16 x@2 Xi#1575 5)))
                                       (bvXor 8 x@82 (at 16 x@2 Xi#1575 6)))
                                    (bvXor 8 x@83 (at 16 x@2 Xi#1575 7)))
                                 (bvXor 8 x@84 (at 16 x@2 Xi#1575 8)))
                              (bvXor 8 x@85 (at 16 x@2 Xi#1575 9)))
                           (bvXor 8 x@86 (at 16 x@2 Xi#1575 10)))
                        (bvXor 8 x@87 (at 16 x@2 Xi#1575 11)))
                     (bvXor 8 x@88 (at 16 x@2 Xi#1575 12)))
                  (bvXor 8 x@89 (at 16 x@2 Xi#1575 13)))
               (bvXor 8 x@90 (at 16 x@2 Xi#1575 14))
      x@94 = bvXor 8 x@91 x@41
      x@95 = gcm_polyval x@61
               (append 120 8 Bool x@93 (ite x@2 x@48 x@41 x@94))
      x@96 = gcm_polyval x@61 (append 120 8 Bool x@93 x@94)
      x@97 = bvult 64 x@71 x@38
      x@98 = ite x@1 x@97 x@6 (bvMul 64 x@38 (bvUDiv 64 x@71 x@38))
      x@99 = bvUDiv 64 (bvAdd 64 x@71 (bvMul 64 x@40 x@98)) x@7
      x@100 = bvMul 64 x@7 x@99
      x@101 = bvAdd 64 x@24 x@98
      x@102 = bvMul 64 x@7 (bvUDiv 64 x@50 x@7)
      x@103 = bvMul 64 x@7 (bvUDiv 64 x@71 x@7)
      x@104 = arrayUpdateUnint
                (arrayUpdateUnint
                   (arrayUpdateUnint
                      (arrayUpdateUnint
                         (arrayUpdateUnint
                            (arrayUpdateUnint
                               (arrayUpdateUnint
                                  (arrayUpdateUnint
                                     (arrayUpdateUnint
                                        (arrayUpdateUnint
                                           (arrayUpdateUnint
                                              (arrayUpdateUnint
                                                 (arrayUpdateUnint
                                                    (arrayUpdateUnint out#1579 x@6
                                                       (bvXor 8 x@77 (at 16 x@2 x@74 1)))
                                                    x@10
                                                    (bvXor 8 x@78 (at 16 x@2 x@74 2)))
                                                 x@11
                                                 (bvXor 8 x@79 (at 16 x@2 x@74 3)))
                                              x@12
                                              (bvXor 8 x@80 (at 16 x@2 x@74 4)))
                                           x@13
                                           (bvXor 8 x@81 (at 16 x@2 x@74 5)))
                                        x@14
                                        (bvXor 8 x@82 (at 16 x@2 x@74 6)))
                                     x@15
                                     (bvXor 8 x@83 (at 16 x@2 x@74 7)))
                                  x@16
                                  (bvXor 8 x@84 (at 16 x@2 x@74 8)))
                               x@17
                               (bvXor 8 x@85 (at 16 x@2 x@74 9)))
                            x@18
                            (bvXor 8 x@86 (at 16 x@2 x@74 10)))
                         x@19
                         (bvXor 8 x@87 (at 16 x@2 x@74 11)))
                      x@20
                      (bvXor 8 x@88 (at 16 x@2 x@74 12)))
                   x@21
                   (bvXor 8 x@89 (at 16 x@2 x@74 13)))
                x@22
                (bvXor 8 x@90 (at 16 x@2 x@74 14))
      x@105 = arrayUpdateUnint x@104 x@23
                (bvXor 8 x@91 (at 16 x@2 x@74 15))
      x@106 = arrayCopyUnint x@92 x@6 (ite x@5 x@48 x@104 x@105) x@62
                x@50
      x@107 = ite x@3 x@51 x@95
                (aesni_gcm_decrypt x@50
                   (arrayCopyUnint x@92 x@6 in#1578 x@62 x@50)
                   x@106
                   key#1573
                   iv#1574
                   x@76
                   [ slice Bool 0 8 120 x@95
                   , slice Bool 8 8 112 x@95
                   , slice Bool 16 8 104 x@95
                   , slice Bool 24 8 96 x@95
                   , slice Bool 32 8 88 x@95
                   , slice Bool 40 8 80 x@95
                   , slice Bool 48 8 72 x@95
                   , slice Bool 56 8 64 x@95
                   , slice Bool 64 8 56 x@95
                   , slice Bool 72 8 48 x@95
                   , slice Bool 80 8 40 x@95
                   , slice Bool 88 8 32 x@95
                   , slice Bool 96 8 24 x@95
                   , slice Bool 104 8 16 x@95
                   , slice Bool 112 8 8 x@95
                   , slice Bool 120 8 0 x@95 ]
                   x@6
                   x@106
                   x@95).2.1
      x@108 = gcm_ghash_blocks_array x@61
                (arrayCopyUnint x@92 x@6 in#1578 x@63 x@65)
                x@64
                x@6
                x@107
      x@109 = arrayCopyUnint x@92 x@6 x@105 x@24 x@71
      x@110 = ite x@3 x@97 x@96
                (aesni_gcm_decrypt x@71
                   (arrayCopyUnint x@92 x@6 in#1578 x@24 x@71)
                   x@109
                   key#1573
                   iv#1574
                   x@76
                   [ slice Bool 0 8 120 x@96
                   , slice Bool 8 8 112 x@96
                   , slice Bool 16 8 104 x@96
                   , slice Bool 24 8 96 x@96
                   , slice Bool 32 8 88 x@96
                   , slice Bool 40 8 80 x@96
                   , slice Bool 48 8 72 x@96
                   , slice Bool 56 8 64 x@96
                   , slice Bool 64 8 56 x@96
                   , slice Bool 72 8 48 x@96
                   , slice Bool 80 8 40 x@96
                   , slice Bool 88 8 32 x@96
                   , slice Bool 96 8 24 x@96
                   , slice Bool 104 8 16 x@96
                   , slice Bool 112 8 8 x@96
                   , slice Bool 120 8 0 x@96 ]
                   x@6
                   x@109
                   x@96).2.1
      x@111 = ite x@3 (bvEq 64 x@6 x@100) x@110
                (gcm_ghash_blocks_array x@61
                   (arrayCopyUnint x@92 x@6 in#1578 x@101 x@100)
                   x@99
                   x@6
                   x@110)
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@44 (bvNat 32 2147483648)))
                        (not (bvult 64 x@57 x@42)))
                     (not
                        (bvult 64 (bvAdd 64 x@57 (append 32 32 Bool x@8 x@44)) x@42)))
                  (bvult 64 (bvNat 64 2147483647) x@47))
               (not
                  (bvEq 1 x@9
                     (bvOr 1 (ite x@4 (bvult 64 x@42 x@59) x@58 x@9)
                        (ite x@4 (bvult 64 x@59 x@47) x@58 x@9)))))
            (Prelude.and (not x@48)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@48 (bvEq 64 x@6 x@50))
                                                                  (not (bvult 64 x@50 (bvNat 64 68719476736))))
                                                               (bvult 64 x@47 x@50))
                                                            (bvult 64 (bvMul 64 x@40 x@49) x@62))
                                                         (bvult 64 (bvNat 64 3071) x@54))
                                                      (Prelude.and (not x@66)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@66 (not (bvult 64 x@65 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@6 x@65)))
                                                                                    (not (bvEq 64 x@6 (bvURem 64 x@65 x@7))))
                                                                                 (bvult 64 x@47 x@65))
                                                                              (bvult 64 (bvAdd 64 x@47 x@68) x@63))
                                                                           (not (bvult 64 x@55 x@26)))
                                                                        (not (bvult 64 x@6 x@55)))
                                                                     (bvult 64 x@47 x@56))
                                                                  (bvult 64 (bvAdd 64 x@47 (bvMul 64 x@39 x@55)) x@63))
                                                               (bvult 64 x@47 x@67))
                                                            (bvult 64 x@47 (bvAdd 64 x@63 x@56)))))
                                                   (bvEq 64 x@6 x@70))
                                                (bvEq 1 x@9
                                                   (bvOr 1 (ite x@4 (bvult 64 x@70 x@7) x@58 x@9)
                                                      (ite x@4
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@40 x@47) x@49) x@53)
                                                               x@69))
                                                         x@58
                                                         x@9))))
                                             (bvEq 64 x@6 (bvAnd 64 x@10 x@70)))
                                          (bvEq 64 x@10 x@70))
                                       (bvEq 64 x@6
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@47) x@49)
                                                x@53)
                                             x@69)))
                                    (bvEq 64 x@6
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@47) x@49)
                                             x@53)
                                          x@69)))
                                 (bvEq 64 x@6
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@47) x@49)
                                          x@53)
                                       x@69)))
                              (bvEq 64 x@6
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@47) x@49)
                                       x@53)
                                    x@69)))
                           (bvEq 64 x@6
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@47) x@49)
                                    x@53)
                                 x@69)))
                        (bvEq 64 x@6
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@47) x@49)
                                 x@53)
                              x@69)))
                     (not
                        (bvEq 64 x@6
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 x@71 x@49) x@53) x@69))))
                  (bvult 64 x@47 (bvAdd 64 x@50 x@62)))))
         (Prelude.and
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and
                           (Prelude.and
                              (Prelude.and
                                 (Prelude.and
                                    (Prelude.and
                                       (Prelude.and
                                          (Prelude.and
                                             (Prelude.and
                                                (Prelude.and
                                                   (Prelude.and
                                                      (Prelude.or x@48
                                                         (bvEq 8
                                                            (bvXor 8 (arrayLookupUnint in#1578 x@67)
                                                               (ite x@2 x@66 (slice Bool 0 8 120 x@107)
                                                                  (slice Bool 0 8 120 x@108)))
                                                            (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@101 x@100))
                                                               (slice Bool 0 8 120 x@111))))
                                                      (Prelude.or x@48
                                                         (bvEq 8
                                                            (bvXor 8
                                                               (arrayLookupUnint in#1578
                                                                  (bvAdd 64 x@102 (ite x@1 x@48 x@24 x@7)))
                                                               (ite x@2 x@66 (slice Bool 8 8 112 x@107)
                                                                  (slice Bool 8 8 112 x@108)))
                                                            (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@7 x@103))
                                                               (slice Bool 8 8 112 x@111)))))
                                                   (Prelude.or x@48
                                                      (bvEq 8
                                                         (bvXor 8
                                                            (arrayLookupUnint in#1578
                                                               (bvAdd 64 x@102 (ite x@1 x@48 x@7 x@25)))
                                                            (ite x@2 x@66 (slice Bool 16 8 104 x@107)
                                                               (slice Bool 16 8 104 x@108)))
                                                         (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@25 x@103))
                                                            (slice Bool 16 8 104 x@111)))))
                                                (Prelude.or x@48
                                                   (bvEq 8
                                                      (bvXor 8
                                                         (arrayLookupUnint in#1578
                                                            (bvAdd 64 x@102 (ite x@1 x@48 x@25 x@26)))
                                                         (ite x@2 x@66 (slice Bool 24 8 96 x@107)
                                                            (slice Bool 24 8 96 x@108)))
                                                      (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@26 x@103))
                                                         (slice Bool 24 8 96 x@111)))))
                                             (Prelude.or x@48
                                                (bvEq 8
                                                   (bvXor 8
                                                      (arrayLookupUnint in#1578
                                                         (bvAdd 64 x@102 (ite x@1 x@48 x@26 x@27)))
                                                      (ite x@2 x@66 (slice Bool 32 8 88 x@107)
                                                         (slice Bool 32 8 88 x@108)))
                                                   (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@27 x@103))
                                                      (slice Bool 32 8 88 x@111)))))
                                          (Prelude.or x@48
                                             (bvEq 8
                                                (bvXor 8
                                                   (arrayLookupUnint in#1578
                                                      (bvAdd 64 x@102 (ite x@1 x@48 x@27 x@28)))
                                                   (ite x@2 x@66 (slice Bool 40 8 80 x@107)
                                                      (slice Bool 40 8 80 x@108)))
                                                (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@28 x@103))
                                                   (slice Bool 40 8 80 x@111)))))
                                       (Prelude.or x@48
                                          (bvEq 8
                                             (bvXor 8
                                                (arrayLookupUnint in#1578
                                                   (bvAdd 64 x@102 (ite x@1 x@48 x@28 x@29)))
                                                (ite x@2 x@66 (slice Bool 48 8 72 x@107)
                                                   (slice Bool 48 8 72 x@108)))
                                             (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@29 x@103))
                                                (slice Bool 48 8 72 x@111)))))
                                    (Prelude.or x@48
                                       (bvEq 8
                                          (bvXor 8
                                             (arrayLookupUnint in#1578
                                                (bvAdd 64 x@102 (ite x@1 x@48 x@29 x@30)))
                                             (ite x@2 x@66 (slice Bool 56 8 64 x@107)
                                                (slice Bool 56 8 64 x@108)))
                                          (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@30 x@103))
                                             (slice Bool 56 8 64 x@111)))))
                                 (Prelude.or x@48
                                    (bvEq 8
                                       (bvXor 8
                                          (arrayLookupUnint in#1578
                                             (bvAdd 64 x@102 (ite x@1 x@48 x@30 x@31)))
                                          (ite x@2 x@66 (slice Bool 64 8 56 x@107)
                                             (slice Bool 64 8 56 x@108)))
                                       (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@31 x@103))
                                          (slice Bool 64 8 56 x@111)))))
                              (Prelude.or x@48
                                 (bvEq 8
                                    (bvXor 8
                                       (arrayLookupUnint in#1578
                                          (bvAdd 64 x@102 (ite x@1 x@48 x@31 x@32)))
                                       (ite x@2 x@66 (slice Bool 72 8 48 x@107)
                                          (slice Bool 72 8 48 x@108)))
                                    (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@32 x@103))
                                       (slice Bool 72 8 48 x@111)))))
                           (Prelude.or x@48
                              (bvEq 8
                                 (bvXor 8
                                    (arrayLookupUnint in#1578
                                       (bvAdd 64 x@102 (ite x@1 x@48 x@32 x@33)))
                                    (ite x@2 x@66 (slice Bool 80 8 40 x@107)
                                       (slice Bool 80 8 40 x@108)))
                                 (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@33 x@103))
                                    (slice Bool 80 8 40 x@111)))))
                        (Prelude.or x@48
                           (bvEq 8
                              (bvXor 8
                                 (arrayLookupUnint in#1578
                                    (bvAdd 64 x@102 (ite x@1 x@48 x@33 x@34)))
                                 (ite x@2 x@66 (slice Bool 88 8 32 x@107)
                                    (slice Bool 88 8 32 x@108)))
                              (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@34 x@103))
                                 (slice Bool 88 8 32 x@111)))))
                     (Prelude.or x@48
                        (bvEq 8
                           (bvXor 8
                              (arrayLookupUnint in#1578
                                 (bvAdd 64 x@102 (ite x@1 x@48 x@34 x@35)))
                              (ite x@2 x@66 (slice Bool 96 8 24 x@107)
                                 (slice Bool 96 8 24 x@108)))
                           (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@35 x@103))
                              (slice Bool 96 8 24 x@111)))))
                  (Prelude.or x@48
                     (bvEq 8
                        (bvXor 8
                           (arrayLookupUnint in#1578
                              (bvAdd 64 x@102 (ite x@1 x@48 x@35 x@36)))
                           (ite x@2 x@66 (slice Bool 104 8 16 x@107)
                              (slice Bool 104 8 16 x@108)))
                        (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@36 x@103))
                           (slice Bool 104 8 16 x@111)))))
               (Prelude.or x@48
                  (bvEq 8
                     (bvXor 8
                        (arrayLookupUnint in#1578
                           (bvAdd 64 x@102 (ite x@1 x@48 x@36 x@37)))
                        (ite x@2 x@66 (slice Bool 112 8 8 x@107)
                           (slice Bool 112 8 8 x@108)))
                     (bvXor 8 (arrayLookupUnint in#1578 (bvAdd 64 x@37 x@103))
                        (slice Bool 112 8 8 x@111)))))
            (Prelude.or x@48
               (bvEq 8
                  (ite x@2 x@66 (slice Bool 120 8 0 x@107)
                     (slice Bool 120 8 0 x@108))
                  (slice Bool 120 8 0 x@111)))))

[20:49:40.861] Goal EVP_DecryptUpdate (goal number 138): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:212:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:212:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:49:41.832] Goal EVP_DecryptUpdate (goal number 139): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:211:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:211:3: error: in llvm_points_to
Literal equality postcondition


EqTrue True

[20:49:42.901] Goal EVP_DecryptUpdate (goal number 140): LLVM points-to
at internal in llvm_points_to
Tags: "Xi postcondition"
internal: error: in llvm_points_to
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 8 Bool
      x@3 = Vec 1 Bool
      x@4 = bvNat 64 0
      x@5 = bvNat 64 16
      x@6 = bvNat 32 1
      x@7 = bvNat 32 0
      x@8 = bvNat 1 0
      x@9 = bvNat 64 1
      x@10 = bvNat 64 6
      x@11 = bvNat 64 15
      x@12 = bvNat 64 96
      x@13 = bvNat 64 18446744073709551600
      x@14 = bvNat 64 18446744073709551615
      x@15 = bvNat 64 68719476704
      x@16 = bvNat 64 18446744073709551602
      x@17 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@18 = bvNat 64 18446744073709551601
      x@19 = append 32 32 Bool
               (ite (Vec 32 Bool) (at 32 Bool x@17 0) (bvNat 32 4294967295)
                  x@7)
               x@17
      x@20 = bvEq 64 x@4 (bvAdd 64 x@16 x@19)
      x@21 = ite x@1 x@20 x@16 x@18
      x@22 = bvAdd 64 x@19 x@21
      x@23 = bvult 64 x@22 x@12
      x@24 = ite x@1 x@23 x@4 (bvMul 64 x@12 (bvUDiv 64 x@22 x@12))
      x@25 = bvMul 64 x@14 x@24
      x@26 = bvAdd 64 x@22 x@25
      x@27 = bvShr 64 x@26 4
      x@28 = bvMul 64 x@5 x@27
      x@29 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@30 = bvNat 1 1
      x@31 = bvAdd 64 x@29 x@19
      x@32 = ite x@1 x@20 (bvNat 64 14) x@11
      x@33 = bvAdd 64 x@32 x@24
      x@34 = bvUDiv 64 x@26 x@5
      x@35 = bvMul 64 x@5 x@34
      x@36 = bvEq 64 x@4 x@35
      x@37 = bvMul 64 x@13 x@34
      x@38 = ite x@1 x@36 x@4 x@37
      x@39 = bvAdd 64 x@26 x@38
      x@40 = at 12 x@2 iv#1574 0
      x@41 = at 12 x@2 iv#1574 1
      x@42 = at 12 x@2 iv#1574 2
      x@43 = at 12 x@2 iv#1574 3
      x@44 = at 12 x@2 iv#1574 4
      x@45 = at 12 x@2 iv#1574 5
      x@46 = at 12 x@2 iv#1574 6
      x@47 = at 12 x@2 iv#1574 7
      x@48 = at 12 x@2 iv#1574 8
      x@49 = at 12 x@2 iv#1574 9
      x@50 = at 12 x@2 iv#1574 10
      x@51 = at 12 x@2 iv#1574 11
      x@52 = bvAdd 64 x@11 x@29
      x@53 = slice Bool 32 32 0 (bvUDiv 64 x@52 x@5)
      x@54 = bvAdd 32 x@6 x@53
      x@55 = aes_hw_encrypt
               [ x@40
               , x@41
               , x@42
               , x@43
               , x@44
               , x@45
               , x@46
               , x@47
               , x@48
               , x@49
               , x@50
               , x@51
               , slice Bool 0 8 24 x@54
               , slice Bool 8 8 16 x@54
               , slice Bool 16 8 8 x@54
               , slice Bool 24 8 0 x@54 ]
               key#1573
      x@56 = bvAdd 32 (bvNat 32 2) x@53
      x@57 = append 88 8 Bool
               (append 80 8 Bool
                  (append 72 8 Bool
                     (append 64 8 Bool
                        (append 56 8 Bool
                           (append 48 8 Bool
                              (append 40 8 Bool
                                 (append 32 8 Bool
                                    (append 24 8 Bool
                                       (append 16 8 Bool (append 8 8 Bool x@40 x@41) x@42)
                                       x@43)
                                    x@44)
                                 x@45)
                              x@46)
                           x@47)
                        x@48)
                     x@49)
                  x@50)
               x@51
      x@58 = bvAdd 32 x@6
               (slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@52 x@19) x@5))
      x@59 = aes_hw_encrypt
               [ x@40
               , x@41
               , x@42
               , x@43
               , x@44
               , x@45
               , x@46
               , x@47
               , x@48
               , x@49
               , x@50
               , x@51
               , slice Bool 0 8 24 x@58
               , slice Bool 8 8 16 x@58
               , slice Bool 16 8 8 x@58
               , slice Bool 24 8 0 x@58 ]
               key#1573
      x@60 = ite (Vec 128 Bool) x@23
               (append 120 8 Bool
                  (append 112 8 Bool
                     (append 104 8 Bool
                        (append 96 8 Bool x@57 (slice Bool 0 8 24 x@56))
                        (slice Bool 8 8 16 x@56))
                     (slice Bool 16 8 8 x@56))
                  (slice Bool 24 8 0 x@56))
               (append 96 32 Bool x@57
                  (bvAdd 32 x@56
                     (slice Bool 32 32 0
                        (bvMul 64 x@10 (bvUDiv 64 (bvUDiv 64 x@22 x@5) x@10)))))
      x@61 = bvAdd 32 (slice Bool 96 32 0 x@60)
               (slice Bool 28 32 4 x@26)
      x@62 = aes_hw_encrypt
               [ slice Bool 0 8 120 x@60
               , slice Bool 8 8 112 x@60
               , slice Bool 16 8 104 x@60
               , slice Bool 24 8 96 x@60
               , slice Bool 32 8 88 x@60
               , slice Bool 40 8 80 x@60
               , slice Bool 48 8 72 x@60
               , slice Bool 56 8 64 x@60
               , slice Bool 64 8 56 x@60
               , slice Bool 72 8 48 x@60
               , slice Bool 80 8 40 x@60
               , slice Bool 88 8 32 x@60
               , ite x@2 x@36 (slice Bool 96 8 24 x@60)
                   (slice Bool 0 8 24 x@61)
               , ite x@2 x@36 (slice Bool 104 8 16 x@60)
                   (slice Bool 8 8 16 x@61)
               , ite x@2 x@36 (slice Bool 112 8 8 x@60)
                   (slice Bool 16 8 8 x@61)
               , ite x@2 x@36 (slice Bool 120 8 0 x@60)
                   (slice Bool 24 8 0 x@61) ]
               key#1573
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@17 (bvNat 32 2147483648)))
                        (not (bvult 64 x@29 x@15)))
                     (not
                        (bvult 64 (bvAdd 64 x@29 (append 32 32 Bool x@7 x@17)) x@15)))
                  (bvult 64 (bvNat 64 2147483647) x@19))
               (not
                  (bvEq 1 x@8
                     (bvOr 1 (ite x@3 (bvult 64 x@15 x@31) x@30 x@8)
                        (ite x@3 (bvult 64 x@31 x@19) x@30 x@8)))))
            (Prelude.and (not x@20)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@20 (bvEq 64 x@4 x@22))
                                                                  (not (bvult 64 x@22 (bvNat 64 68719476736))))
                                                               (bvult 64 x@19 x@22))
                                                            (bvult 64 (bvMul 64 x@14 x@21) x@32))
                                                         (bvult 64 (bvNat 64 3071) x@26))
                                                      (Prelude.and (not x@36)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@36 (not (bvult 64 x@35 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@4 x@35)))
                                                                                    (not (bvEq 64 x@4 (bvURem 64 x@35 x@5))))
                                                                                 (bvult 64 x@19 x@35))
                                                                              (bvult 64 (bvAdd 64 x@19 x@37) x@33))
                                                                           (not (bvult 64 x@27 (bvNat 64 18))))
                                                                        (not (bvult 64 x@4 x@27)))
                                                                     (bvult 64 x@19 x@28))
                                                                  (bvult 64 (bvAdd 64 x@19 (bvMul 64 x@13 x@27)) x@33))
                                                               (bvult 64 x@19 (bvAdd 64 x@33 x@35)))
                                                            (bvult 64 x@19 (bvAdd 64 x@33 x@28)))))
                                                   (bvEq 64 x@4 x@39))
                                                (bvEq 1 x@8
                                                   (bvOr 1 (ite x@3 (bvult 64 x@39 x@5) x@30 x@8)
                                                      (ite x@3
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@14 x@19) x@21) x@25)
                                                               x@38))
                                                         x@30
                                                         x@8))))
                                             (bvEq 64 x@4 (bvAnd 64 x@9 x@39)))
                                          (bvEq 64 x@9 x@39))
                                       (bvEq 64 x@4
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@19) x@21)
                                                x@25)
                                             x@38)))
                                    (bvEq 64 x@4
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@19) x@21)
                                             x@25)
                                          x@38)))
                                 (bvEq 64 x@4
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@19) x@21)
                                          x@25)
                                       x@38)))
                              (bvEq 64 x@4
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@19) x@21)
                                       x@25)
                                    x@38)))
                           (bvEq 64 x@4
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@19) x@21)
                                    x@25)
                                 x@38)))
                        (bvEq 64 x@4
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@19) x@21)
                                 x@25)
                              x@38)))
                     (not
                        (bvEq 64 x@4
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@18 x@19) x@21) x@25)
                              x@38))))
                  (bvult 64 x@19 (bvAdd 64 x@22 x@32)))))
         (Prelude.and
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and
                           (Prelude.and
                              (Prelude.and
                                 (Prelude.and
                                    (Prelude.and
                                       (Prelude.and
                                          (Prelude.and
                                             (Prelude.and
                                                (Prelude.and
                                                   (Prelude.and
                                                      (bvEq 8 (at 16 x@2 x@59 0)
                                                         (ite x@2 x@20 (at 16 x@2 x@55 0) (at 16 x@2 x@62 0)))
                                                      (bvEq 8 (at 16 x@2 x@59 1)
                                                         (ite x@2 x@20 (at 16 x@2 x@55 1) (at 16 x@2 x@62 1))))
                                                   (bvEq 8 (at 16 x@2 x@59 2)
                                                      (ite x@2 x@20 (at 16 x@2 x@55 2) (at 16 x@2 x@62 2))))
                                                (bvEq 8 (at 16 x@2 x@59 3)
                                                   (ite x@2 x@20 (at 16 x@2 x@55 3) (at 16 x@2 x@62 3))))
                                             (bvEq 8 (at 16 x@2 x@59 4)
                                                (ite x@2 x@20 (at 16 x@2 x@55 4) (at 16 x@2 x@62 4))))
                                          (bvEq 8 (at 16 x@2 x@59 5)
                                             (ite x@2 x@20 (at 16 x@2 x@55 5) (at 16 x@2 x@62 5))))
                                       (bvEq 8 (at 16 x@2 x@59 6)
                                          (ite x@2 x@20 (at 16 x@2 x@55 6) (at 16 x@2 x@62 6))))
                                    (bvEq 8 (at 16 x@2 x@59 7)
                                       (ite x@2 x@20 (at 16 x@2 x@55 7) (at 16 x@2 x@62 7))))
                                 (bvEq 8 (at 16 x@2 x@59 8)
                                    (ite x@2 x@20 (at 16 x@2 x@55 8) (at 16 x@2 x@62 8))))
                              (bvEq 8 (at 16 x@2 x@59 9)
                                 (ite x@2 x@20 (at 16 x@2 x@55 9) (at 16 x@2 x@62 9))))
                           (bvEq 8 (at 16 x@2 x@59 10)
                              (ite x@2 x@20 (at 16 x@2 x@55 10) (at 16 x@2 x@62 10))))
                        (bvEq 8 (at 16 x@2 x@59 11)
                           (ite x@2 x@20 (at 16 x@2 x@55 11) (at 16 x@2 x@62 11))))
                     (bvEq 8 (at 16 x@2 x@59 12)
                        (ite x@2 x@20 (at 16 x@2 x@55 12) (at 16 x@2 x@62 12))))
                  (bvEq 8 (at 16 x@2 x@59 13)
                     (ite x@2 x@20 (at 16 x@2 x@55 13) (at 16 x@2 x@62 13))))
               (bvEq 8 (at 16 x@2 x@59 14)
                  (ite x@2 x@20 (at 16 x@2 x@55 14) (at 16 x@2 x@62 14))))
            (bvEq 8 (at 16 x@2 x@59 15)
               (ite x@2 x@20 (at 16 x@2 x@55 15) (at 16 x@2 x@62 15)))))

[20:49:46.786] Goal EVP_DecryptUpdate (goal number 141): LLVM points-to
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:205:3 in llvm_points_to
Tags: "Xi postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/AES-GCM.saw:205:3: error: in llvm_points_to
Literal equality postcondition


let { x@1 = Vec 64 Bool
      x@2 = Vec 32 Bool
      x@3 = Vec 8 Bool
      x@4 = Vec 1 Bool
      x@5 = bvNat 64 0
      x@6 = bvNat 64 16
      x@7 = bvNat 32 0
      x@8 = bvNat 1 0
      x@9 = bvNat 32 2
      x@10 = bvNat 64 1
      x@11 = bvNat 64 6
      x@12 = bvNat 64 15
      x@13 = bvNat 64 96
      x@14 = bvNat 64 18446744073709551600
      x@15 = bvNat 64 18446744073709551615
      x@16 = bvNat 64 68719476704
      x@17 = bvNat 64 18446744073709551602
      x@18 = append 28 4 Bool len#1577 (bvNat 4 14)
      x@19 = bvNat 64 18446744073709551601
      x@20 = append 32 32 Bool
               (ite x@2 (at 32 Bool x@18 0) (bvNat 32 4294967295) x@7)
               x@18
      x@21 = bvEq 64 x@5 (bvAdd 64 x@17 x@20)
      x@22 = ite x@1 x@21 x@17 x@19
      x@23 = bvAdd 64 x@20 x@22
      x@24 = bvult 64 x@23 x@13
      x@25 = ite x@1 x@24 x@5 (bvMul 64 x@13 (bvUDiv 64 x@23 x@13))
      x@26 = bvMul 64 x@15 x@25
      x@27 = bvAdd 64 x@23 x@26
      x@28 = bvShr 64 x@27 4
      x@29 = bvMul 64 x@6 x@28
      x@30 = append 60 4 Bool ctx.len#1576 (bvNat 4 1)
      x@31 = bvNat 1 1
      x@32 = bvAdd 64 x@30 x@20
      x@33 = ite x@1 x@21 (bvNat 64 14) x@12
      x@34 = bvAdd 64 x@33 x@25
      x@35 = bvUDiv 64 x@27 x@6
      x@36 = bvMul 64 x@6 x@35
      x@37 = bvEq 64 x@5 x@36
      x@38 = bvMul 64 x@14 x@35
      x@39 = ite x@1 x@37 x@5 x@38
      x@40 = bvAdd 64 x@27 x@39
      x@41 = at 12 x@3 iv#1574 0
      x@42 = at 12 x@3 iv#1574 1
      x@43 = at 12 x@3 iv#1574 2
      x@44 = at 12 x@3 iv#1574 3
      x@45 = at 12 x@3 iv#1574 4
      x@46 = at 12 x@3 iv#1574 5
      x@47 = at 12 x@3 iv#1574 6
      x@48 = at 12 x@3 iv#1574 7
      x@49 = at 12 x@3 iv#1574 8
      x@50 = at 12 x@3 iv#1574 9
      x@51 = at 12 x@3 iv#1574 10
      x@52 = at 12 x@3 iv#1574 11
      x@53 = bvAdd 64 x@12 x@30
      x@54 = bvAdd 32 x@9 (slice Bool 32 32 0 (bvUDiv 64 x@53 x@6))
      x@55 = slice Bool 0 8 24 x@54
      x@56 = slice Bool 8 8 16 x@54
      x@57 = slice Bool 16 8 8 x@54
      x@58 = slice Bool 24 8 0 x@54
      x@59 = append 88 8 Bool
               (append 80 8 Bool
                  (append 72 8 Bool
                     (append 64 8 Bool
                        (append 56 8 Bool
                           (append 48 8 Bool
                              (append 40 8 Bool
                                 (append 32 8 Bool
                                    (append 24 8 Bool
                                       (append 16 8 Bool (append 8 8 Bool x@41 x@42) x@43)
                                       x@44)
                                    x@45)
                                 x@46)
                              x@47)
                           x@48)
                        x@49)
                     x@50)
                  x@51)
               x@52
      x@60 = ite (Vec 128 Bool) x@24
               (append 120 8 Bool
                  (append 112 8 Bool
                     (append 104 8 Bool (append 96 8 Bool x@59 x@55) x@56)
                     x@57)
                  x@58)
               (append 96 32 Bool x@59
                  (bvAdd 32 x@54
                     (slice Bool 32 32 0
                        (bvMul 64 x@11 (bvUDiv 64 (bvUDiv 64 x@23 x@6) x@11)))))
      x@61 = slice Bool 96 32 0 x@60
      x@62 = bvAdd 32 x@9
               (slice Bool 32 32 0 (bvUDiv 64 (bvAdd 64 x@53 x@20) x@6))
      x@63 = bvAdd 32 (bvNat 32 1)
               (ite x@2 x@37 x@61 (bvAdd 32 x@61 (slice Bool 28 32 4 x@27)))
    }
 in EqTrue
      (Prelude.or
         (Prelude.or
            (Prelude.or
               (Prelude.or
                  (Prelude.or
                     (Prelude.or (not (bvult 32 x@18 (bvNat 32 2147483648)))
                        (not (bvult 64 x@30 x@16)))
                     (not
                        (bvult 64 (bvAdd 64 x@30 (append 32 32 Bool x@7 x@18)) x@16)))
                  (bvult 64 (bvNat 64 2147483647) x@20))
               (not
                  (bvEq 1 x@8
                     (bvOr 1 (ite x@4 (bvult 64 x@16 x@32) x@31 x@8)
                        (ite x@4 (bvult 64 x@32 x@20) x@31 x@8)))))
            (Prelude.and (not x@21)
               (Prelude.or
                  (Prelude.or
                     (Prelude.or
                        (Prelude.or
                           (Prelude.or
                              (Prelude.or
                                 (Prelude.or
                                    (Prelude.or
                                       (Prelude.or
                                          (Prelude.or
                                             (Prelude.or
                                                (Prelude.or
                                                   (Prelude.or
                                                      (Prelude.or
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or (Prelude.or x@21 (bvEq 64 x@5 x@23))
                                                                  (not (bvult 64 x@23 (bvNat 64 68719476736))))
                                                               (bvult 64 x@20 x@23))
                                                            (bvult 64 (bvMul 64 x@15 x@22) x@33))
                                                         (bvult 64 (bvNat 64 3071) x@27))
                                                      (Prelude.and (not x@37)
                                                         (Prelude.or
                                                            (Prelude.or
                                                               (Prelude.or
                                                                  (Prelude.or
                                                                     (Prelude.or
                                                                        (Prelude.or
                                                                           (Prelude.or
                                                                              (Prelude.or
                                                                                 (Prelude.or
                                                                                    (Prelude.or
                                                                                       (Prelude.or x@37 (not (bvult 64 x@36 (bvNat 64 288))))
                                                                                       (not (bvult 64 x@5 x@36)))
                                                                                    (not (bvEq 64 x@5 (bvURem 64 x@36 x@6))))
                                                                                 (bvult 64 x@20 x@36))
                                                                              (bvult 64 (bvAdd 64 x@20 x@38) x@34))
                                                                           (not (bvult 64 x@28 (bvNat 64 18))))
                                                                        (not (bvult 64 x@5 x@28)))
                                                                     (bvult 64 x@20 x@29))
                                                                  (bvult 64 (bvAdd 64 x@20 (bvMul 64 x@14 x@28)) x@34))
                                                               (bvult 64 x@20 (bvAdd 64 x@34 x@36)))
                                                            (bvult 64 x@20 (bvAdd 64 x@34 x@29)))))
                                                   (bvEq 64 x@5 x@40))
                                                (bvEq 1 x@8
                                                   (bvOr 1 (ite x@4 (bvult 64 x@40 x@6) x@31 x@8)
                                                      (ite x@4
                                                         (bvult 64 (bvNat 64 4294967295)
                                                            (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@15 x@20) x@22) x@26)
                                                               x@39))
                                                         x@31
                                                         x@8))))
                                             (bvEq 64 x@5 (bvAnd 64 x@10 x@40)))
                                          (bvEq 64 x@10 x@40))
                                       (bvEq 64 x@5
                                          (bvAdd 64
                                             (bvAdd 64
                                                (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551613) x@20) x@22)
                                                x@26)
                                             x@39)))
                                    (bvEq 64 x@5
                                       (bvAdd 64
                                          (bvAdd 64
                                             (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551611) x@20) x@22)
                                             x@26)
                                          x@39)))
                                 (bvEq 64 x@5
                                    (bvAdd 64
                                       (bvAdd 64
                                          (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551609) x@20) x@22)
                                          x@26)
                                       x@39)))
                              (bvEq 64 x@5
                                 (bvAdd 64
                                    (bvAdd 64
                                       (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551607) x@20) x@22)
                                       x@26)
                                    x@39)))
                           (bvEq 64 x@5
                              (bvAdd 64
                                 (bvAdd 64
                                    (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551605) x@20) x@22)
                                    x@26)
                                 x@39)))
                        (bvEq 64 x@5
                           (bvAdd 64
                              (bvAdd 64
                                 (bvAdd 64 (bvAdd 64 (bvNat 64 18446744073709551603) x@20) x@22)
                                 x@26)
                              x@39)))
                     (not
                        (bvEq 64 x@5
                           (bvAdd 64 (bvAdd 64 (bvAdd 64 (bvAdd 64 x@19 x@20) x@22) x@26)
                              x@39))))
                  (bvult 64 x@20 (bvAdd 64 x@23 x@33)))))
         (Prelude.and
            (Prelude.and
               (Prelude.and
                  (Prelude.and
                     (Prelude.and
                        (Prelude.and
                           (Prelude.and
                              (Prelude.and
                                 (Prelude.and
                                    (Prelude.and
                                       (Prelude.and
                                          (Prelude.and
                                             (Prelude.and
                                                (Prelude.and
                                                   (Prelude.and
                                                      (bvEq 8 (ite x@3 x@21 x@41 (slice Bool 0 8 120 x@60)) x@41)
                                                      (bvEq 8 (ite x@3 x@21 x@42 (slice Bool 8 8 112 x@60)) x@42))
                                                   (bvEq 8 (ite x@3 x@21 x@43 (slice Bool 16 8 104 x@60)) x@43))
                                                (bvEq 8 (ite x@3 x@21 x@44 (slice Bool 24 8 96 x@60)) x@44))
                                             (bvEq 8 (ite x@3 x@21 x@45 (slice Bool 32 8 88 x@60)) x@45))
                                          (bvEq 8 (ite x@3 x@21 x@46 (slice Bool 40 8 80 x@60)) x@46))
                                       (bvEq 8 (ite x@3 x@21 x@47 (slice Bool 48 8 72 x@60)) x@47))
                                    (bvEq 8 (ite x@3 x@21 x@48 (slice Bool 56 8 64 x@60)) x@48))
                                 (bvEq 8 (ite x@3 x@21 x@49 (slice Bool 64 8 56 x@60)) x@49))
                              (bvEq 8 (ite x@3 x@21 x@50 (slice Bool 72 8 48 x@60)) x@50))
                           (bvEq 8 (ite x@3 x@21 x@51 (slice Bool 80 8 40 x@60)) x@51))
                        (bvEq 8 (ite x@3 x@21 x@52 (slice Bool 88 8 32 x@60)) x@52))
                     (bvEq 8 (slice Bool 0 8 24 x@62)
                        (ite x@3 x@21 x@55 (slice Bool 0 8 24 x@63))))
                  (bvEq 8 (slice Bool 8 8 16 x@62)
                     (ite x@3 x@21 x@56 (slice Bool 8 8 16 x@63))))
               (bvEq 8 (slice Bool 16 8 8 x@62)
                  (ite x@3 x@21 x@57 (slice Bool 16 8 8 x@63))))
            (bvEq 8 (slice Bool 24 8 0 x@62)
               (ite x@3 x@21 x@58 (slice Bool 24 8 0 x@63)))))

[20:49:50.640] Goal EVP_DecryptUpdate (goal number 142): LLVM points-to (array prefix)
at /home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3 in llvm_points_to_array_prefix
Tags: "output buffer postcondition"
/home/ryanglscott/Documents/Hacking/SAW/aws-lc-verification/SAW/proof/AES/evp-function-specs.saw:115:3: error: in llvm_points_to_array_prefix
postcondition

EqTrue True

Calling Yices to check sat
Running check sat
[20:49:50.879] Proof succeeded! EVP_DecryptUpdate
[20:49:53.448] Assume override EVP_EncryptFinal_ex
[20:49:55.809] Assume override EVP_DecryptFinal_ex
[20:49:55.809] Completed AES-GCM quick check with evp_cipher_update_len=380
2024/02/21 15:49:57 Finished executing saw script verify-AES-GCM-quickcheck.saw.
320.38user 119.75system 7:06.92elapsed 103%CPU (0avgtext+0avgdata 8581972maxresident)k
165440inputs+2952outputs (1739major+51577007minor)pagefaults 0swaps
